{"ast":null,"code":"import { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\n\nconst _v1 = /*@__PURE__*/new Vector3();\n\nconst _v2 = /*@__PURE__*/new Vector3();\n\nclass LOD extends Object3D {\n  constructor() {\n    super();\n    this._currentLevel = 0;\n    this.type = 'LOD';\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: []\n      },\n      isLOD: {\n        value: true\n      }\n    });\n    this.autoUpdate = true;\n  }\n\n  copy(source) {\n    super.copy(source, false);\n    const levels = source.levels;\n\n    for (let i = 0, l = levels.length; i < l; i++) {\n      const level = levels[i];\n      this.addLevel(level.object.clone(), level.distance);\n    }\n\n    this.autoUpdate = source.autoUpdate;\n    return this;\n  }\n\n  addLevel(object, distance = 0) {\n    distance = Math.abs(distance);\n    const levels = this.levels;\n    let l;\n\n    for (l = 0; l < levels.length; l++) {\n      if (distance < levels[l].distance) {\n        break;\n      }\n    }\n\n    levels.splice(l, 0, {\n      distance: distance,\n      object: object\n    });\n    this.add(object);\n    return this;\n  }\n\n  getCurrentLevel() {\n    return this._currentLevel;\n  }\n\n  getObjectForDistance(distance) {\n    const levels = this.levels;\n\n    if (levels.length > 0) {\n      let i, l;\n\n      for (i = 1, l = levels.length; i < l; i++) {\n        if (distance < levels[i].distance) {\n          break;\n        }\n      }\n\n      return levels[i - 1].object;\n    }\n\n    return null;\n  }\n\n  raycast(raycaster, intersects) {\n    const levels = this.levels;\n\n    if (levels.length > 0) {\n      _v1.setFromMatrixPosition(this.matrixWorld);\n\n      const distance = raycaster.ray.origin.distanceTo(_v1);\n      this.getObjectForDistance(distance).raycast(raycaster, intersects);\n    }\n  }\n\n  update(camera) {\n    const levels = this.levels;\n\n    if (levels.length > 1) {\n      _v1.setFromMatrixPosition(camera.matrixWorld);\n\n      _v2.setFromMatrixPosition(this.matrixWorld);\n\n      const distance = _v1.distanceTo(_v2) / camera.zoom;\n      levels[0].object.visible = true;\n      let i, l;\n\n      for (i = 1, l = levels.length; i < l; i++) {\n        if (distance >= levels[i].distance) {\n          levels[i - 1].object.visible = false;\n          levels[i].object.visible = true;\n        } else {\n          break;\n        }\n      }\n\n      this._currentLevel = i - 1;\n\n      for (; i < l; i++) {\n        levels[i].object.visible = false;\n      }\n    }\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    if (this.autoUpdate === false) data.object.autoUpdate = false;\n    data.object.levels = [];\n    const levels = this.levels;\n\n    for (let i = 0, l = levels.length; i < l; i++) {\n      const level = levels[i];\n      data.object.levels.push({\n        object: level.object.uuid,\n        distance: level.distance\n      });\n    }\n\n    return data;\n  }\n\n}\n\nexport { LOD };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/objects/LOD.js"],"names":["Vector3","Object3D","_v1","_v2","LOD","constructor","_currentLevel","type","Object","defineProperties","levels","enumerable","value","isLOD","autoUpdate","copy","source","i","l","length","level","addLevel","object","clone","distance","Math","abs","splice","add","getCurrentLevel","getObjectForDistance","raycast","raycaster","intersects","setFromMatrixPosition","matrixWorld","ray","origin","distanceTo","update","camera","zoom","visible","toJSON","meta","data","push","uuid"],"mappings":"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","sourcesContent":["import { Vector3 } from '../math/Vector3.js';\r\nimport { Object3D } from '../core/Object3D.js';\r\n\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _v2 = /*@__PURE__*/ new Vector3();\r\n\r\nclass LOD extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._currentLevel = 0;\r\n\r\n\t\tthis.type = 'LOD';\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tisLOD: {\r\n\t\t\t\tvalue: true,\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.autoUpdate = true;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source, false );\r\n\r\n\t\tconst levels = source.levels;\r\n\r\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst level = levels[ i ];\r\n\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t\t}\r\n\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddLevel( object, distance = 0 ) {\r\n\r\n\t\tdistance = Math.abs( distance );\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tlet l;\r\n\r\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\t\tthis.add( object );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetCurrentLevel() {\r\n\r\n\t\treturn this._currentLevel;\r\n\r\n\t}\r\n\r\n\tgetObjectForDistance( distance ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 0 ) {\r\n\r\n\t\t\tlet i, l;\r\n\r\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn levels[ i - 1 ].object;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 0 ) {\r\n\r\n\t\t\t_v1.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1 );\r\n\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( camera ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\t_v1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t_v2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tconst distance = _v1.distanceTo( _v2 ) / camera.zoom;\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tlet i, l;\r\n\r\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentLevel = i - 1;\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\r\n\r\n\t\tdata.object.levels = [];\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst level = levels[ i ];\r\n\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { LOD };\r\n"]},"metadata":{},"sourceType":"module"}