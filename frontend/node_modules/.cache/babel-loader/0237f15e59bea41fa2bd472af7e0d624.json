{"ast":null,"code":"import { PolyhedronGeometry } from './PolyhedronGeometry.js';\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n  constructor(radius = 1, detail = 0) {\n    const vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n    const indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n    super(vertices, indices, radius, detail);\n    this.type = 'TetrahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  static fromJSON(data) {\n    return new TetrahedronGeometry(data.radius, data.detail);\n  }\n\n}\n\nexport { TetrahedronGeometry, TetrahedronGeometry as TetrahedronBufferGeometry };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/geometries/TetrahedronGeometry.js"],"names":["PolyhedronGeometry","TetrahedronGeometry","constructor","radius","detail","vertices","indices","type","parameters","fromJSON","data","TetrahedronBufferGeometry"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,yBAAnC;;AAEA,MAAMC,mBAAN,SAAkCD,kBAAlC,CAAqD;AAEpDE,EAAAA,WAAW,CAAEC,MAAM,GAAG,CAAX,EAAcC,MAAM,GAAG,CAAvB,EAA2B;AAErC,UAAMC,QAAQ,GAAG,CAChB,CADgB,EACb,CADa,EACV,CADU,EACN,CAAE,CADI,EACD,CAAE,CADD,EACI,CADJ,EACQ,CAAE,CADV,EACa,CADb,EACgB,CAAE,CADlB,EACsB,CADtB,EACyB,CAAE,CAD3B,EAC8B,CAAE,CADhC,CAAjB;AAIA,UAAMC,OAAO,GAAG,CACf,CADe,EACZ,CADY,EACT,CADS,EACL,CADK,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,CADV,EACa,CADb,EACgB,CADhB,EACmB,CADnB,CAAhB;AAIA,UAAOD,QAAP,EAAiBC,OAAjB,EAA0BH,MAA1B,EAAkCC,MAAlC;AAEA,SAAKG,IAAL,GAAY,qBAAZ;AAEA,SAAKC,UAAL,GAAkB;AACjBL,MAAAA,MAAM,EAAEA,MADS;AAEjBC,MAAAA,MAAM,EAAEA;AAFS,KAAlB;AAKA;;AAEc,SAARK,QAAQ,CAAEC,IAAF,EAAS;AAEvB,WAAO,IAAIT,mBAAJ,CAAyBS,IAAI,CAACP,MAA9B,EAAsCO,IAAI,CAACN,MAA3C,CAAP;AAEA;;AA3BmD;;AA+BrD,SAASH,mBAAT,EAA8BA,mBAAmB,IAAIU,yBAArD","sourcesContent":["import { PolyhedronGeometry } from './PolyhedronGeometry.js';\r\n\r\nclass TetrahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst vertices = [\r\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { TetrahedronGeometry, TetrahedronGeometry as TetrahedronBufferGeometry };\r\n"]},"metadata":{},"sourceType":"module"}