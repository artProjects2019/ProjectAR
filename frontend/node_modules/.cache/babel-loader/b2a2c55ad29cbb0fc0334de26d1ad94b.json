{"ast":null,"code":"export default\n/* glsl */\n`\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.roughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n\n#ifdef IOR\n\n\t#ifdef SPECULAR\n\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\n\t\t#endif\n\n\t\t#ifdef USE_SPECULARCOLORMAP\n\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\n\t\t#endif\n\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\n\t#else\n\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\n\t#endif\n\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n\n#endif\n\n#ifdef USE_CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheenColor;\n\n\t#ifdef USE_SHEENCOLORMAP\n\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\n\t#endif\n\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\n\t#ifdef USE_SHEENROUGHNESSMAP\n\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\n\t#endif\n\n#endif\n`;","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.js"],"names":[],"mappings":"AAAA;AAAe;AAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9FA","sourcesContent":["export default /* glsl */`\r\nPhysicalMaterial material;\r\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\r\n\r\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\r\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\r\n\r\nmaterial.roughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\r\nmaterial.roughness += geometryRoughness;\r\nmaterial.roughness = min( material.roughness, 1.0 );\r\n\r\n#ifdef IOR\r\n\r\n\t#ifdef SPECULAR\r\n\r\n\t\tfloat specularIntensityFactor = specularIntensity;\r\n\t\tvec3 specularColorFactor = specularColor;\r\n\r\n\t\t#ifdef USE_SPECULARINTENSITYMAP\r\n\r\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\r\n\r\n\t\t#endif\r\n\r\n\t\t#ifdef USE_SPECULARCOLORMAP\r\n\r\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\r\n\r\n\t\t#endif\r\n\r\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\r\n\r\n\t#else\r\n\r\n\t\tfloat specularIntensityFactor = 1.0;\r\n\t\tvec3 specularColorFactor = vec3( 1.0 );\r\n\t\tmaterial.specularF90 = 1.0;\r\n\r\n\t#endif\r\n\r\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\r\n\r\n#else\r\n\r\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\r\n\tmaterial.specularF90 = 1.0;\r\n\r\n#endif\r\n\r\n#ifdef USE_CLEARCOAT\r\n\r\n\tmaterial.clearcoat = clearcoat;\r\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\r\n\tmaterial.clearcoatF0 = vec3( 0.04 );\r\n\tmaterial.clearcoatF90 = 1.0;\r\n\r\n\t#ifdef USE_CLEARCOATMAP\r\n\r\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\r\n\r\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\r\n\r\n\t#endif\r\n\r\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\r\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\r\n\tmaterial.clearcoatRoughness += geometryRoughness;\r\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\r\n\r\n#endif\r\n\r\n#ifdef USE_SHEEN\r\n\r\n\tmaterial.sheenColor = sheenColor;\r\n\r\n\t#ifdef USE_SHEENCOLORMAP\r\n\r\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\r\n\r\n\t#endif\r\n\r\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\r\n\r\n\t#ifdef USE_SHEENROUGHNESSMAP\r\n\r\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}