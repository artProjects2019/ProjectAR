{"ast":null,"code":"import { Vector3 } from '../../math/Vector3.js';\nimport { Curve } from '../core/Curve.js';\n\nclass LineCurve3 extends Curve {\n  constructor(v1 = new Vector3(), v2 = new Vector3()) {\n    super();\n    this.type = 'LineCurve3';\n    this.isLineCurve3 = true;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  } // Line curve is linear, so we can overwrite default getPointAt\n\n\n  getPointAt(u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  }\n\n}\n\nexport { LineCurve3 };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/extras/curves/LineCurve3.js"],"names":["Vector3","Curve","LineCurve3","constructor","v1","v2","type","isLineCurve3","getPoint","t","optionalTarget","point","copy","sub","multiplyScalar","add","getPointAt","u","source","toJSON","data","toArray","fromJSON","json","fromArray"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEA,MAAMC,UAAN,SAAyBD,KAAzB,CAA+B;AAE9BE,EAAAA,WAAW,CAAEC,EAAE,GAAG,IAAIJ,OAAJ,EAAP,EAAsBK,EAAE,GAAG,IAAIL,OAAJ,EAA3B,EAA2C;AAErD;AAEA,SAAKM,IAAL,GAAY,YAAZ;AACA,SAAKC,YAAL,GAAoB,IAApB;AAEA,SAAKH,EAAL,GAAUA,EAAV;AACA,SAAKC,EAAL,GAAUA,EAAV;AAEA;;AACDG,EAAAA,QAAQ,CAAEC,CAAF,EAAKC,cAAc,GAAG,IAAIV,OAAJ,EAAtB,EAAsC;AAE7C,UAAMW,KAAK,GAAGD,cAAd;;AAEA,QAAKD,CAAC,KAAK,CAAX,EAAe;AAEdE,MAAAA,KAAK,CAACC,IAAN,CAAY,KAAKP,EAAjB;AAEA,KAJD,MAIO;AAENM,MAAAA,KAAK,CAACC,IAAN,CAAY,KAAKP,EAAjB,EAAsBQ,GAAtB,CAA2B,KAAKT,EAAhC;AACAO,MAAAA,KAAK,CAACG,cAAN,CAAsBL,CAAtB,EAA0BM,GAA1B,CAA+B,KAAKX,EAApC;AAEA;;AAED,WAAOO,KAAP;AAEA,GA9B6B,CA+B9B;;;AACAK,EAAAA,UAAU,CAAEC,CAAF,EAAKP,cAAL,EAAsB;AAE/B,WAAO,KAAKF,QAAL,CAAeS,CAAf,EAAkBP,cAAlB,CAAP;AAEA;;AACDE,EAAAA,IAAI,CAAEM,MAAF,EAAW;AAEd,UAAMN,IAAN,CAAYM,MAAZ;AAEA,SAAKd,EAAL,CAAQQ,IAAR,CAAcM,MAAM,CAACd,EAArB;AACA,SAAKC,EAAL,CAAQO,IAAR,CAAcM,MAAM,CAACb,EAArB;AAEA,WAAO,IAAP;AAEA;;AACDc,EAAAA,MAAM,GAAG;AAER,UAAMC,IAAI,GAAG,MAAMD,MAAN,EAAb;AAEAC,IAAAA,IAAI,CAAChB,EAAL,GAAU,KAAKA,EAAL,CAAQiB,OAAR,EAAV;AACAD,IAAAA,IAAI,CAACf,EAAL,GAAU,KAAKA,EAAL,CAAQgB,OAAR,EAAV;AAEA,WAAOD,IAAP;AAEA;;AACDE,EAAAA,QAAQ,CAAEC,IAAF,EAAS;AAEhB,UAAMD,QAAN,CAAgBC,IAAhB;AAEA,SAAKnB,EAAL,CAAQoB,SAAR,CAAmBD,IAAI,CAACnB,EAAxB;AACA,SAAKC,EAAL,CAAQmB,SAAR,CAAmBD,IAAI,CAAClB,EAAxB;AAEA,WAAO,IAAP;AAEA;;AAlE6B;;AAsE/B,SAASH,UAAT","sourcesContent":["import { Vector3 } from '../../math/Vector3.js';\r\nimport { Curve } from '../core/Curve.js';\r\n\r\nclass LineCurve3 extends Curve {\r\n\r\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'LineCurve3';\r\n\t\tthis.isLineCurve3 = true;\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\tgetPointAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t}\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { LineCurve3 };\r\n"]},"metadata":{},"sourceType":"module"}