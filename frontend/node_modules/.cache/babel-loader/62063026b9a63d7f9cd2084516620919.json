{"ast":null,"code":"import { Object3D } from '../core/Object3D.js';\nimport { Color } from '../math/Color.js';\n\nclass Light extends Object3D {\n  constructor(color, intensity = 1) {\n    super();\n    this.type = 'Light';\n    this.color = new Color(color);\n    this.intensity = intensity;\n  }\n\n  dispose() {// Empty here in base class; some subclasses override.\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n    return this;\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n    if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n    if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n    return data;\n  }\n\n}\n\nLight.prototype.isLight = true;\nexport { Light };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/lights/Light.js"],"names":["Object3D","Color","Light","constructor","color","intensity","type","dispose","copy","source","toJSON","meta","data","object","getHex","groundColor","undefined","distance","angle","decay","penumbra","shadow","prototype","isLight"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEA,MAAMC,KAAN,SAAoBF,QAApB,CAA6B;AAE5BG,EAAAA,WAAW,CAAEC,KAAF,EAASC,SAAS,GAAG,CAArB,EAAyB;AAEnC;AAEA,SAAKC,IAAL,GAAY,OAAZ;AAEA,SAAKF,KAAL,GAAa,IAAIH,KAAJ,CAAWG,KAAX,CAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AAEA;;AAEDE,EAAAA,OAAO,GAAG,CAET;AAEA;;AAEDC,EAAAA,IAAI,CAAEC,MAAF,EAAW;AAEd,UAAMD,IAAN,CAAYC,MAAZ;AAEA,SAAKL,KAAL,CAAWI,IAAX,CAAiBC,MAAM,CAACL,KAAxB;AACA,SAAKC,SAAL,GAAiBI,MAAM,CAACJ,SAAxB;AAEA,WAAO,IAAP;AAEA;;AAEDK,EAAAA,MAAM,CAAEC,IAAF,EAAS;AAEd,UAAMC,IAAI,GAAG,MAAMF,MAAN,CAAcC,IAAd,CAAb;AAEAC,IAAAA,IAAI,CAACC,MAAL,CAAYT,KAAZ,GAAoB,KAAKA,KAAL,CAAWU,MAAX,EAApB;AACAF,IAAAA,IAAI,CAACC,MAAL,CAAYR,SAAZ,GAAwB,KAAKA,SAA7B;AAEA,QAAK,KAAKU,WAAL,KAAqBC,SAA1B,EAAsCJ,IAAI,CAACC,MAAL,CAAYE,WAAZ,GAA0B,KAAKA,WAAL,CAAiBD,MAAjB,EAA1B;AAEtC,QAAK,KAAKG,QAAL,KAAkBD,SAAvB,EAAmCJ,IAAI,CAACC,MAAL,CAAYI,QAAZ,GAAuB,KAAKA,QAA5B;AACnC,QAAK,KAAKC,KAAL,KAAeF,SAApB,EAAgCJ,IAAI,CAACC,MAAL,CAAYK,KAAZ,GAAoB,KAAKA,KAAzB;AAChC,QAAK,KAAKC,KAAL,KAAeH,SAApB,EAAgCJ,IAAI,CAACC,MAAL,CAAYM,KAAZ,GAAoB,KAAKA,KAAzB;AAChC,QAAK,KAAKC,QAAL,KAAkBJ,SAAvB,EAAmCJ,IAAI,CAACC,MAAL,CAAYO,QAAZ,GAAuB,KAAKA,QAA5B;AAEnC,QAAK,KAAKC,MAAL,KAAgBL,SAArB,EAAiCJ,IAAI,CAACC,MAAL,CAAYQ,MAAZ,GAAqB,KAAKA,MAAL,CAAYX,MAAZ,EAArB;AAEjC,WAAOE,IAAP;AAEA;;AAhD2B;;AAoD7BV,KAAK,CAACoB,SAAN,CAAgBC,OAAhB,GAA0B,IAA1B;AAEA,SAASrB,KAAT","sourcesContent":["import { Object3D } from '../core/Object3D.js';\r\nimport { Color } from '../math/Color.js';\r\n\r\nclass Light extends Object3D {\r\n\r\n\tconstructor( color, intensity = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'Light';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.intensity = intensity;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\t// Empty here in base class; some subclasses override.\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.intensity = source.intensity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\r\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nLight.prototype.isLight = true;\r\n\r\nexport { Light };\r\n"]},"metadata":{},"sourceType":"module"}