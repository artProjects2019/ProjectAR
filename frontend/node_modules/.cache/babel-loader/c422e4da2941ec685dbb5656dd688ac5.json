{"ast":null,"code":"import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\n/**\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n *\r\n *  flatShading: <bool>\r\n * }\r\n */\n\nclass MeshNormalMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.type = 'MeshNormalMaterial';\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.flatShading = false;\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.flatShading = source.flatShading;\n    return this;\n  }\n\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\nexport { MeshNormalMaterial };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/materials/MeshNormalMaterial.js"],"names":["TangentSpaceNormalMap","Material","Vector2","MeshNormalMaterial","constructor","parameters","type","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","wireframe","wireframeLinewidth","fog","flatShading","setValues","copy","source","prototype","isMeshNormalMaterial"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,iBAAtC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAN,SAAiCF,QAAjC,CAA0C;AAEzCG,EAAAA,WAAW,CAAEC,UAAF,EAAe;AAEzB;AAEA,SAAKC,IAAL,GAAY,oBAAZ;AAEA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,SAAL,GAAiB,CAAjB;AAEA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,aAAL,GAAqBV,qBAArB;AACA,SAAKW,WAAL,GAAmB,IAAIT,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAnB;AAEA,SAAKU,eAAL,GAAuB,IAAvB;AACA,SAAKC,iBAAL,GAAyB,CAAzB;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AAEA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,kBAAL,GAA0B,CAA1B;AAEA,SAAKC,GAAL,GAAW,KAAX;AAEA,SAAKC,WAAL,GAAmB,KAAnB;AAEA,SAAKC,SAAL,CAAgBd,UAAhB;AAEA;;AAEDe,EAAAA,IAAI,CAAEC,MAAF,EAAW;AAEd,UAAMD,IAAN,CAAYC,MAAZ;AAEA,SAAKd,OAAL,GAAec,MAAM,CAACd,OAAtB;AACA,SAAKC,SAAL,GAAiBa,MAAM,CAACb,SAAxB;AAEA,SAAKC,SAAL,GAAiBY,MAAM,CAACZ,SAAxB;AACA,SAAKC,aAAL,GAAqBW,MAAM,CAACX,aAA5B;AACA,SAAKC,WAAL,CAAiBS,IAAjB,CAAuBC,MAAM,CAACV,WAA9B;AAEA,SAAKC,eAAL,GAAuBS,MAAM,CAACT,eAA9B;AACA,SAAKC,iBAAL,GAAyBQ,MAAM,CAACR,iBAAhC;AACA,SAAKC,gBAAL,GAAwBO,MAAM,CAACP,gBAA/B;AAEA,SAAKC,SAAL,GAAiBM,MAAM,CAACN,SAAxB;AACA,SAAKC,kBAAL,GAA0BK,MAAM,CAACL,kBAAjC;AAEA,SAAKE,WAAL,GAAmBG,MAAM,CAACH,WAA1B;AAEA,WAAO,IAAP;AAEA;;AApDwC;;AAwD1Cf,kBAAkB,CAACmB,SAAnB,CAA6BC,oBAA7B,GAAoD,IAApD;AAEA,SAASpB,kBAAT","sourcesContent":["import { TangentSpaceNormalMap } from '../constants.js';\r\nimport { Material } from './Material.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\n\r\n/**\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n *\r\n *  flatShading: <bool>\r\n * }\r\n */\r\n\r\nclass MeshNormalMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false;\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n\r\nexport { MeshNormalMaterial };\r\n"]},"metadata":{},"sourceType":"module"}