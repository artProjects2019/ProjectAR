{"ast":null,"code":"import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\n/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *  gradientMap: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n * }\r\n */\n\nclass MeshToonMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.defines = {\n      'TOON': ''\n    };\n    this.type = 'MeshToonMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.gradientMap = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.gradientMap = source.gradientMap;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    return this;\n  }\n\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\nexport { MeshToonMaterial };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/materials/MeshToonMaterial.js"],"names":["TangentSpaceNormalMap","Material","Vector2","Color","MeshToonMaterial","constructor","parameters","defines","type","color","map","gradientMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","setValues","copy","source","prototype","isMeshToonMaterial"],"mappings":"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","sourcesContent":["import { TangentSpaceNormalMap } from '../constants.js';\r\nimport { Material } from './Material.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\nimport { Color } from '../math/Color.js';\r\n\r\n/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *  gradientMap: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n * }\r\n */\r\n\r\nclass MeshToonMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.defines = { 'TOON': '' };\r\n\r\n\t\tthis.type = 'MeshToonMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.gradientMap = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\t\tthis.gradientMap = source.gradientMap;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\r\n\r\nexport { MeshToonMaterial };\r\n"]},"metadata":{},"sourceType":"module"}