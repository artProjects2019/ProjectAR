{"ast":null,"code":"import { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n  constructor() {\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    const te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  }\n\n  identity() {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  clone() {\n    return new Matrix4().fromArray(this.elements);\n  }\n\n  copy(m) {\n    const te = this.elements;\n    const me = m.elements;\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    te[9] = me[9];\n    te[10] = me[10];\n    te[11] = me[11];\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    te[15] = me[15];\n    return this;\n  }\n\n  copyPosition(m) {\n    const te = this.elements,\n          me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  }\n\n  setFromMatrix3(m) {\n    const me = m.elements;\n    this.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  extractBasis(xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  }\n\n  makeBasis(xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  extractRotation(m) {\n    // this method does not support reflection matrices\n    const te = this.elements;\n    const me = m.elements;\n\n    const scaleX = 1 / _v1.setFromMatrixColumn(m, 0).length();\n\n    const scaleY = 1 / _v1.setFromMatrixColumn(m, 1).length();\n\n    const scaleZ = 1 / _v1.setFromMatrixColumn(m, 2).length();\n\n    te[0] = me[0] * scaleX;\n    te[1] = me[1] * scaleX;\n    te[2] = me[2] * scaleX;\n    te[3] = 0;\n    te[4] = me[4] * scaleY;\n    te[5] = me[5] * scaleY;\n    te[6] = me[6] * scaleY;\n    te[7] = 0;\n    te[8] = me[8] * scaleZ;\n    te[9] = me[9] * scaleZ;\n    te[10] = me[10] * scaleZ;\n    te[11] = 0;\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  }\n\n  makeRotationFromEuler(euler) {\n    if (!(euler && euler.isEuler)) {\n      console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    }\n\n    const te = this.elements;\n    const x = euler.x,\n          y = euler.y,\n          z = euler.z;\n    const a = Math.cos(x),\n          b = Math.sin(x);\n    const c = Math.cos(y),\n          d = Math.sin(y);\n    const e = Math.cos(z),\n          f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      const ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      const ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      const ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      const ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      const ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      const ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // bottom row\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // last column\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  }\n\n  makeRotationFromQuaternion(q) {\n    return this.compose(_zero, q, _one);\n  }\n\n  lookAt(eye, target, up) {\n    const te = this.elements;\n\n    _z.subVectors(eye, target);\n\n    if (_z.lengthSq() === 0) {\n      // eye and target are in the same position\n      _z.z = 1;\n    }\n\n    _z.normalize();\n\n    _x.crossVectors(up, _z);\n\n    if (_x.lengthSq() === 0) {\n      // up and z are parallel\n      if (Math.abs(up.z) === 1) {\n        _z.x += 0.0001;\n      } else {\n        _z.z += 0.0001;\n      }\n\n      _z.normalize();\n\n      _x.crossVectors(up, _z);\n    }\n\n    _x.normalize();\n\n    _y.crossVectors(_z, _x);\n\n    te[0] = _x.x;\n    te[4] = _y.x;\n    te[8] = _z.x;\n    te[1] = _x.y;\n    te[5] = _y.y;\n    te[9] = _z.y;\n    te[2] = _x.z;\n    te[6] = _y.z;\n    te[10] = _z.z;\n    return this;\n  }\n\n  multiply(m, n) {\n    if (n !== undefined) {\n      console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  }\n\n  premultiply(m) {\n    return this.multiplyMatrices(m, this);\n  }\n\n  multiplyMatrices(a, b) {\n    const ae = a.elements;\n    const be = b.elements;\n    const te = this.elements;\n    const a11 = ae[0],\n          a12 = ae[4],\n          a13 = ae[8],\n          a14 = ae[12];\n    const a21 = ae[1],\n          a22 = ae[5],\n          a23 = ae[9],\n          a24 = ae[13];\n    const a31 = ae[2],\n          a32 = ae[6],\n          a33 = ae[10],\n          a34 = ae[14];\n    const a41 = ae[3],\n          a42 = ae[7],\n          a43 = ae[11],\n          a44 = ae[15];\n    const b11 = be[0],\n          b12 = be[4],\n          b13 = be[8],\n          b14 = be[12];\n    const b21 = be[1],\n          b22 = be[5],\n          b23 = be[9],\n          b24 = be[13];\n    const b31 = be[2],\n          b32 = be[6],\n          b33 = be[10],\n          b34 = be[14];\n    const b41 = be[3],\n          b42 = be[7],\n          b43 = be[11],\n          b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  }\n\n  multiplyScalar(s) {\n    const te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  }\n\n  determinant() {\n    const te = this.elements;\n    const n11 = te[0],\n          n12 = te[4],\n          n13 = te[8],\n          n14 = te[12];\n    const n21 = te[1],\n          n22 = te[5],\n          n23 = te[9],\n          n24 = te[13];\n    const n31 = te[2],\n          n32 = te[6],\n          n33 = te[10],\n          n34 = te[14];\n    const n41 = te[3],\n          n42 = te[7],\n          n43 = te[11],\n          n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  }\n\n  transpose() {\n    const te = this.elements;\n    let tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  }\n\n  setPosition(x, y, z) {\n    const te = this.elements;\n\n    if (x.isVector3) {\n      te[12] = x.x;\n      te[13] = x.y;\n      te[14] = x.z;\n    } else {\n      te[12] = x;\n      te[13] = y;\n      te[14] = z;\n    }\n\n    return this;\n  }\n\n  invert() {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    const te = this.elements,\n          n11 = te[0],\n          n21 = te[1],\n          n31 = te[2],\n          n41 = te[3],\n          n12 = te[4],\n          n22 = te[5],\n          n32 = te[6],\n          n42 = te[7],\n          n13 = te[8],\n          n23 = te[9],\n          n33 = te[10],\n          n43 = te[11],\n          n14 = te[12],\n          n24 = te[13],\n          n34 = te[14],\n          n44 = te[15],\n          t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n          t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n          t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n          t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n    if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    const detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n    te[4] = t12 * detInv;\n    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n    te[8] = t13 * detInv;\n    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n    te[12] = t14 * detInv;\n    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n    return this;\n  }\n\n  scale(v) {\n    const te = this.elements;\n    const x = v.x,\n          y = v.y,\n          z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  }\n\n  getMaxScaleOnAxis() {\n    const te = this.elements;\n    const scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    const scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    const scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  }\n\n  makeTranslation(x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  }\n\n  makeRotationX(theta) {\n    const c = Math.cos(theta),\n          s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  makeRotationY(theta) {\n    const c = Math.cos(theta),\n          s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  makeRotationZ(theta) {\n    const c = Math.cos(theta),\n          s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  makeRotationAxis(axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const t = 1 - c;\n    const x = axis.x,\n          y = axis.y,\n          z = axis.z;\n    const tx = t * x,\n          ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  makeScale(x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  makeShear(xy, xz, yx, yz, zx, zy) {\n    this.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n    return this;\n  }\n\n  compose(position, quaternion, scale) {\n    const te = this.elements;\n    const x = quaternion._x,\n          y = quaternion._y,\n          z = quaternion._z,\n          w = quaternion._w;\n    const x2 = x + x,\n          y2 = y + y,\n          z2 = z + z;\n    const xx = x * x2,\n          xy = x * y2,\n          xz = x * z2;\n    const yy = y * y2,\n          yz = y * z2,\n          zz = z * z2;\n    const wx = w * x2,\n          wy = w * y2,\n          wz = w * z2;\n    const sx = scale.x,\n          sy = scale.y,\n          sz = scale.z;\n    te[0] = (1 - (yy + zz)) * sx;\n    te[1] = (xy + wz) * sx;\n    te[2] = (xz - wy) * sx;\n    te[3] = 0;\n    te[4] = (xy - wz) * sy;\n    te[5] = (1 - (xx + zz)) * sy;\n    te[6] = (yz + wx) * sy;\n    te[7] = 0;\n    te[8] = (xz + wy) * sz;\n    te[9] = (yz - wx) * sz;\n    te[10] = (1 - (xx + yy)) * sz;\n    te[11] = 0;\n    te[12] = position.x;\n    te[13] = position.y;\n    te[14] = position.z;\n    te[15] = 1;\n    return this;\n  }\n\n  decompose(position, quaternion, scale) {\n    const te = this.elements;\n\n    let sx = _v1.set(te[0], te[1], te[2]).length();\n\n    const sy = _v1.set(te[4], te[5], te[6]).length();\n\n    const sz = _v1.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n    const det = this.determinant();\n    if (det < 0) sx = -sx;\n    position.x = te[12];\n    position.y = te[13];\n    position.z = te[14]; // scale the rotation part\n\n    _m1.copy(this);\n\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n    _m1.elements[0] *= invSX;\n    _m1.elements[1] *= invSX;\n    _m1.elements[2] *= invSX;\n    _m1.elements[4] *= invSY;\n    _m1.elements[5] *= invSY;\n    _m1.elements[6] *= invSY;\n    _m1.elements[8] *= invSZ;\n    _m1.elements[9] *= invSZ;\n    _m1.elements[10] *= invSZ;\n    quaternion.setFromRotationMatrix(_m1);\n    scale.x = sx;\n    scale.y = sy;\n    scale.z = sz;\n    return this;\n  }\n\n  makePerspective(left, right, top, bottom, near, far) {\n    if (far === undefined) {\n      console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n    }\n\n    const te = this.elements;\n    const x = 2 * near / (right - left);\n    const y = 2 * near / (top - bottom);\n    const a = (right + left) / (right - left);\n    const b = (top + bottom) / (top - bottom);\n    const c = -(far + near) / (far - near);\n    const d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  }\n\n  makeOrthographic(left, right, top, bottom, near, far) {\n    const te = this.elements;\n    const w = 1.0 / (right - left);\n    const h = 1.0 / (top - bottom);\n    const p = 1.0 / (far - near);\n    const x = (right + left) * w;\n    const y = (top + bottom) * h;\n    const z = (far + near) * p;\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  }\n\n  equals(matrix) {\n    const te = this.elements;\n    const me = matrix.elements;\n\n    for (let i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < 16; i++) {\n      this.elements[i] = array[i + offset];\n    }\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    const te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  }\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1 = /*@__PURE__*/new Vector3();\n\nconst _m1 = /*@__PURE__*/new Matrix4();\n\nconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\nconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\nconst _x = /*@__PURE__*/new Vector3();\n\nconst _y = /*@__PURE__*/new Vector3();\n\nconst _z = /*@__PURE__*/new Vector3();\n\nexport { Matrix4 };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/math/Matrix4.js"],"names":["Vector3","Matrix4","constructor","elements","arguments","length","console","error","set","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","clone","fromArray","copy","m","me","copyPosition","setFromMatrix3","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","x","y","z","extractRotation","scaleX","_v1","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","a","Math","cos","b","sin","c","d","e","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","q","compose","_zero","_one","lookAt","eye","target","up","_z","subVectors","lengthSq","normalize","_x","crossVectors","abs","_y","multiply","n","undefined","warn","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyScalar","s","determinant","transpose","tmp","setPosition","isVector3","invert","t11","t12","t13","t14","det","detInv","scale","v","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","sqrt","max","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","angle","t","tx","ty","makeScale","makeShear","xy","xz","yx","yz","zx","zy","position","quaternion","w","_w","x2","y2","z2","xx","yy","zz","wx","wy","wz","sx","sy","sz","decompose","_m1","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","p","equals","matrix","i","array","offset","toArray","prototype","isMatrix4"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;;AAEA,MAAMC,OAAN,CAAc;AAEbC,EAAAA,WAAW,GAAG;AAEb,SAAKC,QAAL,GAAgB,CAEf,CAFe,EAEZ,CAFY,EAET,CAFS,EAEN,CAFM,EAGf,CAHe,EAGZ,CAHY,EAGT,CAHS,EAGN,CAHM,EAIf,CAJe,EAIZ,CAJY,EAIT,CAJS,EAIN,CAJM,EAKf,CALe,EAKZ,CALY,EAKT,CALS,EAKN,CALM,CAAhB;;AASA,QAAKC,SAAS,CAACC,MAAV,GAAmB,CAAxB,EAA4B;AAE3BC,MAAAA,OAAO,CAACC,KAAR,CAAe,+EAAf;AAEA;AAED;;AAEDC,EAAAA,GAAG,CAAEC,GAAF,EAAOC,GAAP,EAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,GAArC,EAA0CC,GAA1C,EAA+CC,GAA/C,EAAoDC,GAApD,EAAyDC,GAAzD,EAA8DC,GAA9D,EAAmEC,GAAnE,EAAwEC,GAAxE,EAA6EC,GAA7E,EAAmF;AAErF,UAAMC,EAAE,GAAG,KAAKtB,QAAhB;AAEAsB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUhB,GAAV;AAAegB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUf,GAAV;AAAee,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUd,GAAV;AAAec,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWb,GAAX;AAC7Ca,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUZ,GAAV;AAAeY,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUX,GAAV;AAAeW,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUV,GAAV;AAAeU,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWT,GAAX;AAC7CS,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUR,GAAV;AAAeQ,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUP,GAAV;AAAeO,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWN,GAAX;AAAgBM,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWL,GAAX;AAC9CK,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUJ,GAAV;AAAeI,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUH,GAAV;AAAeG,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWF,GAAX;AAAgBE,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWD,GAAX;AAE9C,WAAO,IAAP;AAEA;;AAEDE,EAAAA,QAAQ,GAAG;AAEV,SAAKlB,GAAL,CAEC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEU,CAFV,EAGC,CAHD,EAGI,CAHJ,EAGO,CAHP,EAGU,CAHV,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,WAAO,IAAP;AAEA;;AAEDmB,EAAAA,KAAK,GAAG;AAEP,WAAO,IAAI1B,OAAJ,GAAc2B,SAAd,CAAyB,KAAKzB,QAA9B,CAAP;AAEA;;AAED0B,EAAAA,IAAI,CAAEC,CAAF,EAAM;AAET,UAAML,EAAE,GAAG,KAAKtB,QAAhB;AACA,UAAM4B,EAAE,GAAGD,CAAC,CAAC3B,QAAb;AAEAsB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AAAmBN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AAAmBN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AAAmBN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AACzDN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AAAmBN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AAAmBN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AAAmBN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AACzDN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AAAmBN,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAZ;AAAmBN,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AAAqBN,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AAC3DN,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AAAqBN,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AAAqBN,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AAAqBN,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AAE/D,WAAO,IAAP;AAEA;;AAEDC,EAAAA,YAAY,CAAEF,CAAF,EAAM;AAEjB,UAAML,EAAE,GAAG,KAAKtB,QAAhB;AAAA,UAA0B4B,EAAE,GAAGD,CAAC,CAAC3B,QAAjC;AAEAsB,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AACAN,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AACAN,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAb;AAEA,WAAO,IAAP;AAEA;;AAEDE,EAAAA,cAAc,CAAEH,CAAF,EAAM;AAEnB,UAAMC,EAAE,GAAGD,CAAC,CAAC3B,QAAb;AAEA,SAAKK,GAAL,CAECuB,EAAE,CAAE,CAAF,CAFH,EAEUA,EAAE,CAAE,CAAF,CAFZ,EAEmBA,EAAE,CAAE,CAAF,CAFrB,EAE4B,CAF5B,EAGCA,EAAE,CAAE,CAAF,CAHH,EAGUA,EAAE,CAAE,CAAF,CAHZ,EAGmBA,EAAE,CAAE,CAAF,CAHrB,EAG4B,CAH5B,EAICA,EAAE,CAAE,CAAF,CAJH,EAIUA,EAAE,CAAE,CAAF,CAJZ,EAImBA,EAAE,CAAE,CAAF,CAJrB,EAI4B,CAJ5B,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,WAAO,IAAP;AAEA;;AAEDG,EAAAA,YAAY,CAAEC,KAAF,EAASC,KAAT,EAAgBC,KAAhB,EAAwB;AAEnCF,IAAAA,KAAK,CAACG,mBAAN,CAA2B,IAA3B,EAAiC,CAAjC;AACAF,IAAAA,KAAK,CAACE,mBAAN,CAA2B,IAA3B,EAAiC,CAAjC;AACAD,IAAAA,KAAK,CAACC,mBAAN,CAA2B,IAA3B,EAAiC,CAAjC;AAEA,WAAO,IAAP;AAEA;;AAEDC,EAAAA,SAAS,CAAEJ,KAAF,EAASC,KAAT,EAAgBC,KAAhB,EAAwB;AAEhC,SAAK7B,GAAL,CACC2B,KAAK,CAACK,CADP,EACUJ,KAAK,CAACI,CADhB,EACmBH,KAAK,CAACG,CADzB,EAC4B,CAD5B,EAECL,KAAK,CAACM,CAFP,EAEUL,KAAK,CAACK,CAFhB,EAEmBJ,KAAK,CAACI,CAFzB,EAE4B,CAF5B,EAGCN,KAAK,CAACO,CAHP,EAGUN,KAAK,CAACM,CAHhB,EAGmBL,KAAK,CAACK,CAHzB,EAG4B,CAH5B,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV;AAOA,WAAO,IAAP;AAEA;;AAEDC,EAAAA,eAAe,CAAEb,CAAF,EAAM;AAEpB;AAEA,UAAML,EAAE,GAAG,KAAKtB,QAAhB;AACA,UAAM4B,EAAE,GAAGD,CAAC,CAAC3B,QAAb;;AAEA,UAAMyC,MAAM,GAAG,IAAIC,GAAG,CAACP,mBAAJ,CAAyBR,CAAzB,EAA4B,CAA5B,EAAgCzB,MAAhC,EAAnB;;AACA,UAAMyC,MAAM,GAAG,IAAID,GAAG,CAACP,mBAAJ,CAAyBR,CAAzB,EAA4B,CAA5B,EAAgCzB,MAAhC,EAAnB;;AACA,UAAM0C,MAAM,GAAG,IAAIF,GAAG,CAACP,mBAAJ,CAAyBR,CAAzB,EAA4B,CAA5B,EAAgCzB,MAAhC,EAAnB;;AAEAoB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAF,GAAUa,MAApB;AACAnB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAF,GAAUa,MAApB;AACAnB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAF,GAAUa,MAApB;AACAnB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAEAA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAF,GAAUe,MAApB;AACArB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAF,GAAUe,MAApB;AACArB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAF,GAAUe,MAApB;AACArB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAEAA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAF,GAAUgB,MAApB;AACAtB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUM,EAAE,CAAE,CAAF,CAAF,GAAUgB,MAApB;AACAtB,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWM,EAAE,CAAE,EAAF,CAAF,GAAWgB,MAAtB;AACAtB,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEA,WAAO,IAAP;AAEA;;AAEDuB,EAAAA,qBAAqB,CAAEC,KAAF,EAAU;AAE9B,QAAK,EAAIA,KAAK,IAAIA,KAAK,CAACC,OAAnB,CAAL,EAAoC;AAEnC5C,MAAAA,OAAO,CAACC,KAAR,CAAe,uGAAf;AAEA;;AAED,UAAMkB,EAAE,GAAG,KAAKtB,QAAhB;AAEA,UAAMqC,CAAC,GAAGS,KAAK,CAACT,CAAhB;AAAA,UAAmBC,CAAC,GAAGQ,KAAK,CAACR,CAA7B;AAAA,UAAgCC,CAAC,GAAGO,KAAK,CAACP,CAA1C;AACA,UAAMS,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAUb,CAAV,CAAV;AAAA,UAAyBc,CAAC,GAAGF,IAAI,CAACG,GAAL,CAAUf,CAAV,CAA7B;AACA,UAAMgB,CAAC,GAAGJ,IAAI,CAACC,GAAL,CAAUZ,CAAV,CAAV;AAAA,UAAyBgB,CAAC,GAAGL,IAAI,CAACG,GAAL,CAAUd,CAAV,CAA7B;AACA,UAAMiB,CAAC,GAAGN,IAAI,CAACC,GAAL,CAAUX,CAAV,CAAV;AAAA,UAAyBiB,CAAC,GAAGP,IAAI,CAACG,GAAL,CAAUb,CAAV,CAA7B;;AAEA,QAAKO,KAAK,CAACW,KAAN,KAAgB,KAArB,EAA6B;AAE5B,YAAMC,EAAE,GAAGV,CAAC,GAAGO,CAAf;AAAA,YAAkBI,EAAE,GAAGX,CAAC,GAAGQ,CAA3B;AAAA,YAA8BI,EAAE,GAAGT,CAAC,GAAGI,CAAvC;AAAA,YAA0CM,EAAE,GAAGV,CAAC,GAAGK,CAAnD;AAEAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+B,CAAC,GAAGE,CAAd;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE+B,CAAF,GAAMG,CAAhB;AACAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgC,CAAV;AAEAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUqC,EAAE,GAAGC,EAAE,GAAGN,CAApB;AACAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUoC,EAAE,GAAGG,EAAE,GAAGP,CAApB;AACAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE6B,CAAF,GAAME,CAAhB;AAEA/B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUuC,EAAE,GAAGH,EAAE,GAAGJ,CAApB;AACAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUsC,EAAE,GAAGD,EAAE,GAAGL,CAApB;AACAhC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW0B,CAAC,GAAGK,CAAf;AAEA,KAhBD,MAgBO,IAAKP,KAAK,CAACW,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAMK,EAAE,GAAGT,CAAC,GAAGE,CAAf;AAAA,YAAkBQ,EAAE,GAAGV,CAAC,GAAGG,CAA3B;AAAA,YAA8BQ,EAAE,GAAGV,CAAC,GAAGC,CAAvC;AAAA,YAA0CU,EAAE,GAAGX,CAAC,GAAGE,CAAnD;AAEAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUwC,EAAE,GAAGG,EAAE,GAAGd,CAApB;AACA7B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0C,EAAE,GAAGb,CAAL,GAASY,EAAnB;AACAzC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0B,CAAC,GAAGM,CAAd;AAEAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0B,CAAC,GAAGQ,CAAd;AACAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0B,CAAC,GAAGO,CAAd;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE6B,CAAZ;AAEA7B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUyC,EAAE,GAAGZ,CAAL,GAASa,EAAnB;AACA1C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2C,EAAE,GAAGH,EAAE,GAAGX,CAApB;AACA7B,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW0B,CAAC,GAAGK,CAAf;AAEA,KAhBM,MAgBA,IAAKP,KAAK,CAACW,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAMK,EAAE,GAAGT,CAAC,GAAGE,CAAf;AAAA,YAAkBQ,EAAE,GAAGV,CAAC,GAAGG,CAA3B;AAAA,YAA8BQ,EAAE,GAAGV,CAAC,GAAGC,CAAvC;AAAA,YAA0CU,EAAE,GAAGX,CAAC,GAAGE,CAAnD;AAEAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUwC,EAAE,GAAGG,EAAE,GAAGd,CAApB;AACA7B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE0B,CAAF,GAAMQ,CAAhB;AACAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0C,EAAE,GAAGD,EAAE,GAAGZ,CAApB;AAEA7B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUyC,EAAE,GAAGC,EAAE,GAAGb,CAApB;AACA7B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0B,CAAC,GAAGO,CAAd;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2C,EAAE,GAAGH,EAAE,GAAGX,CAApB;AAEA7B,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE0B,CAAF,GAAMM,CAAhB;AACAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6B,CAAV;AACA7B,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW0B,CAAC,GAAGK,CAAf;AAEA,KAhBM,MAgBA,IAAKP,KAAK,CAACW,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAMC,EAAE,GAAGV,CAAC,GAAGO,CAAf;AAAA,YAAkBI,EAAE,GAAGX,CAAC,GAAGQ,CAA3B;AAAA,YAA8BI,EAAE,GAAGT,CAAC,GAAGI,CAAvC;AAAA,YAA0CM,EAAE,GAAGV,CAAC,GAAGK,CAAnD;AAEAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+B,CAAC,GAAGE,CAAd;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUsC,EAAE,GAAGN,CAAL,GAASK,EAAnB;AACArC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUoC,EAAE,GAAGJ,CAAL,GAASO,EAAnB;AAEAvC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+B,CAAC,GAAGG,CAAd;AACAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUuC,EAAE,GAAGP,CAAL,GAASI,EAAnB;AACApC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUqC,EAAE,GAAGL,CAAL,GAASM,EAAnB;AAEAtC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEgC,CAAZ;AACAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6B,CAAC,GAAGE,CAAd;AACA/B,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW0B,CAAC,GAAGK,CAAf;AAEA,KAhBM,MAgBA,IAAKP,KAAK,CAACW,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAMS,EAAE,GAAGlB,CAAC,GAAGK,CAAf;AAAA,YAAkBc,EAAE,GAAGnB,CAAC,GAAGM,CAA3B;AAAA,YAA8Bc,EAAE,GAAGjB,CAAC,GAAGE,CAAvC;AAAA,YAA0CgB,EAAE,GAAGlB,CAAC,GAAGG,CAAnD;AAEAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+B,CAAC,GAAGE,CAAd;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+C,EAAE,GAAGH,EAAE,GAAGV,CAApB;AACAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU8C,EAAE,GAAGZ,CAAL,GAASW,EAAnB;AAEA7C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUkC,CAAV;AACAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0B,CAAC,GAAGO,CAAd;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE6B,CAAF,GAAMI,CAAhB;AAEAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEgC,CAAF,GAAMC,CAAhB;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6C,EAAE,GAAGX,CAAL,GAASY,EAAnB;AACA9C,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW4C,EAAE,GAAGG,EAAE,GAAGb,CAArB;AAEA,KAhBM,MAgBA,IAAKV,KAAK,CAACW,KAAN,KAAgB,KAArB,EAA6B;AAEnC,YAAMS,EAAE,GAAGlB,CAAC,GAAGK,CAAf;AAAA,YAAkBc,EAAE,GAAGnB,CAAC,GAAGM,CAA3B;AAAA,YAA8Bc,EAAE,GAAGjB,CAAC,GAAGE,CAAvC;AAAA,YAA0CgB,EAAE,GAAGlB,CAAC,GAAGG,CAAnD;AAEAhC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+B,CAAC,GAAGE,CAAd;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEkC,CAAZ;AACAlC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgC,CAAC,GAAGC,CAAd;AAEAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU4C,EAAE,GAAGV,CAAL,GAASa,EAAnB;AACA/C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0B,CAAC,GAAGO,CAAd;AACAjC,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6C,EAAE,GAAGX,CAAL,GAASY,EAAnB;AAEA9C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU8C,EAAE,GAAGZ,CAAL,GAASW,EAAnB;AACA7C,MAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6B,CAAC,GAAGI,CAAd;AACAjC,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAW+C,EAAE,GAAGb,CAAL,GAASU,EAApB;AAEA,KA/G6B,CAiH9B;;;AACA5C,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AACAA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AACAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX,CApH8B,CAsH9B;;AACAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEA,WAAO,IAAP;AAEA;;AAEDgD,EAAAA,0BAA0B,CAAEC,CAAF,EAAM;AAE/B,WAAO,KAAKC,OAAL,CAAcC,KAAd,EAAqBF,CAArB,EAAwBG,IAAxB,CAAP;AAEA;;AAEDC,EAAAA,MAAM,CAAEC,GAAF,EAAOC,MAAP,EAAeC,EAAf,EAAoB;AAEzB,UAAMxD,EAAE,GAAG,KAAKtB,QAAhB;;AAEA+E,IAAAA,EAAE,CAACC,UAAH,CAAeJ,GAAf,EAAoBC,MAApB;;AAEA,QAAKE,EAAE,CAACE,QAAH,OAAkB,CAAvB,EAA2B;AAE1B;AAEAF,MAAAA,EAAE,CAACxC,CAAH,GAAO,CAAP;AAEA;;AAEDwC,IAAAA,EAAE,CAACG,SAAH;;AACAC,IAAAA,EAAE,CAACC,YAAH,CAAiBN,EAAjB,EAAqBC,EAArB;;AAEA,QAAKI,EAAE,CAACF,QAAH,OAAkB,CAAvB,EAA2B;AAE1B;AAEA,UAAKhC,IAAI,CAACoC,GAAL,CAAUP,EAAE,CAACvC,CAAb,MAAqB,CAA1B,EAA8B;AAE7BwC,QAAAA,EAAE,CAAC1C,CAAH,IAAQ,MAAR;AAEA,OAJD,MAIO;AAEN0C,QAAAA,EAAE,CAACxC,CAAH,IAAQ,MAAR;AAEA;;AAEDwC,MAAAA,EAAE,CAACG,SAAH;;AACAC,MAAAA,EAAE,CAACC,YAAH,CAAiBN,EAAjB,EAAqBC,EAArB;AAEA;;AAEDI,IAAAA,EAAE,CAACD,SAAH;;AACAI,IAAAA,EAAE,CAACF,YAAH,CAAiBL,EAAjB,EAAqBI,EAArB;;AAEA7D,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6D,EAAE,CAAC9C,CAAb;AAAgBf,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgE,EAAE,CAACjD,CAAb;AAAgBf,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUyD,EAAE,CAAC1C,CAAb;AAChCf,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6D,EAAE,CAAC7C,CAAb;AAAgBhB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgE,EAAE,CAAChD,CAAb;AAAgBhB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUyD,EAAE,CAACzC,CAAb;AAChChB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6D,EAAE,CAAC5C,CAAb;AAAgBjB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgE,EAAE,CAAC/C,CAAb;AAAgBjB,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWyD,EAAE,CAACxC,CAAd;AAEhC,WAAO,IAAP;AAEA;;AAEDgD,EAAAA,QAAQ,CAAE5D,CAAF,EAAK6D,CAAL,EAAS;AAEhB,QAAKA,CAAC,KAAKC,SAAX,EAAuB;AAEtBtF,MAAAA,OAAO,CAACuF,IAAR,CAAc,kGAAd;AACA,aAAO,KAAKC,gBAAL,CAAuBhE,CAAvB,EAA0B6D,CAA1B,CAAP;AAEA;;AAED,WAAO,KAAKG,gBAAL,CAAuB,IAAvB,EAA6BhE,CAA7B,CAAP;AAEA;;AAEDiE,EAAAA,WAAW,CAAEjE,CAAF,EAAM;AAEhB,WAAO,KAAKgE,gBAAL,CAAuBhE,CAAvB,EAA0B,IAA1B,CAAP;AAEA;;AAEDgE,EAAAA,gBAAgB,CAAE3C,CAAF,EAAKG,CAAL,EAAS;AAExB,UAAMO,EAAE,GAAGV,CAAC,CAAChD,QAAb;AACA,UAAM4D,EAAE,GAAGT,CAAC,CAACnD,QAAb;AACA,UAAMsB,EAAE,GAAG,KAAKtB,QAAhB;AAEA,UAAM6F,GAAG,GAAGnC,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBoC,GAAG,GAAGpC,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCqC,GAAG,GAAGrC,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDsC,GAAG,GAAGtC,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMuC,GAAG,GAAGvC,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBwC,GAAG,GAAGxC,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCyC,GAAG,GAAGzC,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmD0C,GAAG,GAAG1C,EAAE,CAAE,EAAF,CAA3D;AACA,UAAM2C,GAAG,GAAG3C,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqB4C,GAAG,GAAG5C,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoC6C,GAAG,GAAG7C,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoD8C,GAAG,GAAG9C,EAAE,CAAE,EAAF,CAA5D;AACA,UAAM+C,GAAG,GAAG/C,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBgD,GAAG,GAAGhD,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCiD,GAAG,GAAGjD,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoDkD,GAAG,GAAGlD,EAAE,CAAE,EAAF,CAA5D;AAEA,UAAMmD,GAAG,GAAGjD,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBkD,GAAG,GAAGlD,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCmD,GAAG,GAAGnD,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDoD,GAAG,GAAGpD,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMqD,GAAG,GAAGrD,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBsD,GAAG,GAAGtD,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCuD,GAAG,GAAGvD,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDwD,GAAG,GAAGxD,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMyD,GAAG,GAAGzD,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqB0D,GAAG,GAAG1D,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoC2D,GAAG,GAAG3D,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoD4D,GAAG,GAAG5D,EAAE,CAAE,EAAF,CAA5D;AACA,UAAM6D,GAAG,GAAG7D,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqB8D,GAAG,GAAG9D,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoC+D,GAAG,GAAG/D,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoDgE,GAAG,GAAGhE,EAAE,CAAE,EAAF,CAA5D;AAEAtC,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUuE,GAAG,GAAGgB,GAAN,GAAYf,GAAG,GAAGmB,GAAlB,GAAwBlB,GAAG,GAAGsB,GAA9B,GAAoCrB,GAAG,GAAGyB,GAApD;AACAnG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUuE,GAAG,GAAGiB,GAAN,GAAYhB,GAAG,GAAGoB,GAAlB,GAAwBnB,GAAG,GAAGuB,GAA9B,GAAoCtB,GAAG,GAAG0B,GAApD;AACApG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUuE,GAAG,GAAGkB,GAAN,GAAYjB,GAAG,GAAGqB,GAAlB,GAAwBpB,GAAG,GAAGwB,GAA9B,GAAoCvB,GAAG,GAAG2B,GAApD;AACArG,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWuE,GAAG,GAAGmB,GAAN,GAAYlB,GAAG,GAAGsB,GAAlB,GAAwBrB,GAAG,GAAGyB,GAA9B,GAAoCxB,GAAG,GAAG4B,GAArD;AAEAtG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2E,GAAG,GAAGY,GAAN,GAAYX,GAAG,GAAGe,GAAlB,GAAwBd,GAAG,GAAGkB,GAA9B,GAAoCjB,GAAG,GAAGqB,GAApD;AACAnG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2E,GAAG,GAAGa,GAAN,GAAYZ,GAAG,GAAGgB,GAAlB,GAAwBf,GAAG,GAAGmB,GAA9B,GAAoClB,GAAG,GAAGsB,GAApD;AACApG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2E,GAAG,GAAGc,GAAN,GAAYb,GAAG,GAAGiB,GAAlB,GAAwBhB,GAAG,GAAGoB,GAA9B,GAAoCnB,GAAG,GAAGuB,GAApD;AACArG,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW2E,GAAG,GAAGe,GAAN,GAAYd,GAAG,GAAGkB,GAAlB,GAAwBjB,GAAG,GAAGqB,GAA9B,GAAoCpB,GAAG,GAAGwB,GAArD;AAEAtG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+E,GAAG,GAAGQ,GAAN,GAAYP,GAAG,GAAGW,GAAlB,GAAwBV,GAAG,GAAGc,GAA9B,GAAoCb,GAAG,GAAGiB,GAApD;AACAnG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+E,GAAG,GAAGS,GAAN,GAAYR,GAAG,GAAGY,GAAlB,GAAwBX,GAAG,GAAGe,GAA9B,GAAoCd,GAAG,GAAGkB,GAApD;AACApG,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW+E,GAAG,GAAGU,GAAN,GAAYT,GAAG,GAAGa,GAAlB,GAAwBZ,GAAG,GAAGgB,GAA9B,GAAoCf,GAAG,GAAGmB,GAArD;AACArG,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW+E,GAAG,GAAGW,GAAN,GAAYV,GAAG,GAAGc,GAAlB,GAAwBb,GAAG,GAAGiB,GAA9B,GAAoChB,GAAG,GAAGoB,GAArD;AAEAtG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUmF,GAAG,GAAGI,GAAN,GAAYH,GAAG,GAAGO,GAAlB,GAAwBN,GAAG,GAAGU,GAA9B,GAAoCT,GAAG,GAAGa,GAApD;AACAnG,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUmF,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAGQ,GAAlB,GAAwBP,GAAG,GAAGW,GAA9B,GAAoCV,GAAG,GAAGc,GAApD;AACApG,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWmF,GAAG,GAAGM,GAAN,GAAYL,GAAG,GAAGS,GAAlB,GAAwBR,GAAG,GAAGY,GAA9B,GAAoCX,GAAG,GAAGe,GAArD;AACArG,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWmF,GAAG,GAAGO,GAAN,GAAYN,GAAG,GAAGU,GAAlB,GAAwBT,GAAG,GAAGa,GAA9B,GAAoCZ,GAAG,GAAGgB,GAArD;AAEA,WAAO,IAAP;AAEA;;AAEDC,EAAAA,cAAc,CAAEC,CAAF,EAAM;AAEnB,UAAMxG,EAAE,GAAG,KAAKtB,QAAhB;AAEAsB,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,EAAF,CAAF,IAAYwG,CAAZ;AAC1CxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,EAAF,CAAF,IAAYwG,CAAZ;AAC1CxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,EAAF,CAAF,IAAYwG,CAAZ;AAAexG,IAAAA,EAAE,CAAE,EAAF,CAAF,IAAYwG,CAAZ;AAC3CxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWwG,CAAX;AAAcxG,IAAAA,EAAE,CAAE,EAAF,CAAF,IAAYwG,CAAZ;AAAexG,IAAAA,EAAE,CAAE,EAAF,CAAF,IAAYwG,CAAZ;AAE3C,WAAO,IAAP;AAEA;;AAEDC,EAAAA,WAAW,GAAG;AAEb,UAAMzG,EAAE,GAAG,KAAKtB,QAAhB;AAEA,UAAMM,GAAG,GAAGgB,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBf,GAAG,GAAGe,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCd,GAAG,GAAGc,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDb,GAAG,GAAGa,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMZ,GAAG,GAAGY,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBX,GAAG,GAAGW,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCV,GAAG,GAAGU,EAAE,CAAE,CAAF,CAA5C;AAAA,UAAmDT,GAAG,GAAGS,EAAE,CAAE,EAAF,CAA3D;AACA,UAAMR,GAAG,GAAGQ,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBP,GAAG,GAAGO,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCN,GAAG,GAAGM,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoDL,GAAG,GAAGK,EAAE,CAAE,EAAF,CAA5D;AACA,UAAMJ,GAAG,GAAGI,EAAE,CAAE,CAAF,CAAd;AAAA,UAAqBH,GAAG,GAAGG,EAAE,CAAE,CAAF,CAA7B;AAAA,UAAoCF,GAAG,GAAGE,EAAE,CAAE,EAAF,CAA5C;AAAA,UAAoDD,GAAG,GAAGC,EAAE,CAAE,EAAF,CAA5D,CAPa,CASb;AACA;;AAEA,WACCJ,GAAG,IACF,CAAET,GAAF,GAAQG,GAAR,GAAcG,GAAd,GACGP,GAAG,GAAGK,GAAN,GAAYE,GADf,GAEGN,GAAG,GAAGE,GAAN,GAAYK,GAFf,GAGGT,GAAG,GAAGM,GAAN,GAAYG,GAHf,GAIGR,GAAG,GAAGG,GAAN,GAAYM,GAJf,GAKGV,GAAG,GAAGK,GAAN,GAAYK,GANb,CAAH,GAQAE,GAAG,IACF,CAAEb,GAAF,GAAQM,GAAR,GAAcK,GAAd,GACGX,GAAG,GAAGO,GAAN,GAAYG,GADf,GAEGP,GAAG,GAAGC,GAAN,GAAYM,GAFf,GAGGR,GAAG,GAAGE,GAAN,GAAYO,GAHf,GAIGT,GAAG,GAAGK,GAAN,GAAYC,GAJf,GAKGL,GAAG,GAAGG,GAAN,GAAYE,GANb,CARH,GAgBAM,GAAG,IACF,CAAEd,GAAF,GAAQO,GAAR,GAAcE,GAAd,GACGT,GAAG,GAAGK,GAAN,GAAYM,GADf,GAEGR,GAAG,GAAGC,GAAN,GAAYK,GAFf,GAGGR,GAAG,GAAGG,GAAN,GAAYO,GAHf,GAIGR,GAAG,GAAGE,GAAN,GAAYG,GAJf,GAKGP,GAAG,GAAGM,GAAN,GAAYC,GANb,CAhBH,GAwBAO,GAAG,IACF,CAAEb,GAAF,GAAQG,GAAR,GAAcG,GAAd,GACGR,GAAG,GAAGM,GAAN,GAAYG,GADf,GAEGT,GAAG,GAAGK,GAAN,GAAYK,GAFf,GAGGR,GAAG,GAAGE,GAAN,GAAYK,GAHf,GAIGR,GAAG,GAAGG,GAAN,GAAYM,GAJf,GAKGT,GAAG,GAAGK,GAAN,GAAYE,GANb,CAzBJ;AAoCA;;AAEDkH,EAAAA,SAAS,GAAG;AAEX,UAAM1G,EAAE,GAAG,KAAKtB,QAAhB;AACA,QAAIiI,GAAJ;AAEAA,IAAAA,GAAG,GAAG3G,EAAE,CAAE,CAAF,CAAR;AAAeA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ;AAAmBA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2G,GAAV;AAClCA,IAAAA,GAAG,GAAG3G,EAAE,CAAE,CAAF,CAAR;AAAeA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ;AAAmBA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2G,GAAV;AAClCA,IAAAA,GAAG,GAAG3G,EAAE,CAAE,CAAF,CAAR;AAAeA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ;AAAmBA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU2G,GAAV;AAElCA,IAAAA,GAAG,GAAG3G,EAAE,CAAE,CAAF,CAAR;AAAeA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,EAAF,CAAZ;AAAoBA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW2G,GAAX;AACnCA,IAAAA,GAAG,GAAG3G,EAAE,CAAE,CAAF,CAAR;AAAeA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,EAAF,CAAZ;AAAoBA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW2G,GAAX;AACnCA,IAAAA,GAAG,GAAG3G,EAAE,CAAE,EAAF,CAAR;AAAgBA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWA,EAAE,CAAE,EAAF,CAAb;AAAqBA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW2G,GAAX;AAErC,WAAO,IAAP;AAEA;;AAEDC,EAAAA,WAAW,CAAE7F,CAAF,EAAKC,CAAL,EAAQC,CAAR,EAAY;AAEtB,UAAMjB,EAAE,GAAG,KAAKtB,QAAhB;;AAEA,QAAKqC,CAAC,CAAC8F,SAAP,EAAmB;AAElB7G,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWe,CAAC,CAACA,CAAb;AACAf,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWe,CAAC,CAACC,CAAb;AACAhB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWe,CAAC,CAACE,CAAb;AAEA,KAND,MAMO;AAENjB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWe,CAAX;AACAf,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWgB,CAAX;AACAhB,MAAAA,EAAE,CAAE,EAAF,CAAF,GAAWiB,CAAX;AAEA;;AAED,WAAO,IAAP;AAEA;;AAED6F,EAAAA,MAAM,GAAG;AAER;AACA,UAAM9G,EAAE,GAAG,KAAKtB,QAAhB;AAAA,UAECM,GAAG,GAAGgB,EAAE,CAAE,CAAF,CAFT;AAAA,UAEgBZ,GAAG,GAAGY,EAAE,CAAE,CAAF,CAFxB;AAAA,UAE+BR,GAAG,GAAGQ,EAAE,CAAE,CAAF,CAFvC;AAAA,UAE8CJ,GAAG,GAAGI,EAAE,CAAE,CAAF,CAFtD;AAAA,UAGCf,GAAG,GAAGe,EAAE,CAAE,CAAF,CAHT;AAAA,UAGgBX,GAAG,GAAGW,EAAE,CAAE,CAAF,CAHxB;AAAA,UAG+BP,GAAG,GAAGO,EAAE,CAAE,CAAF,CAHvC;AAAA,UAG8CH,GAAG,GAAGG,EAAE,CAAE,CAAF,CAHtD;AAAA,UAICd,GAAG,GAAGc,EAAE,CAAE,CAAF,CAJT;AAAA,UAIgBV,GAAG,GAAGU,EAAE,CAAE,CAAF,CAJxB;AAAA,UAI+BN,GAAG,GAAGM,EAAE,CAAE,EAAF,CAJvC;AAAA,UAI+CF,GAAG,GAAGE,EAAE,CAAE,EAAF,CAJvD;AAAA,UAKCb,GAAG,GAAGa,EAAE,CAAE,EAAF,CALT;AAAA,UAKiBT,GAAG,GAAGS,EAAE,CAAE,EAAF,CALzB;AAAA,UAKiCL,GAAG,GAAGK,EAAE,CAAE,EAAF,CALzC;AAAA,UAKiDD,GAAG,GAAGC,EAAE,CAAE,EAAF,CALzD;AAAA,UAOC+G,GAAG,GAAGzH,GAAG,GAAGK,GAAN,GAAYE,GAAZ,GAAkBN,GAAG,GAAGG,GAAN,GAAYG,GAA9B,GAAoCN,GAAG,GAAGE,GAAN,GAAYK,GAAhD,GAAsDT,GAAG,GAAGM,GAAN,GAAYG,GAAlE,GAAwER,GAAG,GAAGG,GAAN,GAAYM,GAApF,GAA0FV,GAAG,GAAGK,GAAN,GAAYK,GAP7G;AAAA,UAQCiH,GAAG,GAAG7H,GAAG,GAAGO,GAAN,GAAYG,GAAZ,GAAkBX,GAAG,GAAGS,GAAN,GAAYE,GAA9B,GAAoCV,GAAG,GAAGM,GAAN,GAAYK,GAAhD,GAAsDb,GAAG,GAAGU,GAAN,GAAYG,GAAlE,GAAwEZ,GAAG,GAAGO,GAAN,GAAYM,GAApF,GAA0Fd,GAAG,GAAGS,GAAN,GAAYK,GAR7G;AAAA,UASCkH,GAAG,GAAG/H,GAAG,GAAGK,GAAN,GAAYM,GAAZ,GAAkBV,GAAG,GAAGG,GAAN,GAAYO,GAA9B,GAAoCV,GAAG,GAAGE,GAAN,GAAYS,GAAhD,GAAsDb,GAAG,GAAGM,GAAN,GAAYO,GAAlE,GAAwEZ,GAAG,GAAGG,GAAN,GAAYU,GAApF,GAA0Fd,GAAG,GAAGK,GAAN,GAAYS,GAT7G;AAAA,UAUCmH,GAAG,GAAG/H,GAAG,GAAGG,GAAN,GAAYG,GAAZ,GAAkBP,GAAG,GAAGK,GAAN,GAAYE,GAA9B,GAAoCN,GAAG,GAAGE,GAAN,GAAYK,GAAhD,GAAsDT,GAAG,GAAGM,GAAN,GAAYG,GAAlE,GAAwER,GAAG,GAAGG,GAAN,GAAYM,GAApF,GAA0FV,GAAG,GAAGK,GAAN,GAAYK,GAV7G;AAYA,UAAMwH,GAAG,GAAGnI,GAAG,GAAG+H,GAAN,GAAY3H,GAAG,GAAG4H,GAAlB,GAAwBxH,GAAG,GAAGyH,GAA9B,GAAoCrH,GAAG,GAAGsH,GAAtD;AAEA,QAAKC,GAAG,KAAK,CAAb,EAAiB,OAAO,KAAKpI,GAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,CAAP;AAEjB,UAAMqI,MAAM,GAAG,IAAID,GAAnB;AAEAnH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU+G,GAAG,GAAGK,MAAhB;AACApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAET,GAAG,GAAGG,GAAN,GAAYE,GAAZ,GAAkBN,GAAG,GAAGK,GAAN,GAAYC,GAA9B,GAAoCL,GAAG,GAAGC,GAAN,GAAYM,GAAhD,GAAsDV,GAAG,GAAGO,GAAN,GAAYG,GAAlE,GAAwER,GAAG,GAAGE,GAAN,GAAYO,GAApF,GAA0FX,GAAG,GAAGM,GAAN,GAAYK,GAAxG,IAAgHqH,MAA1H;AACApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEX,GAAG,GAAGM,GAAN,GAAYC,GAAZ,GAAkBL,GAAG,GAAGE,GAAN,GAAYG,GAA9B,GAAoCL,GAAG,GAAGC,GAAN,GAAYK,GAAhD,GAAsDT,GAAG,GAAGO,GAAN,GAAYE,GAAlE,GAAwER,GAAG,GAAGG,GAAN,GAAYO,GAApF,GAA0FX,GAAG,GAAGK,GAAN,GAAYM,GAAxG,IAAgHqH,MAA1H;AACApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEV,GAAG,GAAGG,GAAN,GAAYG,GAAZ,GAAkBP,GAAG,GAAGK,GAAN,GAAYE,GAA9B,GAAoCN,GAAG,GAAGE,GAAN,GAAYK,GAAhD,GAAsDT,GAAG,GAAGM,GAAN,GAAYG,GAAlE,GAAwER,GAAG,GAAGG,GAAN,GAAYM,GAApF,GAA0FV,GAAG,GAAGK,GAAN,GAAYK,GAAxG,IAAgHsH,MAA1H;AAEApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgH,GAAG,GAAGI,MAAhB;AACApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEd,GAAG,GAAGS,GAAN,GAAYC,GAAZ,GAAkBT,GAAG,GAAGO,GAAN,GAAYE,GAA9B,GAAoCT,GAAG,GAAGK,GAAN,GAAYM,GAAhD,GAAsDd,GAAG,GAAGW,GAAN,GAAYG,GAAlE,GAAwEZ,GAAG,GAAGM,GAAN,GAAYO,GAApF,GAA0Ff,GAAG,GAAGU,GAAN,GAAYK,GAAxG,IAAgHqH,MAA1H;AACApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEb,GAAG,GAAGM,GAAN,GAAYG,GAAZ,GAAkBX,GAAG,GAAGU,GAAN,GAAYC,GAA9B,GAAoCT,GAAG,GAAGK,GAAN,GAAYK,GAAhD,GAAsDb,GAAG,GAAGW,GAAN,GAAYE,GAAlE,GAAwEZ,GAAG,GAAGO,GAAN,GAAYO,GAApF,GAA0Ff,GAAG,GAAGS,GAAN,GAAYM,GAAxG,IAAgHqH,MAA1H;AACApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEf,GAAG,GAAGS,GAAN,GAAYE,GAAZ,GAAkBV,GAAG,GAAGO,GAAN,GAAYG,GAA9B,GAAoCV,GAAG,GAAGM,GAAN,GAAYK,GAAhD,GAAsDb,GAAG,GAAGU,GAAN,GAAYG,GAAlE,GAAwEZ,GAAG,GAAGO,GAAN,GAAYM,GAApF,GAA0Fd,GAAG,GAAGS,GAAN,GAAYK,GAAxG,IAAgHsH,MAA1H;AAEApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUiH,GAAG,GAAGG,MAAhB;AACApH,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAEb,GAAG,GAAGG,GAAN,GAAYM,GAAZ,GAAkBV,GAAG,GAAGK,GAAN,GAAYK,GAA9B,GAAoCT,GAAG,GAAGC,GAAN,GAAYU,GAAhD,GAAsDd,GAAG,GAAGO,GAAN,GAAYO,GAAlE,GAAwEZ,GAAG,GAAGE,GAAN,GAAYW,GAApF,GAA0Ff,GAAG,GAAGM,GAAN,GAAYS,GAAxG,IAAgHqH,MAA1H;AACApH,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEf,GAAG,GAAGM,GAAN,GAAYK,GAAZ,GAAkBT,GAAG,GAAGE,GAAN,GAAYO,GAA9B,GAAoCT,GAAG,GAAGC,GAAN,GAAYS,GAAhD,GAAsDb,GAAG,GAAGO,GAAN,GAAYM,GAAlE,GAAwEZ,GAAG,GAAGG,GAAN,GAAYW,GAApF,GAA0Ff,GAAG,GAAGK,GAAN,GAAYU,GAAxG,IAAgHqH,MAA3H;AACApH,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEd,GAAG,GAAGG,GAAN,GAAYO,GAAZ,GAAkBX,GAAG,GAAGK,GAAN,GAAYM,GAA9B,GAAoCV,GAAG,GAAGE,GAAN,GAAYS,GAAhD,GAAsDb,GAAG,GAAGM,GAAN,GAAYO,GAAlE,GAAwEZ,GAAG,GAAGG,GAAN,GAAYU,GAApF,GAA0Fd,GAAG,GAAGK,GAAN,GAAYS,GAAxG,IAAgHsH,MAA3H;AAEApH,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWkH,GAAG,GAAGE,MAAjB;AACApH,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEd,GAAG,GAAGK,GAAN,GAAYC,GAAZ,GAAkBL,GAAG,GAAGG,GAAN,GAAYE,GAA9B,GAAoCL,GAAG,GAAGC,GAAN,GAAYM,GAAhD,GAAsDV,GAAG,GAAGO,GAAN,GAAYG,GAAlE,GAAwER,GAAG,GAAGE,GAAN,GAAYO,GAApF,GAA0FX,GAAG,GAAGM,GAAN,GAAYK,GAAxG,IAAgHyH,MAA3H;AACApH,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEb,GAAG,GAAGE,GAAN,GAAYG,GAAZ,GAAkBP,GAAG,GAAGM,GAAN,GAAYC,GAA9B,GAAoCL,GAAG,GAAGC,GAAN,GAAYK,GAAhD,GAAsDT,GAAG,GAAGO,GAAN,GAAYE,GAAlE,GAAwER,GAAG,GAAGG,GAAN,GAAYO,GAApF,GAA0FX,GAAG,GAAGK,GAAN,GAAYM,GAAxG,IAAgHyH,MAA3H;AACApH,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEf,GAAG,GAAGK,GAAN,GAAYE,GAAZ,GAAkBN,GAAG,GAAGG,GAAN,GAAYG,GAA9B,GAAoCN,GAAG,GAAGE,GAAN,GAAYK,GAAhD,GAAsDT,GAAG,GAAGM,GAAN,GAAYG,GAAlE,GAAwER,GAAG,GAAGG,GAAN,GAAYM,GAApF,GAA0FV,GAAG,GAAGK,GAAN,GAAYK,GAAxG,IAAgH0H,MAA3H;AAEA,WAAO,IAAP;AAEA;;AAEDC,EAAAA,KAAK,CAAEC,CAAF,EAAM;AAEV,UAAMtH,EAAE,GAAG,KAAKtB,QAAhB;AACA,UAAMqC,CAAC,GAAGuG,CAAC,CAACvG,CAAZ;AAAA,UAAeC,CAAC,GAAGsG,CAAC,CAACtG,CAArB;AAAA,UAAwBC,CAAC,GAAGqG,CAAC,CAACrG,CAA9B;AAEAjB,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWe,CAAX;AAAcf,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWgB,CAAX;AAAchB,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWiB,CAAX;AAC5BjB,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWe,CAAX;AAAcf,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWgB,CAAX;AAAchB,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWiB,CAAX;AAC5BjB,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWe,CAAX;AAAcf,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWgB,CAAX;AAAchB,IAAAA,EAAE,CAAE,EAAF,CAAF,IAAYiB,CAAZ;AAC5BjB,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWe,CAAX;AAAcf,IAAAA,EAAE,CAAE,CAAF,CAAF,IAAWgB,CAAX;AAAchB,IAAAA,EAAE,CAAE,EAAF,CAAF,IAAYiB,CAAZ;AAE5B,WAAO,IAAP;AAEA;;AAEDsG,EAAAA,iBAAiB,GAAG;AAEnB,UAAMvH,EAAE,GAAG,KAAKtB,QAAhB;AAEA,UAAM8I,QAAQ,GAAGxH,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ,GAAoBA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAhC,GAAwCA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAArE;AACA,UAAMyH,QAAQ,GAAGzH,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ,GAAoBA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAhC,GAAwCA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAArE;AACA,UAAM0H,QAAQ,GAAG1H,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAZ,GAAoBA,EAAE,CAAE,CAAF,CAAF,GAAUA,EAAE,CAAE,CAAF,CAAhC,GAAwCA,EAAE,CAAE,EAAF,CAAF,GAAWA,EAAE,CAAE,EAAF,CAAtE;AAEA,WAAO2B,IAAI,CAACgG,IAAL,CAAWhG,IAAI,CAACiG,GAAL,CAAUJ,QAAV,EAAoBC,QAApB,EAA8BC,QAA9B,CAAX,CAAP;AAEA;;AAEDG,EAAAA,eAAe,CAAE9G,CAAF,EAAKC,CAAL,EAAQC,CAAR,EAAY;AAE1B,SAAKlC,GAAL,CAEC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEUgC,CAFV,EAGC,CAHD,EAGI,CAHJ,EAGO,CAHP,EAGUC,CAHV,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIUC,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,WAAO,IAAP;AAEA;;AAED6G,EAAAA,aAAa,CAAEC,KAAF,EAAU;AAEtB,UAAMhG,CAAC,GAAGJ,IAAI,CAACC,GAAL,CAAUmG,KAAV,CAAV;AAAA,UAA6BvB,CAAC,GAAG7E,IAAI,CAACG,GAAL,CAAUiG,KAAV,CAAjC;AAEA,SAAKhJ,GAAL,CAEC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEU,CAFV,EAGC,CAHD,EAGIgD,CAHJ,EAGO,CAAEyE,CAHT,EAGY,CAHZ,EAIC,CAJD,EAIIA,CAJJ,EAIOzE,CAJP,EAIU,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,WAAO,IAAP;AAEA;;AAEDiG,EAAAA,aAAa,CAAED,KAAF,EAAU;AAEtB,UAAMhG,CAAC,GAAGJ,IAAI,CAACC,GAAL,CAAUmG,KAAV,CAAV;AAAA,UAA6BvB,CAAC,GAAG7E,IAAI,CAACG,GAAL,CAAUiG,KAAV,CAAjC;AAEA,SAAKhJ,GAAL,CAEEgD,CAFF,EAEK,CAFL,EAEQyE,CAFR,EAEW,CAFX,EAGE,CAHF,EAGK,CAHL,EAGQ,CAHR,EAGW,CAHX,EAIC,CAAEA,CAJH,EAIM,CAJN,EAISzE,CAJT,EAIY,CAJZ,EAKE,CALF,EAKK,CALL,EAKQ,CALR,EAKW,CALX;AASA,WAAO,IAAP;AAEA;;AAEDkG,EAAAA,aAAa,CAAEF,KAAF,EAAU;AAEtB,UAAMhG,CAAC,GAAGJ,IAAI,CAACC,GAAL,CAAUmG,KAAV,CAAV;AAAA,UAA6BvB,CAAC,GAAG7E,IAAI,CAACG,GAAL,CAAUiG,KAAV,CAAjC;AAEA,SAAKhJ,GAAL,CAECgD,CAFD,EAEI,CAAEyE,CAFN,EAES,CAFT,EAEY,CAFZ,EAGCA,CAHD,EAGIzE,CAHJ,EAGO,CAHP,EAGU,CAHV,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,WAAO,IAAP;AAEA;;AAEDmG,EAAAA,gBAAgB,CAAEC,IAAF,EAAQC,KAAR,EAAgB;AAE/B;AAEA,UAAMrG,CAAC,GAAGJ,IAAI,CAACC,GAAL,CAAUwG,KAAV,CAAV;AACA,UAAM5B,CAAC,GAAG7E,IAAI,CAACG,GAAL,CAAUsG,KAAV,CAAV;AACA,UAAMC,CAAC,GAAG,IAAItG,CAAd;AACA,UAAMhB,CAAC,GAAGoH,IAAI,CAACpH,CAAf;AAAA,UAAkBC,CAAC,GAAGmH,IAAI,CAACnH,CAA3B;AAAA,UAA8BC,CAAC,GAAGkH,IAAI,CAAClH,CAAvC;AACA,UAAMqH,EAAE,GAAGD,CAAC,GAAGtH,CAAf;AAAA,UAAkBwH,EAAE,GAAGF,CAAC,GAAGrH,CAA3B;AAEA,SAAKjC,GAAL,CAECuJ,EAAE,GAAGvH,CAAL,GAASgB,CAFV,EAEauG,EAAE,GAAGtH,CAAL,GAASwF,CAAC,GAAGvF,CAF1B,EAE6BqH,EAAE,GAAGrH,CAAL,GAASuF,CAAC,GAAGxF,CAF1C,EAE6C,CAF7C,EAGCsH,EAAE,GAAGtH,CAAL,GAASwF,CAAC,GAAGvF,CAHd,EAGiBsH,EAAE,GAAGvH,CAAL,GAASe,CAH1B,EAG6BwG,EAAE,GAAGtH,CAAL,GAASuF,CAAC,GAAGzF,CAH1C,EAG6C,CAH7C,EAICuH,EAAE,GAAGrH,CAAL,GAASuF,CAAC,GAAGxF,CAJd,EAIiBuH,EAAE,GAAGtH,CAAL,GAASuF,CAAC,GAAGzF,CAJ9B,EAIiCsH,CAAC,GAAGpH,CAAJ,GAAQA,CAAR,GAAYc,CAJ7C,EAIgD,CAJhD,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,WAAO,IAAP;AAEA;;AAEDyG,EAAAA,SAAS,CAAEzH,CAAF,EAAKC,CAAL,EAAQC,CAAR,EAAY;AAEpB,SAAKlC,GAAL,CAECgC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEU,CAFV,EAGC,CAHD,EAGIC,CAHJ,EAGO,CAHP,EAGU,CAHV,EAIC,CAJD,EAII,CAJJ,EAIOC,CAJP,EAIU,CAJV,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,WAAO,IAAP;AAEA;;AAEDwH,EAAAA,SAAS,CAAEC,EAAF,EAAMC,EAAN,EAAUC,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA2B;AAEnC,SAAKhK,GAAL,CAEC,CAFD,EAEI6J,EAFJ,EAEQE,EAFR,EAEY,CAFZ,EAGCJ,EAHD,EAGK,CAHL,EAGQK,EAHR,EAGY,CAHZ,EAICJ,EAJD,EAIKE,EAJL,EAIS,CAJT,EAIY,CAJZ,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV;AASA,WAAO,IAAP;AAEA;;AAED3F,EAAAA,OAAO,CAAE8F,QAAF,EAAYC,UAAZ,EAAwB5B,KAAxB,EAAgC;AAEtC,UAAMrH,EAAE,GAAG,KAAKtB,QAAhB;AAEA,UAAMqC,CAAC,GAAGkI,UAAU,CAACpF,EAArB;AAAA,UAAyB7C,CAAC,GAAGiI,UAAU,CAACjF,EAAxC;AAAA,UAA4C/C,CAAC,GAAGgI,UAAU,CAACxF,EAA3D;AAAA,UAA+DyF,CAAC,GAAGD,UAAU,CAACE,EAA9E;AACA,UAAMC,EAAE,GAAGrI,CAAC,GAAGA,CAAf;AAAA,UAAkBsI,EAAE,GAAGrI,CAAC,GAAGA,CAA3B;AAAA,UAA8BsI,EAAE,GAAGrI,CAAC,GAAGA,CAAvC;AACA,UAAMsI,EAAE,GAAGxI,CAAC,GAAGqI,EAAf;AAAA,UAAmBV,EAAE,GAAG3H,CAAC,GAAGsI,EAA5B;AAAA,UAAgCV,EAAE,GAAG5H,CAAC,GAAGuI,EAAzC;AACA,UAAME,EAAE,GAAGxI,CAAC,GAAGqI,EAAf;AAAA,UAAmBR,EAAE,GAAG7H,CAAC,GAAGsI,EAA5B;AAAA,UAAgCG,EAAE,GAAGxI,CAAC,GAAGqI,EAAzC;AACA,UAAMI,EAAE,GAAGR,CAAC,GAAGE,EAAf;AAAA,UAAmBO,EAAE,GAAGT,CAAC,GAAGG,EAA5B;AAAA,UAAgCO,EAAE,GAAGV,CAAC,GAAGI,EAAzC;AAEA,UAAMO,EAAE,GAAGxC,KAAK,CAACtG,CAAjB;AAAA,UAAoB+I,EAAE,GAAGzC,KAAK,CAACrG,CAA/B;AAAA,UAAkC+I,EAAE,GAAG1C,KAAK,CAACpG,CAA7C;AAEAjB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE,KAAMwJ,EAAE,GAAGC,EAAX,CAAF,IAAsBI,EAAhC;AACA7J,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE0I,EAAE,GAAGkB,EAAP,IAAcC,EAAxB;AACA7J,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE2I,EAAE,GAAGgB,EAAP,IAAcE,EAAxB;AACA7J,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAEAA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE0I,EAAE,GAAGkB,EAAP,IAAcE,EAAxB;AACA9J,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE,KAAMuJ,EAAE,GAAGE,EAAX,CAAF,IAAsBK,EAAhC;AACA9J,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE6I,EAAE,GAAGa,EAAP,IAAcI,EAAxB;AACA9J,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAEAA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE2I,EAAE,GAAGgB,EAAP,IAAcI,EAAxB;AACA/J,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAE6I,EAAE,GAAGa,EAAP,IAAcK,EAAxB;AACA/J,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAE,KAAMuJ,EAAE,GAAGC,EAAX,CAAF,IAAsBO,EAAjC;AACA/J,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEAA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWgJ,QAAQ,CAACjI,CAApB;AACAf,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWgJ,QAAQ,CAAChI,CAApB;AACAhB,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWgJ,QAAQ,CAAC/H,CAApB;AACAjB,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAEA,WAAO,IAAP;AAEA;;AAEDgK,EAAAA,SAAS,CAAEhB,QAAF,EAAYC,UAAZ,EAAwB5B,KAAxB,EAAgC;AAExC,UAAMrH,EAAE,GAAG,KAAKtB,QAAhB;;AAEA,QAAImL,EAAE,GAAGzI,GAAG,CAACrC,GAAJ,CAASiB,EAAE,CAAE,CAAF,CAAX,EAAkBA,EAAE,CAAE,CAAF,CAApB,EAA2BA,EAAE,CAAE,CAAF,CAA7B,EAAqCpB,MAArC,EAAT;;AACA,UAAMkL,EAAE,GAAG1I,GAAG,CAACrC,GAAJ,CAASiB,EAAE,CAAE,CAAF,CAAX,EAAkBA,EAAE,CAAE,CAAF,CAApB,EAA2BA,EAAE,CAAE,CAAF,CAA7B,EAAqCpB,MAArC,EAAX;;AACA,UAAMmL,EAAE,GAAG3I,GAAG,CAACrC,GAAJ,CAASiB,EAAE,CAAE,CAAF,CAAX,EAAkBA,EAAE,CAAE,CAAF,CAApB,EAA2BA,EAAE,CAAE,EAAF,CAA7B,EAAsCpB,MAAtC,EAAX,CANwC,CAQxC;;;AACA,UAAMuI,GAAG,GAAG,KAAKV,WAAL,EAAZ;AACA,QAAKU,GAAG,GAAG,CAAX,EAAe0C,EAAE,GAAG,CAAEA,EAAP;AAEfb,IAAAA,QAAQ,CAACjI,CAAT,GAAaf,EAAE,CAAE,EAAF,CAAf;AACAgJ,IAAAA,QAAQ,CAAChI,CAAT,GAAahB,EAAE,CAAE,EAAF,CAAf;AACAgJ,IAAAA,QAAQ,CAAC/H,CAAT,GAAajB,EAAE,CAAE,EAAF,CAAf,CAdwC,CAgBxC;;AACAiK,IAAAA,GAAG,CAAC7J,IAAJ,CAAU,IAAV;;AAEA,UAAM8J,KAAK,GAAG,IAAIL,EAAlB;AACA,UAAMM,KAAK,GAAG,IAAIL,EAAlB;AACA,UAAMM,KAAK,GAAG,IAAIL,EAAlB;AAEAE,IAAAA,GAAG,CAACvL,QAAJ,CAAc,CAAd,KAAqBwL,KAArB;AACAD,IAAAA,GAAG,CAACvL,QAAJ,CAAc,CAAd,KAAqBwL,KAArB;AACAD,IAAAA,GAAG,CAACvL,QAAJ,CAAc,CAAd,KAAqBwL,KAArB;AAEAD,IAAAA,GAAG,CAACvL,QAAJ,CAAc,CAAd,KAAqByL,KAArB;AACAF,IAAAA,GAAG,CAACvL,QAAJ,CAAc,CAAd,KAAqByL,KAArB;AACAF,IAAAA,GAAG,CAACvL,QAAJ,CAAc,CAAd,KAAqByL,KAArB;AAEAF,IAAAA,GAAG,CAACvL,QAAJ,CAAc,CAAd,KAAqB0L,KAArB;AACAH,IAAAA,GAAG,CAACvL,QAAJ,CAAc,CAAd,KAAqB0L,KAArB;AACAH,IAAAA,GAAG,CAACvL,QAAJ,CAAc,EAAd,KAAsB0L,KAAtB;AAEAnB,IAAAA,UAAU,CAACoB,qBAAX,CAAkCJ,GAAlC;AAEA5C,IAAAA,KAAK,CAACtG,CAAN,GAAU8I,EAAV;AACAxC,IAAAA,KAAK,CAACrG,CAAN,GAAU8I,EAAV;AACAzC,IAAAA,KAAK,CAACpG,CAAN,GAAU8I,EAAV;AAEA,WAAO,IAAP;AAEA;;AAEDO,EAAAA,eAAe,CAAEC,IAAF,EAAQC,KAAR,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAwC;AAEtD,QAAKA,GAAG,KAAKzG,SAAb,EAAyB;AAExBtF,MAAAA,OAAO,CAACuF,IAAR,CAAc,sGAAd;AAEA;;AAED,UAAMpE,EAAE,GAAG,KAAKtB,QAAhB;AACA,UAAMqC,CAAC,GAAG,IAAI4J,IAAJ,IAAaH,KAAK,GAAGD,IAArB,CAAV;AACA,UAAMvJ,CAAC,GAAG,IAAI2J,IAAJ,IAAaF,GAAG,GAAGC,MAAnB,CAAV;AAEA,UAAMhJ,CAAC,GAAG,CAAE8I,KAAK,GAAGD,IAAV,KAAqBC,KAAK,GAAGD,IAA7B,CAAV;AACA,UAAM1I,CAAC,GAAG,CAAE4I,GAAG,GAAGC,MAAR,KAAqBD,GAAG,GAAGC,MAA3B,CAAV;AACA,UAAM3I,CAAC,GAAG,EAAI6I,GAAG,GAAGD,IAAV,KAAqBC,GAAG,GAAGD,IAA3B,CAAV;AACA,UAAM3I,CAAC,GAAG,CAAE,CAAF,GAAM4I,GAAN,GAAYD,IAAZ,IAAqBC,GAAG,GAAGD,IAA3B,CAAV;AAEA3K,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUe,CAAV;AAAaf,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU0B,CAAV;AAAa1B,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACvCA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAUgB,CAAV;AAAahB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU6B,CAAV;AAAa7B,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AACvCA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW+B,CAAX;AAAc/B,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAWgC,CAAX;AACxChC,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAE,CAAb;AAAgBA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAE1C,WAAO,IAAP;AAEA;;AAED6K,EAAAA,gBAAgB,CAAEN,IAAF,EAAQC,KAAR,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAwC;AAEvD,UAAM5K,EAAE,GAAG,KAAKtB,QAAhB;AACA,UAAMwK,CAAC,GAAG,OAAQsB,KAAK,GAAGD,IAAhB,CAAV;AACA,UAAMO,CAAC,GAAG,OAAQL,GAAG,GAAGC,MAAd,CAAV;AACA,UAAMK,CAAC,GAAG,OAAQH,GAAG,GAAGD,IAAd,CAAV;AAEA,UAAM5J,CAAC,GAAG,CAAEyJ,KAAK,GAAGD,IAAV,IAAmBrB,CAA7B;AACA,UAAMlI,CAAC,GAAG,CAAEyJ,GAAG,GAAGC,MAAR,IAAmBI,CAA7B;AACA,UAAM7J,CAAC,GAAG,CAAE2J,GAAG,GAAGD,IAAR,IAAiBI,CAA3B;AAEA/K,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,IAAIkJ,CAAd;AAAiBlJ,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEe,CAAb;AAC3Cf,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,IAAI8K,CAAd;AAAiB9K,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEgB,CAAb;AAC3ChB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAE,CAAF,GAAM+K,CAAjB;AAAoB/K,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAEiB,CAAb;AAC9CjB,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,CAAF,CAAF,GAAU,CAAV;AAAaA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAAcA,IAAAA,EAAE,CAAE,EAAF,CAAF,GAAW,CAAX;AAExC,WAAO,IAAP;AAEA;;AAEDgL,EAAAA,MAAM,CAAEC,MAAF,EAAW;AAEhB,UAAMjL,EAAE,GAAG,KAAKtB,QAAhB;AACA,UAAM4B,EAAE,GAAG2K,MAAM,CAACvM,QAAlB;;AAEA,SAAM,IAAIwM,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAAgC;AAE/B,UAAKlL,EAAE,CAAEkL,CAAF,CAAF,KAAY5K,EAAE,CAAE4K,CAAF,CAAnB,EAA2B,OAAO,KAAP;AAE3B;;AAED,WAAO,IAAP;AAEA;;AAED/K,EAAAA,SAAS,CAAEgL,KAAF,EAASC,MAAM,GAAG,CAAlB,EAAsB;AAE9B,SAAM,IAAIF,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAAgC;AAE/B,WAAKxM,QAAL,CAAewM,CAAf,IAAqBC,KAAK,CAAED,CAAC,GAAGE,MAAN,CAA1B;AAEA;;AAED,WAAO,IAAP;AAEA;;AAEDC,EAAAA,OAAO,CAAEF,KAAK,GAAG,EAAV,EAAcC,MAAM,GAAG,CAAvB,EAA2B;AAEjC,UAAMpL,EAAE,GAAG,KAAKtB,QAAhB;AAEAyM,IAAAA,KAAK,CAAEC,MAAF,CAAL,GAAkBpL,EAAE,CAAE,CAAF,CAApB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AAEAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AAEAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsBpL,EAAE,CAAE,CAAF,CAAxB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,EAAX,CAAL,GAAuBpL,EAAE,CAAE,EAAF,CAAzB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,EAAX,CAAL,GAAuBpL,EAAE,CAAE,EAAF,CAAzB;AAEAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,EAAX,CAAL,GAAuBpL,EAAE,CAAE,EAAF,CAAzB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,EAAX,CAAL,GAAuBpL,EAAE,CAAE,EAAF,CAAzB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,EAAX,CAAL,GAAuBpL,EAAE,CAAE,EAAF,CAAzB;AACAmL,IAAAA,KAAK,CAAEC,MAAM,GAAG,EAAX,CAAL,GAAuBpL,EAAE,CAAE,EAAF,CAAzB;AAEA,WAAOmL,KAAP;AAEA;;AAp2BY;;AAw2Bd3M,OAAO,CAAC8M,SAAR,CAAkBC,SAAlB,GAA8B,IAA9B;;AAEA,MAAMnK,GAAG,GAAG,aAAc,IAAI7C,OAAJ,EAA1B;;AACA,MAAM0L,GAAG,GAAG,aAAc,IAAIzL,OAAJ,EAA1B;;AACA,MAAM2E,KAAK,GAAG,aAAc,IAAI5E,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA5B;;AACA,MAAM6E,IAAI,GAAG,aAAc,IAAI7E,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA3B;;AACA,MAAMsF,EAAE,GAAG,aAAc,IAAItF,OAAJ,EAAzB;;AACA,MAAMyF,EAAE,GAAG,aAAc,IAAIzF,OAAJ,EAAzB;;AACA,MAAMkF,EAAE,GAAG,aAAc,IAAIlF,OAAJ,EAAzB;;AAEA,SAASC,OAAT","sourcesContent":["import { Vector3 } from './Vector3.js';\r\n\r\nclass Matrix4 {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( arguments.length > 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyPosition( m ) {\r\n\r\n\t\tconst te = this.elements, me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrix3( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractRotation( m ) {\r\n\r\n\t\t// this method does not support reflection matrices\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationFromEuler( euler ) {\r\n\r\n\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\r\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\r\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\r\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// bottom row\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// last column\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationFromQuaternion( q ) {\r\n\r\n\t\treturn this.compose( _zero, q, _one );\r\n\r\n\t}\r\n\r\n\tlookAt( eye, target, up ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\t_z.subVectors( eye, target );\r\n\r\n\t\tif ( _z.lengthSq() === 0 ) {\r\n\r\n\t\t\t// eye and target are in the same position\r\n\r\n\t\t\t_z.z = 1;\r\n\r\n\t\t}\r\n\r\n\t\t_z.normalize();\r\n\t\t_x.crossVectors( up, _z );\r\n\r\n\t\tif ( _x.lengthSq() === 0 ) {\r\n\r\n\t\t\t// up and z are parallel\r\n\r\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\r\n\r\n\t\t\t\t_z.x += 0.0001;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_z.z += 0.0001;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_z.normalize();\r\n\t\t\t_x.crossVectors( up, _z );\r\n\r\n\t\t}\r\n\r\n\t\t_x.normalize();\r\n\t\t_y.crossVectors( _z, _x );\r\n\r\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\r\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\r\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n\ttranspose() {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tlet tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetPosition( x, y, z ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\tte[ 12 ] = x.x;\r\n\t\t\tte[ 13 ] = x.y;\r\n\t\t\tte[ 14 ] = x.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tte[ 12 ] = x;\r\n\t\t\tte[ 13 ] = y;\r\n\t\t\tte[ 14 ] = z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\r\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\r\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\r\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\r\n\r\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 4 ] = t12 * detInv;\r\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 8 ] = t13 * detInv;\r\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\tte[ 12 ] = t14 * detInv;\r\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tscale( v ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMaxScaleOnAxis() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t}\r\n\r\n\tmakeTranslation( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationX( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s, c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationY( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationZ( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts, c, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationAxis( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tconst c = Math.cos( angle );\r\n\t\tconst s = Math.sin( angle );\r\n\t\tconst t = 1 - c;\r\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\r\n\t\tconst tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeScale( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, yx, zx, 0,\r\n\t\t\txy, 1, zy, 0,\r\n\t\t\txz, yz, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\tte[ 1 ] = ( xy + wz ) * sx;\r\n\t\tte[ 2 ] = ( xz - wy ) * sx;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = ( xy - wz ) * sy;\r\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\tte[ 6 ] = ( yz + wx ) * sy;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = ( xz + wy ) * sz;\r\n\t\tte[ 9 ] = ( yz - wx ) * sz;\r\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = position.x;\r\n\t\tte[ 13 ] = position.y;\r\n\t\tte[ 14 ] = position.z;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdecompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t// if determine is negative, we need to invert one scale\r\n\t\tconst det = this.determinant();\r\n\t\tif ( det < 0 ) sx = - sx;\r\n\r\n\t\tposition.x = te[ 12 ];\r\n\t\tposition.y = te[ 13 ];\r\n\t\tposition.z = te[ 14 ];\r\n\r\n\t\t// scale the rotation part\r\n\t\t_m1.copy( this );\r\n\r\n\t\tconst invSX = 1 / sx;\r\n\t\tconst invSY = 1 / sy;\r\n\t\tconst invSZ = 1 / sz;\r\n\r\n\t\t_m1.elements[ 0 ] *= invSX;\r\n\t\t_m1.elements[ 1 ] *= invSX;\r\n\t\t_m1.elements[ 2 ] *= invSX;\r\n\r\n\t\t_m1.elements[ 4 ] *= invSY;\r\n\t\t_m1.elements[ 5 ] *= invSY;\r\n\t\t_m1.elements[ 6 ] *= invSY;\r\n\r\n\t\t_m1.elements[ 8 ] *= invSZ;\r\n\t\t_m1.elements[ 9 ] *= invSZ;\r\n\t\t_m1.elements[ 10 ] *= invSZ;\r\n\r\n\t\tquaternion.setFromRotationMatrix( _m1 );\r\n\r\n\t\tscale.x = sx;\r\n\t\tscale.y = sy;\r\n\t\tscale.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakePerspective( left, right, top, bottom, near, far ) {\r\n\r\n\t\tif ( far === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = 2 * near / ( right - left );\r\n\t\tconst y = 2 * near / ( top - bottom );\r\n\r\n\t\tconst a = ( right + left ) / ( right - left );\r\n\t\tconst b = ( top + bottom ) / ( top - bottom );\r\n\t\tconst c = - ( far + near ) / ( far - near );\r\n\t\tconst d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst w = 1.0 / ( right - left );\r\n\t\tconst h = 1.0 / ( top - bottom );\r\n\t\tconst p = 1.0 / ( far - near );\r\n\r\n\t\tconst x = ( right + left ) * w;\r\n\t\tconst y = ( top + bottom ) * h;\r\n\t\tconst z = ( far + near ) * p;\r\n\r\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\t\tarray[ offset + 9 ] = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n\r\nMatrix4.prototype.isMatrix4 = true;\r\n\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\r\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\r\nconst _x = /*@__PURE__*/ new Vector3();\r\nconst _y = /*@__PURE__*/ new Vector3();\r\nconst _z = /*@__PURE__*/ new Vector3();\r\n\r\nexport { Matrix4 };\r\n"]},"metadata":{},"sourceType":"module"}