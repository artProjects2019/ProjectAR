{"ast":null,"code":"export default\n/* glsl */\n`\n#ifdef USE_TRANSMISSION\n\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\n\t#ifdef USE_TRANSMISSIONMAP\n\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\n\t#endif\n\n\t#ifdef USE_THICKNESSMAP\n\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\n\t#endif\n\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif\n`;","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/shaders/ShaderChunk/transmission_fragment.glsl.js"],"names":[],"mappings":"AAAA;AAAe;AAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA","sourcesContent":["export default /* glsl */`\r\n#ifdef USE_TRANSMISSION\r\n\r\n\tfloat transmissionAlpha = 1.0;\r\n\tfloat transmissionFactor = transmission;\r\n\tfloat thicknessFactor = thickness;\r\n\r\n\t#ifdef USE_TRANSMISSIONMAP\r\n\r\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_THICKNESSMAP\r\n\r\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\r\n\r\n\t#endif\r\n\r\n\tvec3 pos = vWorldPosition;\r\n\tvec3 v = normalize( cameraPosition - pos );\r\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\r\n\r\n\tvec4 transmission = getIBLVolumeRefraction(\r\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\r\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\r\n\t\tattenuationColor, attenuationDistance );\r\n\r\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\r\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\r\n#endif\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}