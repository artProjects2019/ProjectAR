{"ast":null,"code":"import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\n\nclass WebGLRenderTarget extends EventDispatcher {\n  constructor(width, height, options = {}) {\n    super();\n    this.width = width;\n    this.height = height;\n    this.depth = 1;\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new Vector4(0, 0, width, height);\n    const image = {\n      width: width,\n      height: height,\n      depth: 1\n    };\n    this.texture = new Texture(image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.texture.isRenderTargetTexture = true;\n    this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    this.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n    this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n    this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n    this.samples = options.samples !== undefined ? options.samples : 0;\n  }\n\n  setSize(width, height, depth = 1) {\n    if (this.width !== width || this.height !== height || this.depth !== depth) {\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n      this.texture.image.width = width;\n      this.texture.image.height = height;\n      this.texture.image.depth = depth;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.depth = source.depth;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone(); // ensure image object is not shared, see #20328\n\n    this.texture.image = Object.assign({}, source.texture.image);\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    if (source.depthTexture !== null) this.depthTexture = source.depthTexture.clone();\n    this.samples = source.samples;\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\nexport { WebGLRenderTarget };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/WebGLRenderTarget.js"],"names":["EventDispatcher","Texture","LinearFilter","Vector4","WebGLRenderTarget","constructor","width","height","options","depth","scissor","scissorTest","viewport","image","texture","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","isRenderTargetTexture","generateMipmaps","undefined","internalFormat","depthBuffer","stencilBuffer","depthTexture","samples","setSize","dispose","set","clone","copy","source","Object","assign","dispatchEvent","prototype","isWebGLRenderTarget"],"mappings":"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","sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\r\nimport { Texture } from '../textures/Texture.js';\r\nimport { LinearFilter } from '../constants.js';\r\nimport { Vector4 } from '../math/Vector4.js';\r\n\r\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\r\nclass WebGLRenderTarget extends EventDispatcher {\r\n\r\n\tconstructor( width, height, options = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = 1;\r\n\r\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\r\n\t\tthis.scissorTest = false;\r\n\r\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\r\n\r\n\t\tconst image = { width: width, height: height, depth: 1 };\r\n\r\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\r\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\r\n\r\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n\r\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\r\n\r\n\t}\r\n\r\n\tsetSize( width, height, depth = 1 ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.depth = depth;\r\n\r\n\t\t\tthis.texture.image.width = width;\r\n\t\t\tthis.texture.image.height = height;\r\n\t\t\tthis.texture.image.depth = depth;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\t\tthis.depth = source.depth;\r\n\r\n\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\tthis.texture = source.texture.clone();\r\n\r\n\t\t// ensure image object is not shared, see #20328\r\n\r\n\t\tthis.texture.image = Object.assign( {}, source.texture.image );\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\r\n\r\n\t\tthis.samples = source.samples;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\r\n\r\nexport { WebGLRenderTarget };\r\n"]},"metadata":{},"sourceType":"module"}