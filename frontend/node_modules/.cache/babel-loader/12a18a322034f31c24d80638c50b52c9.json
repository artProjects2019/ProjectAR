{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/**\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [textures] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'textures' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (textures factorizations):\r\n *\r\n * .upload( gl, seq, values, textures )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n *\r\n * Methods of the top-level container (textures factorizations):\r\n *\r\n * .setValue( gl, name, value, textures )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n */\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\nimport { Data3DTexture } from '../../textures/Data3DTexture.js';\nconst emptyTexture = new Texture();\nconst emptyArrayTexture = new DataArrayTexture();\nconst empty3dTexture = new Data3DTexture();\nconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array(16);\nconst mat3array = new Float32Array(9);\nconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\nfunction flatten(array, nBlocks, blockSize) {\n  const firstElem = array[0];\n  if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n  // see http://jacksondunstan.com/articles/983\n\n  const n = nBlocks * blockSize;\n  let r = arrayCacheF32[n];\n\n  if (r === undefined) {\n    r = new Float32Array(n);\n    arrayCacheF32[n] = r;\n  }\n\n  if (nBlocks !== 0) {\n    firstElem.toArray(r, 0);\n\n    for (let i = 1, offset = 0; i !== nBlocks; ++i) {\n      offset += blockSize;\n      array[i].toArray(r, offset);\n    }\n  }\n\n  return r;\n}\n\nfunction arraysEqual(a, b) {\n  if (a.length !== b.length) return false;\n\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\n\nfunction copyArray(a, b) {\n  for (let i = 0, l = b.length; i < l; i++) {\n    a[i] = b[i];\n  }\n} // Texture unit allocation\n\n\nfunction allocTexUnits(textures, n) {\n  let r = arrayCacheI32[n];\n\n  if (r === undefined) {\n    r = new Int32Array(n);\n    arrayCacheI32[n] = r;\n  }\n\n  for (let i = 0; i !== n; ++i) {\n    r[i] = textures.allocateTextureUnit();\n  }\n\n  return r;\n} // --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\n\n\nfunction setValueV1f(gl, v) {\n  const cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1f(this.addr, v);\n  cache[0] = v;\n} // Single float vector (from flat array or THREE.VectorN)\n\n\nfunction setValueV2f(gl, v) {\n  const cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y) {\n      gl.uniform2f(this.addr, v.x, v.y);\n      cache[0] = v.x;\n      cache[1] = v.y;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\nfunction setValueV3f(gl, v) {\n  const cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n      gl.uniform3f(this.addr, v.x, v.y, v.z);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n    }\n  } else if (v.r !== undefined) {\n    if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n      gl.uniform3f(this.addr, v.r, v.g, v.b);\n      cache[0] = v.r;\n      cache[1] = v.g;\n      cache[2] = v.b;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\nfunction setValueV4f(gl, v) {\n  const cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n      gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n      cache[3] = v.w;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4fv(this.addr, v);\n    copyArray(cache, v);\n  }\n} // Single matrix (from flat array or THREE.MatrixN)\n\n\nfunction setValueM2(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix2fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat2array.set(elements);\n    gl.uniformMatrix2fv(this.addr, false, mat2array);\n    copyArray(cache, elements);\n  }\n}\n\nfunction setValueM3(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix3fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat3array.set(elements);\n    gl.uniformMatrix3fv(this.addr, false, mat3array);\n    copyArray(cache, elements);\n  }\n}\n\nfunction setValueM4(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix4fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat4array.set(elements);\n    gl.uniformMatrix4fv(this.addr, false, mat4array);\n    copyArray(cache, elements);\n  }\n} // Single integer / boolean\n\n\nfunction setValueV1i(gl, v) {\n  const cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1i(this.addr, v);\n  cache[0] = v;\n} // Single integer / boolean vector (from flat array)\n\n\nfunction setValueV2i(gl, v) {\n  const cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform2iv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValueV3i(gl, v) {\n  const cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform3iv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValueV4i(gl, v) {\n  const cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform4iv(this.addr, v);\n  copyArray(cache, v);\n} // Single unsigned integer\n\n\nfunction setValueV1ui(gl, v) {\n  const cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1ui(this.addr, v);\n  cache[0] = v;\n} // Single unsigned integer vector (from flat array)\n\n\nfunction setValueV2ui(gl, v) {\n  const cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform2uiv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValueV3ui(gl, v) {\n  const cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform3uiv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValueV4ui(gl, v) {\n  const cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform4uiv(this.addr, v);\n  copyArray(cache, v);\n} // Single texture (2D / Cube)\n\n\nfunction setValueT1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTexture2D(v || emptyTexture, unit);\n}\n\nfunction setValueT3D1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTexture3D(v || empty3dTexture, unit);\n}\n\nfunction setValueT6(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTextureCube(v || emptyCubeTexture, unit);\n}\n\nfunction setValueT2DArray1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTexture2DArray(v || emptyArrayTexture, unit);\n} // Helper to pick the right setter for the singular case\n\n\nfunction getSingularSetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValueV1f;\n    // FLOAT\n\n    case 0x8b50:\n      return setValueV2f;\n    // _VEC2\n\n    case 0x8b51:\n      return setValueV3f;\n    // _VEC3\n\n    case 0x8b52:\n      return setValueV4f;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValueM2;\n    // _MAT2\n\n    case 0x8b5b:\n      return setValueM3;\n    // _MAT3\n\n    case 0x8b5c:\n      return setValueM4;\n    // _MAT4\n\n    case 0x1404:\n    case 0x8b56:\n      return setValueV1i;\n    // INT, BOOL\n\n    case 0x8b53:\n    case 0x8b57:\n      return setValueV2i;\n    // _VEC2\n\n    case 0x8b54:\n    case 0x8b58:\n      return setValueV3i;\n    // _VEC3\n\n    case 0x8b55:\n    case 0x8b59:\n      return setValueV4i;\n    // _VEC4\n\n    case 0x1405:\n      return setValueV1ui;\n    // UINT\n\n    case 0x8dc6:\n      return setValueV2ui;\n    // _VEC2\n\n    case 0x8dc7:\n      return setValueV3ui;\n    // _VEC3\n\n    case 0x8dc8:\n      return setValueV4ui;\n    // _VEC4\n\n    case 0x8b5e: // SAMPLER_2D\n\n    case 0x8d66: // SAMPLER_EXTERNAL_OES\n\n    case 0x8dca: // INT_SAMPLER_2D\n\n    case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n    case 0x8b62:\n      // SAMPLER_2D_SHADOW\n      return setValueT1;\n\n    case 0x8b5f: // SAMPLER_3D\n\n    case 0x8dcb: // INT_SAMPLER_3D\n\n    case 0x8dd3:\n      // UNSIGNED_INT_SAMPLER_3D\n      return setValueT3D1;\n\n    case 0x8b60: // SAMPLER_CUBE\n\n    case 0x8dcc: // INT_SAMPLER_CUBE\n\n    case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n    case 0x8dc5:\n      // SAMPLER_CUBE_SHADOW\n      return setValueT6;\n\n    case 0x8dc1: // SAMPLER_2D_ARRAY\n\n    case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n    case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n    case 0x8dc4:\n      // SAMPLER_2D_ARRAY_SHADOW\n      return setValueT2DArray1;\n  }\n} // Array of scalars\n\n\nfunction setValueV1fArray(gl, v) {\n  gl.uniform1fv(this.addr, v);\n} // Array of vectors (from flat array or array of THREE.VectorN)\n\n\nfunction setValueV2fArray(gl, v) {\n  const data = flatten(v, this.size, 2);\n  gl.uniform2fv(this.addr, data);\n}\n\nfunction setValueV3fArray(gl, v) {\n  const data = flatten(v, this.size, 3);\n  gl.uniform3fv(this.addr, data);\n}\n\nfunction setValueV4fArray(gl, v) {\n  const data = flatten(v, this.size, 4);\n  gl.uniform4fv(this.addr, data);\n} // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\nfunction setValueM2Array(gl, v) {\n  const data = flatten(v, this.size, 4);\n  gl.uniformMatrix2fv(this.addr, false, data);\n}\n\nfunction setValueM3Array(gl, v) {\n  const data = flatten(v, this.size, 9);\n  gl.uniformMatrix3fv(this.addr, false, data);\n}\n\nfunction setValueM4Array(gl, v) {\n  const data = flatten(v, this.size, 16);\n  gl.uniformMatrix4fv(this.addr, false, data);\n} // Array of integer / boolean\n\n\nfunction setValueV1iArray(gl, v) {\n  gl.uniform1iv(this.addr, v);\n} // Array of integer / boolean vectors (from flat array)\n\n\nfunction setValueV2iArray(gl, v) {\n  gl.uniform2iv(this.addr, v);\n}\n\nfunction setValueV3iArray(gl, v) {\n  gl.uniform3iv(this.addr, v);\n}\n\nfunction setValueV4iArray(gl, v) {\n  gl.uniform4iv(this.addr, v);\n} // Array of unsigned integer\n\n\nfunction setValueV1uiArray(gl, v) {\n  gl.uniform1uiv(this.addr, v);\n} // Array of unsigned integer vectors (from flat array)\n\n\nfunction setValueV2uiArray(gl, v) {\n  gl.uniform2uiv(this.addr, v);\n}\n\nfunction setValueV3uiArray(gl, v) {\n  gl.uniform3uiv(this.addr, v);\n}\n\nfunction setValueV4uiArray(gl, v) {\n  gl.uniform4uiv(this.addr, v);\n} // Array of textures (2D / 3D / Cube / 2DArray)\n\n\nfunction setValueT1Array(gl, v, textures) {\n  const n = v.length;\n  const units = allocTexUnits(textures, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (let i = 0; i !== n; ++i) {\n    textures.setTexture2D(v[i] || emptyTexture, units[i]);\n  }\n}\n\nfunction setValueT3DArray(gl, v, textures) {\n  const n = v.length;\n  const units = allocTexUnits(textures, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (let i = 0; i !== n; ++i) {\n    textures.setTexture3D(v[i] || empty3dTexture, units[i]);\n  }\n}\n\nfunction setValueT6Array(gl, v, textures) {\n  const n = v.length;\n  const units = allocTexUnits(textures, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (let i = 0; i !== n; ++i) {\n    textures.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n  }\n}\n\nfunction setValueT2DArrayArray(gl, v, textures) {\n  const n = v.length;\n  const units = allocTexUnits(textures, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (let i = 0; i !== n; ++i) {\n    textures.setTexture2DArray(v[i] || emptyArrayTexture, units[i]);\n  }\n} // Helper to pick the right setter for a pure (bottom-level) array\n\n\nfunction getPureArraySetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValueV1fArray;\n    // FLOAT\n\n    case 0x8b50:\n      return setValueV2fArray;\n    // _VEC2\n\n    case 0x8b51:\n      return setValueV3fArray;\n    // _VEC3\n\n    case 0x8b52:\n      return setValueV4fArray;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValueM2Array;\n    // _MAT2\n\n    case 0x8b5b:\n      return setValueM3Array;\n    // _MAT3\n\n    case 0x8b5c:\n      return setValueM4Array;\n    // _MAT4\n\n    case 0x1404:\n    case 0x8b56:\n      return setValueV1iArray;\n    // INT, BOOL\n\n    case 0x8b53:\n    case 0x8b57:\n      return setValueV2iArray;\n    // _VEC2\n\n    case 0x8b54:\n    case 0x8b58:\n      return setValueV3iArray;\n    // _VEC3\n\n    case 0x8b55:\n    case 0x8b59:\n      return setValueV4iArray;\n    // _VEC4\n\n    case 0x1405:\n      return setValueV1uiArray;\n    // UINT\n\n    case 0x8dc6:\n      return setValueV2uiArray;\n    // _VEC2\n\n    case 0x8dc7:\n      return setValueV3uiArray;\n    // _VEC3\n\n    case 0x8dc8:\n      return setValueV4uiArray;\n    // _VEC4\n\n    case 0x8b5e: // SAMPLER_2D\n\n    case 0x8d66: // SAMPLER_EXTERNAL_OES\n\n    case 0x8dca: // INT_SAMPLER_2D\n\n    case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n    case 0x8b62:\n      // SAMPLER_2D_SHADOW\n      return setValueT1Array;\n\n    case 0x8b5f: // SAMPLER_3D\n\n    case 0x8dcb: // INT_SAMPLER_3D\n\n    case 0x8dd3:\n      // UNSIGNED_INT_SAMPLER_3D\n      return setValueT3DArray;\n\n    case 0x8b60: // SAMPLER_CUBE\n\n    case 0x8dcc: // INT_SAMPLER_CUBE\n\n    case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n    case 0x8dc5:\n      // SAMPLER_CUBE_SHADOW\n      return setValueT6Array;\n\n    case 0x8dc1: // SAMPLER_2D_ARRAY\n\n    case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n    case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n    case 0x8dc4:\n      // SAMPLER_2D_ARRAY_SHADOW\n      return setValueT2DArrayArray;\n  }\n} // --- Uniform Classes ---\n\n\nfunction SingleUniform(id, activeInfo, addr) {\n  this.id = id;\n  this.addr = addr;\n  this.cache = [];\n  this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n}\n\nfunction PureArrayUniform(id, activeInfo, addr) {\n  this.id = id;\n  this.addr = addr;\n  this.cache = [];\n  this.size = activeInfo.size;\n  this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n}\n\nPureArrayUniform.prototype.updateCache = function (data) {\n  const cache = this.cache;\n\n  if (data instanceof Float32Array && cache.length !== data.length) {\n    this.cache = new Float32Array(data.length);\n  }\n\n  copyArray(cache, data);\n};\n\nfunction StructuredUniform(id) {\n  this.id = id;\n  this.seq = [];\n  this.map = {};\n}\n\nStructuredUniform.prototype.setValue = function (gl, value, textures) {\n  const seq = this.seq;\n\n  for (let i = 0, n = seq.length; i !== n; ++i) {\n    const u = seq[i];\n    u.setValue(gl, value[u.id], textures);\n  }\n}; // --- Top-level ---\n// Parser - builds up the property tree from the path strings\n\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform(container, uniformObject) {\n  container.seq.push(uniformObject);\n  container.map[uniformObject.id] = uniformObject;\n}\n\nfunction parseUniform(activeInfo, addr, container) {\n  const path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n  RePathPart.lastIndex = 0;\n\n  while (true) {\n    const match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex;\n    let id = match[1];\n    const idIsIndex = match[2] === ']',\n          subscript = match[3];\n    if (idIsIndex) id = id | 0; // convert to integer\n\n    if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n      // bare name or \"pure\" bottom-level array \"[0]\" suffix\n      addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n      break;\n    } else {\n      // step into inner node / create it in case it doesn't exist\n      const map = container.map;\n      let next = map[id];\n\n      if (next === undefined) {\n        next = new StructuredUniform(id);\n        addUniform(container, next);\n      }\n\n      container = next;\n    }\n  }\n} // Root Container\n\n\nfunction WebGLUniforms(gl, program) {\n  this.seq = [];\n  this.map = {};\n  const n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (let i = 0; i < n; ++i) {\n    const info = gl.getActiveUniform(program, i),\n          addr = gl.getUniformLocation(program, info.name);\n    parseUniform(info, addr, this);\n  }\n}\n\nWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n  const u = this.map[name];\n  if (u !== undefined) u.setValue(gl, value, textures);\n};\n\nWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n  const v = object[name];\n  if (v !== undefined) this.setValue(gl, name, v);\n}; // Static interface\n\n\nWebGLUniforms.upload = function (gl, seq, values, textures) {\n  for (let i = 0, n = seq.length; i !== n; ++i) {\n    const u = seq[i],\n          v = values[u.id];\n\n    if (v.needsUpdate !== false) {\n      // note: always updating when .needsUpdate is undefined\n      u.setValue(gl, v.value, textures);\n    }\n  }\n};\n\nWebGLUniforms.seqWithValue = function (seq, values) {\n  const r = [];\n\n  for (let i = 0, n = seq.length; i !== n; ++i) {\n    const u = seq[i];\n    if (u.id in values) r.push(u);\n  }\n\n  return r;\n};\n\nexport { WebGLUniforms };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/webgl/WebGLUniforms.js"],"names":["CubeTexture","Texture","DataArrayTexture","Data3DTexture","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","Float32Array","mat3array","mat2array","flatten","array","nBlocks","blockSize","firstElem","n","r","undefined","toArray","i","offset","arraysEqual","a","b","length","l","copyArray","allocTexUnits","textures","Int32Array","allocateTextureUnit","setValueV1f","gl","v","cache","uniform1f","addr","setValueV2f","x","y","uniform2f","uniform2fv","setValueV3f","z","uniform3f","g","uniform3fv","setValueV4f","w","uniform4f","uniform4fv","setValueM2","elements","uniformMatrix2fv","set","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","type","setValueV1fArray","uniform1fv","setValueV2fArray","data","size","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","prototype","updateCache","StructuredUniform","seq","map","value","u","RePathPart","addUniform","container","uniformObject","push","parseUniform","path","name","pathLength","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","object","upload","values","needsUpdate","seqWithValue"],"mappings":"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","sourcesContent":["/**\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [textures] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'textures' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (textures factorizations):\r\n *\r\n * .upload( gl, seq, values, textures )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n *\r\n * Methods of the top-level container (textures factorizations):\r\n *\r\n * .setValue( gl, name, value, textures )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n */\r\n\r\nimport { CubeTexture } from '../../textures/CubeTexture.js';\r\nimport { Texture } from '../../textures/Texture.js';\r\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\r\nimport { Data3DTexture } from '../../textures/Data3DTexture.js';\r\n\r\nconst emptyTexture = new Texture();\r\nconst emptyArrayTexture = new DataArrayTexture();\r\nconst empty3dTexture = new Data3DTexture();\r\nconst emptyCubeTexture = new CubeTexture();\r\n\r\n// --- Utilities ---\r\n\r\n// Array Caches (provide typed arrays for temporary by size)\r\n\r\nconst arrayCacheF32 = [];\r\nconst arrayCacheI32 = [];\r\n\r\n// Float32Array caches used for uploading Matrix uniforms\r\n\r\nconst mat4array = new Float32Array( 16 );\r\nconst mat3array = new Float32Array( 9 );\r\nconst mat2array = new Float32Array( 4 );\r\n\r\n// Flattening for arrays of vectors and matrices\r\n\r\nfunction flatten( array, nBlocks, blockSize ) {\r\n\r\n\tconst firstElem = array[ 0 ];\r\n\r\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t// unoptimized: ! isNaN( firstElem )\r\n\t// see http://jacksondunstan.com/articles/983\r\n\r\n\tconst n = nBlocks * blockSize;\r\n\tlet r = arrayCacheF32[ n ];\r\n\r\n\tif ( r === undefined ) {\r\n\r\n\t\tr = new Float32Array( n );\r\n\t\tarrayCacheF32[ n ] = r;\r\n\r\n\t}\r\n\r\n\tif ( nBlocks !== 0 ) {\r\n\r\n\t\tfirstElem.toArray( r, 0 );\r\n\r\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n\t\t\toffset += blockSize;\r\n\t\t\tarray[ i ].toArray( r, offset );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn r;\r\n\r\n}\r\n\r\nfunction arraysEqual( a, b ) {\r\n\r\n\tif ( a.length !== b.length ) return false;\r\n\r\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\r\n\r\n\t\tif ( a[ i ] !== b[ i ] ) return false;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nfunction copyArray( a, b ) {\r\n\r\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\r\n\r\n\t\ta[ i ] = b[ i ];\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Texture unit allocation\r\n\r\nfunction allocTexUnits( textures, n ) {\r\n\r\n\tlet r = arrayCacheI32[ n ];\r\n\r\n\tif ( r === undefined ) {\r\n\r\n\t\tr = new Int32Array( n );\r\n\t\tarrayCacheI32[ n ] = r;\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\tr[ i ] = textures.allocateTextureUnit();\r\n\r\n\t}\r\n\r\n\treturn r;\r\n\r\n}\r\n\r\n// --- Setters ---\r\n\r\n// Note: Defining these methods externally, because they come in a bunch\r\n// and this way their names minify.\r\n\r\n// Single scalar\r\n\r\nfunction setValueV1f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1f( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single float vector (from flat array or THREE.VectorN)\r\n\r\nfunction setValueV2f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV3f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t}\r\n\r\n\t} else if ( v.r !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\r\n\r\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n\r\n\t\t\tcache[ 0 ] = v.r;\r\n\t\t\tcache[ 1 ] = v.g;\r\n\t\t\tcache[ 2 ] = v.b;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV4f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Single matrix (from flat array or THREE.MatrixN)\r\n\r\nfunction setValueM2( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat2array.set( elements );\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueM3( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat3array.set( elements );\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueM4( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat4array.set( elements );\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Single integer / boolean\r\n\r\nfunction setValueV1i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1i( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single integer / boolean vector (from flat array)\r\n\r\nfunction setValueV2i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\tgl.uniform2iv( this.addr, v );\r\n\r\n\tcopyArray( cache, v );\r\n\r\n}\r\n\r\nfunction setValueV3i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\tgl.uniform3iv( this.addr, v );\r\n\r\n\tcopyArray( cache, v );\r\n\r\n}\r\n\r\nfunction setValueV4i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\tgl.uniform4iv( this.addr, v );\r\n\r\n\tcopyArray( cache, v );\r\n\r\n}\r\n\r\n// Single unsigned integer\r\n\r\nfunction setValueV1ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1ui( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single unsigned integer vector (from flat array)\r\n\r\nfunction setValueV2ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\tgl.uniform2uiv( this.addr, v );\r\n\r\n\tcopyArray( cache, v );\r\n\r\n}\r\n\r\nfunction setValueV3ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\tgl.uniform3uiv( this.addr, v );\r\n\r\n\tcopyArray( cache, v );\r\n\r\n}\r\n\r\nfunction setValueV4ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\tgl.uniform4uiv( this.addr, v );\r\n\r\n\tcopyArray( cache, v );\r\n\r\n}\r\n\r\n\r\n// Single texture (2D / Cube)\r\n\r\nfunction setValueT1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTexture2D( v || emptyTexture, unit );\r\n\r\n}\r\n\r\nfunction setValueT3D1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTexture3D( v || empty3dTexture, unit );\r\n\r\n}\r\n\r\nfunction setValueT6( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\r\n\r\n}\r\n\r\nfunction setValueT2DArray1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\r\n\r\n}\r\n\r\n// Helper to pick the right setter for the singular case\r\n\r\nfunction getSingularSetter( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase 0x1406: return setValueV1f; // FLOAT\r\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\r\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\r\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\r\n\r\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\r\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\r\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\r\n\r\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\r\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\r\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\r\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\r\n\r\n\t\tcase 0x1405: return setValueV1ui; // UINT\r\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\r\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\r\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\r\n\r\n\t\tcase 0x8b5e: // SAMPLER_2D\r\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\r\n\t\t\treturn setValueT1;\r\n\r\n\t\tcase 0x8b5f: // SAMPLER_3D\r\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\r\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\r\n\t\t\treturn setValueT3D1;\r\n\r\n\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\r\n\t\t\treturn setValueT6;\r\n\r\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\treturn setValueT2DArray1;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Array of scalars\r\n\r\nfunction setValueV1fArray( gl, v ) {\r\n\r\n\tgl.uniform1fv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of vectors (from flat array or array of THREE.VectorN)\r\n\r\nfunction setValueV2fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 2 );\r\n\r\n\tgl.uniform2fv( this.addr, data );\r\n\r\n}\r\n\r\nfunction setValueV3fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 3 );\r\n\r\n\tgl.uniform3fv( this.addr, data );\r\n\r\n}\r\n\r\nfunction setValueV4fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 4 );\r\n\r\n\tgl.uniform4fv( this.addr, data );\r\n\r\n}\r\n\r\n// Array of matrices (from flat array or array of THREE.MatrixN)\r\n\r\nfunction setValueM2Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 4 );\r\n\r\n\tgl.uniformMatrix2fv( this.addr, false, data );\r\n\r\n}\r\n\r\nfunction setValueM3Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 9 );\r\n\r\n\tgl.uniformMatrix3fv( this.addr, false, data );\r\n\r\n}\r\n\r\nfunction setValueM4Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 16 );\r\n\r\n\tgl.uniformMatrix4fv( this.addr, false, data );\r\n\r\n}\r\n\r\n// Array of integer / boolean\r\n\r\nfunction setValueV1iArray( gl, v ) {\r\n\r\n\tgl.uniform1iv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of integer / boolean vectors (from flat array)\r\n\r\nfunction setValueV2iArray( gl, v ) {\r\n\r\n\tgl.uniform2iv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV3iArray( gl, v ) {\r\n\r\n\tgl.uniform3iv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV4iArray( gl, v ) {\r\n\r\n\tgl.uniform4iv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of unsigned integer\r\n\r\nfunction setValueV1uiArray( gl, v ) {\r\n\r\n\tgl.uniform1uiv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of unsigned integer vectors (from flat array)\r\n\r\nfunction setValueV2uiArray( gl, v ) {\r\n\r\n\tgl.uniform2uiv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV3uiArray( gl, v ) {\r\n\r\n\tgl.uniform3uiv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV4uiArray( gl, v ) {\r\n\r\n\tgl.uniform4uiv( this.addr, v );\r\n\r\n}\r\n\r\n\r\n// Array of textures (2D / 3D / Cube / 2DArray)\r\n\r\nfunction setValueT1Array( gl, v, textures ) {\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tgl.uniform1iv( this.addr, units );\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT3DArray( gl, v, textures ) {\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tgl.uniform1iv( this.addr, units );\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT6Array( gl, v, textures ) {\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tgl.uniform1iv( this.addr, units );\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT2DArrayArray( gl, v, textures ) {\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tgl.uniform1iv( this.addr, units );\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Helper to pick the right setter for a pure (bottom-level) array\r\n\r\nfunction getPureArraySetter( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\r\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\r\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\r\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\r\n\r\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\r\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\r\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\r\n\r\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\r\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\r\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\r\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\r\n\r\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\r\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\r\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\r\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\r\n\r\n\t\tcase 0x8b5e: // SAMPLER_2D\r\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\r\n\t\t\treturn setValueT1Array;\r\n\r\n\t\tcase 0x8b5f: // SAMPLER_3D\r\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\r\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\r\n\t\t\treturn setValueT3DArray;\r\n\r\n\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\r\n\t\t\treturn setValueT6Array;\r\n\r\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\treturn setValueT2DArrayArray;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// --- Uniform Classes ---\r\n\r\nfunction SingleUniform( id, activeInfo, addr ) {\r\n\r\n\tthis.id = id;\r\n\tthis.addr = addr;\r\n\tthis.cache = [];\r\n\tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n\t// this.path = activeInfo.name; // DEBUG\r\n\r\n}\r\n\r\nfunction PureArrayUniform( id, activeInfo, addr ) {\r\n\r\n\tthis.id = id;\r\n\tthis.addr = addr;\r\n\tthis.cache = [];\r\n\tthis.size = activeInfo.size;\r\n\tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n\t// this.path = activeInfo.name; // DEBUG\r\n\r\n}\r\n\r\nPureArrayUniform.prototype.updateCache = function ( data ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\r\n\r\n\t\tthis.cache = new Float32Array( data.length );\r\n\r\n\t}\r\n\r\n\tcopyArray( cache, data );\r\n\r\n};\r\n\r\nfunction StructuredUniform( id ) {\r\n\r\n\tthis.id = id;\r\n\r\n\tthis.seq = [];\r\n\tthis.map = {};\r\n\r\n}\r\n\r\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\r\n\r\n\tconst seq = this.seq;\r\n\r\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\tconst u = seq[ i ];\r\n\t\tu.setValue( gl, value[ u.id ], textures );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// --- Top-level ---\r\n\r\n// Parser - builds up the property tree from the path strings\r\n\r\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\r\n\r\n// extracts\r\n// \t- the identifier (member name or array index)\r\n//  - followed by an optional right bracket (found when array index)\r\n//  - followed by an optional left bracket or dot (type of subscript)\r\n//\r\n// Note: These portions can be read in a non-overlapping fashion and\r\n// allow straightforward parsing of the hierarchy that WebGL encodes\r\n// in the uniform names.\r\n\r\nfunction addUniform( container, uniformObject ) {\r\n\r\n\tcontainer.seq.push( uniformObject );\r\n\tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n}\r\n\r\nfunction parseUniform( activeInfo, addr, container ) {\r\n\r\n\tconst path = activeInfo.name,\r\n\t\tpathLength = path.length;\r\n\r\n\t// reset RegExp object, because of the early exit of a previous run\r\n\tRePathPart.lastIndex = 0;\r\n\r\n\twhile ( true ) {\r\n\r\n\t\tconst match = RePathPart.exec( path ),\r\n\t\t\tmatchEnd = RePathPart.lastIndex;\r\n\r\n\t\tlet id = match[ 1 ];\r\n\t\tconst idIsIndex = match[ 2 ] === ']',\r\n\t\t\tsubscript = match[ 3 ];\r\n\r\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\r\n\r\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n\t\t\taddUniform( container, subscript === undefined ?\r\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n\t\t\tconst map = container.map;\r\n\t\t\tlet next = map[ id ];\r\n\r\n\t\t\tif ( next === undefined ) {\r\n\r\n\t\t\t\tnext = new StructuredUniform( id );\r\n\t\t\t\taddUniform( container, next );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcontainer = next;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Root Container\r\n\r\nfunction WebGLUniforms( gl, program ) {\r\n\r\n\tthis.seq = [];\r\n\tthis.map = {};\r\n\r\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\tfor ( let i = 0; i < n; ++ i ) {\r\n\r\n\t\tconst info = gl.getActiveUniform( program, i ),\r\n\t\t\taddr = gl.getUniformLocation( program, info.name );\r\n\r\n\t\tparseUniform( info, addr, this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\r\n\r\n\tconst u = this.map[ name ];\r\n\r\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\r\n\r\n};\r\n\r\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\r\n\r\n\tconst v = object[ name ];\r\n\r\n\tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n};\r\n\r\n\r\n// Static interface\r\n\r\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\r\n\r\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\tconst u = seq[ i ],\r\n\t\t\tv = values[ u.id ];\r\n\r\n\t\tif ( v.needsUpdate !== false ) {\r\n\r\n\t\t\t// note: always updating when .needsUpdate is undefined\r\n\t\t\tu.setValue( gl, v.value, textures );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nWebGLUniforms.seqWithValue = function ( seq, values ) {\r\n\r\n\tconst r = [];\r\n\r\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\tconst u = seq[ i ];\r\n\t\tif ( u.id in values ) r.push( u );\r\n\r\n\t}\r\n\r\n\treturn r;\r\n\r\n};\r\n\r\nexport { WebGLUniforms };\r\n"]},"metadata":{},"sourceType":"module"}