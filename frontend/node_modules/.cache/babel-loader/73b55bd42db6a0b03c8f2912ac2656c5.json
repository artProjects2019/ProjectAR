{"ast":null,"code":"import { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\n\nconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\nconst _lightPositionWorld = /*@__PURE__*/new Vector3();\n\nconst _lookTarget = /*@__PURE__*/new Vector3();\n\nclass LightShadow {\n  constructor(camera) {\n    this.camera = camera;\n    this.bias = 0;\n    this.normalBias = 0;\n    this.radius = 1;\n    this.blurSamples = 8;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.mapPass = null;\n    this.matrix = new Matrix4();\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this._frustum = new Frustum();\n    this._frameExtents = new Vector2(1, 1);\n    this._viewportCount = 1;\n    this._viewports = [new Vector4(0, 0, 1, 1)];\n  }\n\n  getViewportCount() {\n    return this._viewportCount;\n  }\n\n  getFrustum() {\n    return this._frustum;\n  }\n\n  updateMatrices(light) {\n    const shadowCamera = this.camera;\n    const shadowMatrix = this.matrix;\n\n    _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n    shadowCamera.position.copy(_lightPositionWorld);\n\n    _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n    shadowCamera.lookAt(_lookTarget);\n    shadowCamera.updateMatrixWorld();\n\n    _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n    this._frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n    shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    shadowMatrix.multiply(shadowCamera.projectionMatrix);\n    shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n  }\n\n  getViewport(viewportIndex) {\n    return this._viewports[viewportIndex];\n  }\n\n  getFrameExtents() {\n    return this._frameExtents;\n  }\n\n  dispose() {\n    if (this.map) {\n      this.map.dispose();\n    }\n\n    if (this.mapPass) {\n      this.mapPass.dispose();\n    }\n  }\n\n  copy(source) {\n    this.camera = source.camera.clone();\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  toJSON() {\n    const object = {};\n    if (this.bias !== 0) object.bias = this.bias;\n    if (this.normalBias !== 0) object.normalBias = this.normalBias;\n    if (this.radius !== 1) object.radius = this.radius;\n    if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n    object.camera = this.camera.toJSON(false).object;\n    delete object.camera.matrix;\n    return object;\n  }\n\n}\n\nexport { LightShadow };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/lights/LightShadow.js"],"names":["Matrix4","Vector2","Vector3","Vector4","Frustum","_projScreenMatrix","_lightPositionWorld","_lookTarget","LightShadow","constructor","camera","bias","normalBias","radius","blurSamples","mapSize","map","mapPass","matrix","autoUpdate","needsUpdate","_frustum","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowCamera","shadowMatrix","setFromMatrixPosition","matrixWorld","position","copy","target","lookAt","updateMatrixWorld","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromProjectionMatrix","set","multiply","getViewport","viewportIndex","getFrameExtents","dispose","source","clone","toJSON","object","x","y","toArray"],"mappings":"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","sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\nimport { Vector3 } from '../math/Vector3.js';\r\nimport { Vector4 } from '../math/Vector4.js';\r\nimport { Frustum } from '../math/Frustum.js';\r\n\r\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\r\nconst _lookTarget = /*@__PURE__*/ new Vector3();\r\n\r\nclass LightShadow {\r\n\r\n\tconstructor( camera ) {\r\n\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.bias = 0;\r\n\t\tthis.normalBias = 0;\r\n\t\tthis.radius = 1;\r\n\t\tthis.blurSamples = 8;\r\n\r\n\t\tthis.mapSize = new Vector2( 512, 512 );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.mapPass = null;\r\n\t\tthis.matrix = new Matrix4();\r\n\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tthis._frustum = new Frustum();\r\n\t\tthis._frameExtents = new Vector2( 1, 1 );\r\n\r\n\t\tthis._viewportCount = 1;\r\n\r\n\t\tthis._viewports = [\r\n\r\n\t\t\tnew Vector4( 0, 0, 1, 1 )\r\n\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tgetViewportCount() {\r\n\r\n\t\treturn this._viewportCount;\r\n\r\n\t}\r\n\r\n\tgetFrustum() {\r\n\r\n\t\treturn this._frustum;\r\n\r\n\t}\r\n\r\n\tupdateMatrices( light ) {\r\n\r\n\t\tconst shadowCamera = this.camera;\r\n\t\tconst shadowMatrix = this.matrix;\r\n\r\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\r\n\r\n\t\tshadowMatrix.set(\r\n\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t);\r\n\r\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t}\r\n\r\n\tgetViewport( viewportIndex ) {\r\n\r\n\t\treturn this._viewports[ viewportIndex ];\r\n\r\n\t}\r\n\r\n\tgetFrameExtents() {\r\n\r\n\t\treturn this._frameExtents;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tif ( this.map ) {\r\n\r\n\t\t\tthis.map.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.mapPass ) {\r\n\r\n\t\t\tthis.mapPass.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.camera = source.camera.clone();\r\n\r\n\t\tthis.bias = source.bias;\r\n\t\tthis.radius = source.radius;\r\n\r\n\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst object = {};\r\n\r\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\r\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\r\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\r\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\r\n\r\n\t\tobject.camera = this.camera.toJSON( false ).object;\r\n\t\tdelete object.camera.matrix;\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { LightShadow };\r\n"]},"metadata":{},"sourceType":"module"}