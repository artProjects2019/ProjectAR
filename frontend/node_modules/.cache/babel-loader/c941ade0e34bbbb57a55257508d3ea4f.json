{"ast":null,"code":"import { Color } from '../math/Color.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\nimport { Material } from '../materials/Material.js';\n\nclass MaterialLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.textures = {};\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(JSON.parse(text)));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(json) {\n    const textures = this.textures;\n\n    function getTexture(name) {\n      if (textures[name] === undefined) {\n        console.warn('THREE.MaterialLoader: Undefined texture', name);\n      }\n\n      return textures[name];\n    }\n\n    const material = Material.fromType(json.type);\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.sheen !== undefined) material.sheen = json.sheen;\n    if (json.sheenColor !== undefined) material.sheenColor = new Color().setHex(json.sheenColor);\n    if (json.sheenRoughness !== undefined) material.sheenRoughness = json.sheenRoughness;\n    if (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\n    if (json.specularColor !== undefined && material.specularColor !== undefined) material.specularColor.setHex(json.specularColor);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n    if (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n    if (json.transmission !== undefined) material.transmission = json.transmission;\n    if (json.thickness !== undefined) material.thickness = json.thickness;\n    if (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n    if (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n    if (json.fog !== undefined) material.fog = json.fog;\n    if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.combine !== undefined) material.combine = json.combine;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n    if (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n    if (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n    if (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n    if (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n    if (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n    if (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n    if (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n    if (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n    if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n    if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n    if (json.rotation !== undefined) material.rotation = json.rotation;\n    if (json.linewidth !== 1) material.linewidth = json.linewidth;\n    if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n    if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n    if (json.scale !== undefined) material.scale = json.scale;\n    if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n    if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n    if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n    if (json.dithering !== undefined) material.dithering = json.dithering;\n    if (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n    if (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n    if (json.visible !== undefined) material.visible = json.visible;\n    if (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n    if (json.userData !== undefined) material.userData = json.userData;\n\n    if (json.vertexColors !== undefined) {\n      if (typeof json.vertexColors === 'number') {\n        material.vertexColors = json.vertexColors > 0 ? true : false;\n      } else {\n        material.vertexColors = json.vertexColors;\n      }\n    } // Shader Material\n\n\n    if (json.uniforms !== undefined) {\n      for (const name in json.uniforms) {\n        const uniform = json.uniforms[name];\n        material.uniforms[name] = {};\n\n        switch (uniform.type) {\n          case 't':\n            material.uniforms[name].value = getTexture(uniform.value);\n            break;\n\n          case 'c':\n            material.uniforms[name].value = new Color().setHex(uniform.value);\n            break;\n\n          case 'v2':\n            material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n            break;\n\n          case 'v3':\n            material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n            break;\n\n          case 'v4':\n            material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n            break;\n\n          case 'm3':\n            material.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n            break;\n\n          case 'm4':\n            material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n            break;\n\n          default:\n            material.uniforms[name].value = uniform.value;\n        }\n      }\n    }\n\n    if (json.defines !== undefined) material.defines = json.defines;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n    if (json.extensions !== undefined) {\n      for (const key in json.extensions) {\n        material.extensions[key] = json.extensions[key];\n      }\n    } // Deprecated\n\n\n    if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n    // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n    if (json.map !== undefined) material.map = getTexture(json.map);\n    if (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n    if (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n    if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n    if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n    if (json.normalScale !== undefined) {\n      let normalScale = json.normalScale;\n\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n        normalScale = [normalScale, normalScale];\n      }\n\n      material.normalScale = new Vector2().fromArray(normalScale);\n    }\n\n    if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n    if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n    if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n    if (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\n    if (json.specularColorMap !== undefined) material.specularColorMap = getTexture(json.specularColorMap);\n    if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n    if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n    if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n    if (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n    if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n    if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n    if (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n    if (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n    if (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n    if (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n    if (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n    if (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n    if (json.sheenColorMap !== undefined) material.sheenColorMap = getTexture(json.sheenColorMap);\n    if (json.sheenRoughnessMap !== undefined) material.sheenRoughnessMap = getTexture(json.sheenRoughnessMap);\n    return material;\n  }\n\n  setTextures(value) {\n    this.textures = value;\n    return this;\n  }\n\n}\n\nexport { MaterialLoader };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/loaders/MaterialLoader.js"],"names":["Color","Vector2","Vector3","Vector4","Matrix3","Matrix4","FileLoader","Loader","Material","MaterialLoader","constructor","manager","textures","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","JSON","e","console","error","itemError","json","getTexture","name","undefined","warn","material","fromType","type","uuid","color","setHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","transmission","thickness","attenuationDistance","attenuationColor","fog","flatShading","blending","combine","side","shadowSide","opacity","transparent","alphaTest","depthTest","depthWrite","colorWrite","stencilWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","rotation","linewidth","dashSize","gapSize","scale","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","visible","toneMapped","userData","vertexColors","uniforms","uniform","value","fromArray","defines","vertexShader","fragmentShader","extensions","key","shading","size","sizeAttenuation","map","matcap","alphaMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","Array","isArray","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","emissiveIntensity","specularMap","specularIntensityMap","specularColorMap","envMap","envMapIntensity","reflectivity","refractionRatio","lightMap","lightMapIntensity","aoMap","aoMapIntensity","gradientMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","transmissionMap","thicknessMap","sheenColorMap","sheenRoughnessMap","setTextures"],"mappings":"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","sourcesContent":["import { Color } from '../math/Color.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\nimport { Vector3 } from '../math/Vector3.js';\r\nimport { Vector4 } from '../math/Vector4.js';\r\nimport { Matrix3 } from '../math/Matrix3.js';\r\nimport { Matrix4 } from '../math/Matrix4.js';\r\nimport { FileLoader } from './FileLoader.js';\r\nimport { Loader } from './Loader.js';\r\nimport { Material } from '../materials/Material.js';\r\n\r\nclass MaterialLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\t\tthis.textures = {};\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst textures = this.textures;\r\n\r\n\t\tfunction getTexture( name ) {\r\n\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textures[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tconst material = Material.fromType( json.type );\r\n\r\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\r\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\r\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\r\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\r\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\r\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\r\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\r\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\r\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\r\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\r\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\r\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\r\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\r\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\r\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\r\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\r\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\r\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\r\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\r\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\r\n\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\r\n\r\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\r\n\r\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\r\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\r\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\r\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\r\n\r\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\r\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n\r\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\r\n\r\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\r\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\r\n\r\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\r\n\r\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\r\n\r\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\r\n\r\n\t\tif ( json.vertexColors !== undefined ) {\r\n\r\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\r\n\r\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Shader Material\r\n\r\n\t\tif ( json.uniforms !== undefined ) {\r\n\r\n\t\t\tfor ( const name in json.uniforms ) {\r\n\r\n\t\t\t\tconst uniform = json.uniforms[ name ];\r\n\r\n\t\t\t\tmaterial.uniforms[ name ] = {};\r\n\r\n\t\t\t\tswitch ( uniform.type ) {\r\n\r\n\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v2':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v3':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v4':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'm3':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'm4':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\r\n\t\tif ( json.extensions !== undefined ) {\r\n\r\n\t\t\tfor ( const key in json.extensions ) {\r\n\r\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Deprecated\r\n\r\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\r\n\r\n\t\t// for PointsMaterial\r\n\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\r\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\r\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\r\n\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\tlet normalScale = json.normalScale;\r\n\r\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\r\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\r\n\r\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\r\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\r\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\r\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\r\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\r\n\r\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\r\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\r\n\r\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\r\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\r\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\r\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\r\n\r\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\r\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\r\n\r\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\r\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\tsetTextures( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { MaterialLoader };\r\n"]},"metadata":{},"sourceType":"module"}