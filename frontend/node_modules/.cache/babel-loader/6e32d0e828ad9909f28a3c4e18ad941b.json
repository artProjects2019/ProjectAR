{"ast":null,"code":"import { Texture } from './Texture.js';\n\nclass CompressedTexture extends Texture {\n  constructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.mipmaps = mipmaps; // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false; // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  }\n\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\nexport { CompressedTexture };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/textures/CompressedTexture.js"],"names":["Texture","CompressedTexture","constructor","mipmaps","width","height","format","type","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","image","flipY","generateMipmaps","prototype","isCompressedTexture"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;;AAEA,MAAMC,iBAAN,SAAgCD,OAAhC,CAAwC;AAEvCE,EAAAA,WAAW,CAAEC,OAAF,EAAWC,KAAX,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,OAAxC,EAAiDC,KAAjD,EAAwDC,KAAxD,EAA+DC,SAA/D,EAA0EC,SAA1E,EAAqFC,UAArF,EAAiGC,QAAjG,EAA4G;AAEtH,UAAO,IAAP,EAAaN,OAAb,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,EAA0DN,MAA1D,EAAkEC,IAAlE,EAAwEM,UAAxE,EAAoFC,QAApF;AAEA,SAAKC,KAAL,GAAa;AAAEX,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,MAAM,EAAEA;AAAxB,KAAb;AACA,SAAKF,OAAL,GAAeA,OAAf,CALsH,CAOtH;AACA;;AAEA,SAAKa,KAAL,GAAa,KAAb,CAVsH,CAYtH;AACA;;AAEA,SAAKC,eAAL,GAAuB,KAAvB;AAEA;;AAnBsC;;AAuBxChB,iBAAiB,CAACiB,SAAlB,CAA4BC,mBAA5B,GAAkD,IAAlD;AAEA,SAASlB,iBAAT","sourcesContent":["import { Texture } from './Texture.js';\r\n\r\nclass CompressedTexture extends Texture {\r\n\r\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n}\r\n\r\nCompressedTexture.prototype.isCompressedTexture = true;\r\n\r\nexport { CompressedTexture };\r\n"]},"metadata":{},"sourceType":"module"}