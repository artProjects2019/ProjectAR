{"ast":null,"code":"import { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nclass ImageBitmapLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n\n    if (typeof createImageBitmap === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n    }\n\n    if (typeof fetch === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n    }\n\n    this.options = {\n      premultiplyAlpha: 'none'\n    };\n  }\n\n  setOptions(options) {\n    this.options = options;\n    return this;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    const scope = this;\n    const cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n\n    const fetchOptions = {};\n    fetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n    fetchOptions.headers = this.requestHeader;\n    fetch(url, fetchOptions).then(function (res) {\n      return res.blob();\n    }).then(function (blob) {\n      return createImageBitmap(blob, Object.assign(scope.options, {\n        colorSpaceConversion: 'none'\n      }));\n    }).then(function (imageBitmap) {\n      Cache.add(url, imageBitmap);\n      if (onLoad) onLoad(imageBitmap);\n      scope.manager.itemEnd(url);\n    }).catch(function (e) {\n      if (onError) onError(e);\n      scope.manager.itemError(url);\n      scope.manager.itemEnd(url);\n    });\n    scope.manager.itemStart(url);\n  }\n\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\nexport { ImageBitmapLoader };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/loaders/ImageBitmapLoader.js"],"names":["Cache","Loader","ImageBitmapLoader","constructor","manager","createImageBitmap","console","warn","fetch","options","premultiplyAlpha","setOptions","load","url","onLoad","onProgress","onError","undefined","path","resolveURL","scope","cached","get","itemStart","setTimeout","itemEnd","fetchOptions","credentials","crossOrigin","headers","requestHeader","then","res","blob","Object","assign","colorSpaceConversion","imageBitmap","add","catch","e","itemError","prototype","isImageBitmapLoader"],"mappings":"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","sourcesContent":["import { Cache } from './Cache.js';\r\nimport { Loader } from './Loader.js';\r\n\r\nclass ImageBitmapLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof fetch === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.options = { premultiplyAlpha: 'none' };\r\n\r\n\t}\r\n\r\n\tsetOptions( options ) {\r\n\r\n\t\tthis.options = options;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( url === undefined ) url = '';\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst cached = Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tconst fetchOptions = {};\r\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\r\n\t\tfetchOptions.headers = this.requestHeader;\r\n\r\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\r\n\r\n\t\t\treturn res.blob();\r\n\r\n\t\t} ).then( function ( blob ) {\r\n\r\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\r\n\r\n\t\t} ).then( function ( imageBitmap ) {\r\n\r\n\t\t\tCache.add( url, imageBitmap );\r\n\r\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t} ).catch( function ( e ) {\r\n\r\n\t\t\tif ( onError ) onError( e );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t} );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t}\r\n\r\n}\r\n\r\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\r\n\r\nexport { ImageBitmapLoader };\r\n"]},"metadata":{},"sourceType":"module"}