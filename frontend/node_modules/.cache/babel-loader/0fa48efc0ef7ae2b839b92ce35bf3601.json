{"ast":null,"code":"import { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState(extensions, capabilities) {\n  const lights = new WebGLLights(extensions, capabilities);\n  const lightsArray = [];\n  const shadowsArray = [];\n\n  function init() {\n    lightsArray.length = 0;\n    shadowsArray.length = 0;\n  }\n\n  function pushLight(light) {\n    lightsArray.push(light);\n  }\n\n  function pushShadow(shadowLight) {\n    shadowsArray.push(shadowLight);\n  }\n\n  function setupLights(physicallyCorrectLights) {\n    lights.setup(lightsArray, physicallyCorrectLights);\n  }\n\n  function setupLightsView(camera) {\n    lights.setupView(lightsArray, camera);\n  }\n\n  const state = {\n    lightsArray: lightsArray,\n    shadowsArray: shadowsArray,\n    lights: lights\n  };\n  return {\n    init: init,\n    state: state,\n    setupLights: setupLights,\n    setupLightsView: setupLightsView,\n    pushLight: pushLight,\n    pushShadow: pushShadow\n  };\n}\n\nfunction WebGLRenderStates(extensions, capabilities) {\n  let renderStates = new WeakMap();\n\n  function get(scene, renderCallDepth = 0) {\n    let renderState;\n\n    if (renderStates.has(scene) === false) {\n      renderState = new WebGLRenderState(extensions, capabilities);\n      renderStates.set(scene, [renderState]);\n    } else {\n      if (renderCallDepth >= renderStates.get(scene).length) {\n        renderState = new WebGLRenderState(extensions, capabilities);\n        renderStates.get(scene).push(renderState);\n      } else {\n        renderState = renderStates.get(scene)[renderCallDepth];\n      }\n    }\n\n    return renderState;\n  }\n\n  function dispose() {\n    renderStates = new WeakMap();\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n\nexport { WebGLRenderStates };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/webgl/WebGLRenderStates.js"],"names":["WebGLLights","WebGLRenderState","extensions","capabilities","lights","lightsArray","shadowsArray","init","length","pushLight","light","push","pushShadow","shadowLight","setupLights","physicallyCorrectLights","setup","setupLightsView","camera","setupView","state","WebGLRenderStates","renderStates","WeakMap","get","scene","renderCallDepth","renderState","has","set","dispose"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,SAASC,gBAAT,CAA2BC,UAA3B,EAAuCC,YAAvC,EAAsD;AAErD,QAAMC,MAAM,GAAG,IAAIJ,WAAJ,CAAiBE,UAAjB,EAA6BC,YAA7B,CAAf;AAEA,QAAME,WAAW,GAAG,EAApB;AACA,QAAMC,YAAY,GAAG,EAArB;;AAEA,WAASC,IAAT,GAAgB;AAEfF,IAAAA,WAAW,CAACG,MAAZ,GAAqB,CAArB;AACAF,IAAAA,YAAY,CAACE,MAAb,GAAsB,CAAtB;AAEA;;AAED,WAASC,SAAT,CAAoBC,KAApB,EAA4B;AAE3BL,IAAAA,WAAW,CAACM,IAAZ,CAAkBD,KAAlB;AAEA;;AAED,WAASE,UAAT,CAAqBC,WAArB,EAAmC;AAElCP,IAAAA,YAAY,CAACK,IAAb,CAAmBE,WAAnB;AAEA;;AAED,WAASC,WAAT,CAAsBC,uBAAtB,EAAgD;AAE/CX,IAAAA,MAAM,CAACY,KAAP,CAAcX,WAAd,EAA2BU,uBAA3B;AAEA;;AAED,WAASE,eAAT,CAA0BC,MAA1B,EAAmC;AAElCd,IAAAA,MAAM,CAACe,SAAP,CAAkBd,WAAlB,EAA+Ba,MAA/B;AAEA;;AAED,QAAME,KAAK,GAAG;AACbf,IAAAA,WAAW,EAAEA,WADA;AAEbC,IAAAA,YAAY,EAAEA,YAFD;AAIbF,IAAAA,MAAM,EAAEA;AAJK,GAAd;AAOA,SAAO;AACNG,IAAAA,IAAI,EAAEA,IADA;AAENa,IAAAA,KAAK,EAAEA,KAFD;AAGNN,IAAAA,WAAW,EAAEA,WAHP;AAING,IAAAA,eAAe,EAAEA,eAJX;AAMNR,IAAAA,SAAS,EAAEA,SANL;AAONG,IAAAA,UAAU,EAAEA;AAPN,GAAP;AAUA;;AAED,SAASS,iBAAT,CAA4BnB,UAA5B,EAAwCC,YAAxC,EAAuD;AAEtD,MAAImB,YAAY,GAAG,IAAIC,OAAJ,EAAnB;;AAEA,WAASC,GAAT,CAAcC,KAAd,EAAqBC,eAAe,GAAG,CAAvC,EAA2C;AAE1C,QAAIC,WAAJ;;AAEA,QAAKL,YAAY,CAACM,GAAb,CAAkBH,KAAlB,MAA8B,KAAnC,EAA2C;AAE1CE,MAAAA,WAAW,GAAG,IAAI1B,gBAAJ,CAAsBC,UAAtB,EAAkCC,YAAlC,CAAd;AACAmB,MAAAA,YAAY,CAACO,GAAb,CAAkBJ,KAAlB,EAAyB,CAAEE,WAAF,CAAzB;AAEA,KALD,MAKO;AAEN,UAAKD,eAAe,IAAIJ,YAAY,CAACE,GAAb,CAAkBC,KAAlB,EAA0BjB,MAAlD,EAA2D;AAE1DmB,QAAAA,WAAW,GAAG,IAAI1B,gBAAJ,CAAsBC,UAAtB,EAAkCC,YAAlC,CAAd;AACAmB,QAAAA,YAAY,CAACE,GAAb,CAAkBC,KAAlB,EAA0Bd,IAA1B,CAAgCgB,WAAhC;AAEA,OALD,MAKO;AAENA,QAAAA,WAAW,GAAGL,YAAY,CAACE,GAAb,CAAkBC,KAAlB,EAA2BC,eAA3B,CAAd;AAEA;AAED;;AAED,WAAOC,WAAP;AAEA;;AAED,WAASG,OAAT,GAAmB;AAElBR,IAAAA,YAAY,GAAG,IAAIC,OAAJ,EAAf;AAEA;;AAED,SAAO;AACNC,IAAAA,GAAG,EAAEA,GADC;AAENM,IAAAA,OAAO,EAAEA;AAFH,GAAP;AAKA;;AAGD,SAAST,iBAAT","sourcesContent":["import { WebGLLights } from './WebGLLights.js';\r\n\r\nfunction WebGLRenderState( extensions, capabilities ) {\r\n\r\n\tconst lights = new WebGLLights( extensions, capabilities );\r\n\r\n\tconst lightsArray = [];\r\n\tconst shadowsArray = [];\r\n\r\n\tfunction init() {\r\n\r\n\t\tlightsArray.length = 0;\r\n\t\tshadowsArray.length = 0;\r\n\r\n\t}\r\n\r\n\tfunction pushLight( light ) {\r\n\r\n\t\tlightsArray.push( light );\r\n\r\n\t}\r\n\r\n\tfunction pushShadow( shadowLight ) {\r\n\r\n\t\tshadowsArray.push( shadowLight );\r\n\r\n\t}\r\n\r\n\tfunction setupLights( physicallyCorrectLights ) {\r\n\r\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\r\n\r\n\t}\r\n\r\n\tfunction setupLightsView( camera ) {\r\n\r\n\t\tlights.setupView( lightsArray, camera );\r\n\r\n\t}\r\n\r\n\tconst state = {\r\n\t\tlightsArray: lightsArray,\r\n\t\tshadowsArray: shadowsArray,\r\n\r\n\t\tlights: lights\r\n\t};\r\n\r\n\treturn {\r\n\t\tinit: init,\r\n\t\tstate: state,\r\n\t\tsetupLights: setupLights,\r\n\t\tsetupLightsView: setupLightsView,\r\n\r\n\t\tpushLight: pushLight,\r\n\t\tpushShadow: pushShadow\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLRenderStates( extensions, capabilities ) {\r\n\r\n\tlet renderStates = new WeakMap();\r\n\r\n\tfunction get( scene, renderCallDepth = 0 ) {\r\n\r\n\t\tlet renderState;\r\n\r\n\t\tif ( renderStates.has( scene ) === false ) {\r\n\r\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\r\n\t\t\trenderStates.set( scene, [ renderState ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\r\n\r\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\r\n\t\t\t\trenderStates.get( scene ).push( renderState );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn renderState;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\trenderStates = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLRenderStates };\r\n"]},"metadata":{},"sourceType":"module"}