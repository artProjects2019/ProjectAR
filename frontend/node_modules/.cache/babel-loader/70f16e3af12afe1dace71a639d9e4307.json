{"ast":null,"code":"function WebGLExtensions(gl) {\n  const extensions = {};\n\n  function getExtension(name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    let extension;\n\n    switch (name) {\n      case 'WEBGL_depth_texture':\n        extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n        break;\n\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n\n      default:\n        extension = gl.getExtension(name);\n    }\n\n    extensions[name] = extension;\n    return extension;\n  }\n\n  return {\n    has: function (name) {\n      return getExtension(name) !== null;\n    },\n    init: function (capabilities) {\n      if (capabilities.isWebGL2) {\n        getExtension('EXT_color_buffer_float');\n      } else {\n        getExtension('WEBGL_depth_texture');\n        getExtension('OES_texture_float');\n        getExtension('OES_texture_half_float');\n        getExtension('OES_texture_half_float_linear');\n        getExtension('OES_standard_derivatives');\n        getExtension('OES_element_index_uint');\n        getExtension('OES_vertex_array_object');\n        getExtension('ANGLE_instanced_arrays');\n      }\n\n      getExtension('OES_texture_float_linear');\n      getExtension('EXT_color_buffer_half_float');\n      getExtension('WEBGL_multisampled_render_to_texture');\n    },\n    get: function (name) {\n      const extension = getExtension(name);\n\n      if (extension === null) {\n        console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n      }\n\n      return extension;\n    }\n  };\n}\n\nexport { WebGLExtensions };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/webgl/WebGLExtensions.js"],"names":["WebGLExtensions","gl","extensions","getExtension","name","undefined","extension","has","init","capabilities","isWebGL2","get","console","warn"],"mappings":"AAAA,SAASA,eAAT,CAA0BC,EAA1B,EAA+B;AAE9B,QAAMC,UAAU,GAAG,EAAnB;;AAEA,WAASC,YAAT,CAAuBC,IAAvB,EAA8B;AAE7B,QAAKF,UAAU,CAAEE,IAAF,CAAV,KAAuBC,SAA5B,EAAwC;AAEvC,aAAOH,UAAU,CAAEE,IAAF,CAAjB;AAEA;;AAED,QAAIE,SAAJ;;AAEA,YAASF,IAAT;AAEC,WAAK,qBAAL;AACCE,QAAAA,SAAS,GAAGL,EAAE,CAACE,YAAH,CAAiB,qBAAjB,KAA4CF,EAAE,CAACE,YAAH,CAAiB,yBAAjB,CAA5C,IAA4FF,EAAE,CAACE,YAAH,CAAiB,4BAAjB,CAAxG;AACA;;AAED,WAAK,gCAAL;AACCG,QAAAA,SAAS,GAAGL,EAAE,CAACE,YAAH,CAAiB,gCAAjB,KAAuDF,EAAE,CAACE,YAAH,CAAiB,oCAAjB,CAAvD,IAAkHF,EAAE,CAACE,YAAH,CAAiB,uCAAjB,CAA9H;AACA;;AAED,WAAK,+BAAL;AACCG,QAAAA,SAAS,GAAGL,EAAE,CAACE,YAAH,CAAiB,+BAAjB,KAAsDF,EAAE,CAACE,YAAH,CAAiB,mCAAjB,CAAtD,IAAgHF,EAAE,CAACE,YAAH,CAAiB,sCAAjB,CAA5H;AACA;;AAED,WAAK,gCAAL;AACCG,QAAAA,SAAS,GAAGL,EAAE,CAACE,YAAH,CAAiB,gCAAjB,KAAuDF,EAAE,CAACE,YAAH,CAAiB,uCAAjB,CAAnE;AACA;;AAED;AACCG,QAAAA,SAAS,GAAGL,EAAE,CAACE,YAAH,CAAiBC,IAAjB,CAAZ;AAnBF;;AAuBAF,IAAAA,UAAU,CAAEE,IAAF,CAAV,GAAqBE,SAArB;AAEA,WAAOA,SAAP;AAEA;;AAED,SAAO;AAENC,IAAAA,GAAG,EAAE,UAAWH,IAAX,EAAkB;AAEtB,aAAOD,YAAY,CAAEC,IAAF,CAAZ,KAAyB,IAAhC;AAEA,KANK;AAQNI,IAAAA,IAAI,EAAE,UAAWC,YAAX,EAA0B;AAE/B,UAAKA,YAAY,CAACC,QAAlB,EAA6B;AAE5BP,QAAAA,YAAY,CAAE,wBAAF,CAAZ;AAEA,OAJD,MAIO;AAENA,QAAAA,YAAY,CAAE,qBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,mBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,wBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,+BAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,0BAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,wBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,yBAAF,CAAZ;AACAA,QAAAA,YAAY,CAAE,wBAAF,CAAZ;AAEA;;AAEDA,MAAAA,YAAY,CAAE,0BAAF,CAAZ;AACAA,MAAAA,YAAY,CAAE,6BAAF,CAAZ;AACAA,MAAAA,YAAY,CAAE,sCAAF,CAAZ;AAEA,KA/BK;AAiCNQ,IAAAA,GAAG,EAAE,UAAWP,IAAX,EAAkB;AAEtB,YAAME,SAAS,GAAGH,YAAY,CAAEC,IAAF,CAA9B;;AAEA,UAAKE,SAAS,KAAK,IAAnB,EAA0B;AAEzBM,QAAAA,OAAO,CAACC,IAAR,CAAc,0BAA0BT,IAA1B,GAAiC,2BAA/C;AAEA;;AAED,aAAOE,SAAP;AAEA;AA7CK,GAAP;AAiDA;;AAGD,SAASN,eAAT","sourcesContent":["function WebGLExtensions( gl ) {\r\n\r\n\tconst extensions = {};\r\n\r\n\tfunction getExtension( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tlet extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\thas: function ( name ) {\r\n\r\n\t\t\treturn getExtension( name ) !== null;\r\n\r\n\t\t},\r\n\r\n\t\tinit: function ( capabilities ) {\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\r\n\t\t\t\tgetExtension( 'OES_texture_float' );\r\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\r\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\r\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\r\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\r\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\r\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgetExtension( 'OES_texture_float_linear' );\r\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\r\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( name ) {\r\n\r\n\t\t\tconst extension = getExtension( name );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn extension;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLExtensions };\r\n"]},"metadata":{},"sourceType":"module"}