{"ast":null,"code":"export default\n/* glsl */\n`\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifdef MORPHTARGETS_TEXTURE\n\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\n\t\t\tfloat texelIndex = float( vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV );\n\n\t\t}\n\n\t#else\n\n\t\t#ifndef USE_MORPHNORMALS\n\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\n\t\t#else\n\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.js"],"names":[],"mappings":"AAAA;AAAe;AAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArCA","sourcesContent":["export default /* glsl */`\r\n#ifdef USE_MORPHTARGETS\r\n\r\n\tuniform float morphTargetBaseInfluence;\r\n\r\n\t#ifdef MORPHTARGETS_TEXTURE\r\n\r\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\r\n\t\tuniform sampler2DArray morphTargetsTexture;\r\n\t\tuniform vec2 morphTargetsTextureSize;\r\n\r\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\r\n\r\n\t\t\tfloat texelIndex = float( vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset );\r\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\r\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\r\n\r\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\r\n\t\t\treturn texture( morphTargetsTexture, morphUV );\r\n\r\n\t\t}\r\n\r\n\t#else\r\n\r\n\t\t#ifndef USE_MORPHNORMALS\r\n\r\n\t\t\tuniform float morphTargetInfluences[ 8 ];\r\n\r\n\t\t#else\r\n\r\n\t\t\tuniform float morphTargetInfluences[ 4 ];\r\n\r\n\t\t#endif\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}