{"ast":null,"code":"import * as MathUtils from './MathUtils.js';\nconst _colorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\nconst _hslA = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nconst _hslB = {\n  h: 0,\n  s: 0,\n  l: 0\n};\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n  return p;\n}\n\nfunction SRGBToLinear(c) {\n  return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n}\n\nfunction LinearToSRGB(c) {\n  return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n}\n\nclass Color {\n  constructor(r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  set(value) {\n    if (value && value.isColor) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  }\n\n  setScalar(scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n    return this;\n  }\n\n  setHex(hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  }\n\n  setRGB(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  }\n\n  setHSL(h, s, l) {\n    // h,s,l ranges are in 0.0 - 1.0\n    h = MathUtils.euclideanModulo(h, 1);\n    s = MathUtils.clamp(s, 0, 1);\n    l = MathUtils.clamp(l, 0, 1);\n\n    if (s === 0) {\n      this.r = this.g = this.b = l;\n    } else {\n      const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n      const q = 2 * l - p;\n      this.r = hue2rgb(q, p, h + 1 / 3);\n      this.g = hue2rgb(q, p, h);\n      this.b = hue2rgb(q, p, h - 1 / 3);\n    }\n\n    return this;\n  }\n\n  setStyle(style) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n\n      if (parseFloat(string) < 1) {\n        console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n      }\n    }\n\n    let m;\n\n    if (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      let color;\n      const name = m[1];\n      const components = m[2];\n\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            handleAlpha(color[4]);\n            return this;\n          }\n\n          if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            handleAlpha(color[4]);\n            return this;\n          }\n\n          break;\n\n        case 'hsl':\n        case 'hsla':\n          if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            const h = parseFloat(color[1]) / 360;\n            const s = parseInt(color[2], 10) / 100;\n            const l = parseInt(color[3], 10) / 100;\n            handleAlpha(color[4]);\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n      // hex color\n      const hex = m[1];\n      const size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      return this.setColorName(style);\n    }\n\n    return this;\n  }\n\n  setColorName(style) {\n    // color keywords\n    const hex = _colorKeywords[style.toLowerCase()];\n\n    if (hex !== undefined) {\n      // red\n      this.setHex(hex);\n    } else {\n      // unknown color\n      console.warn('THREE.Color: Unknown color ' + style);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor(this.r, this.g, this.b);\n  }\n\n  copy(color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  }\n\n  copySRGBToLinear(color) {\n    this.r = SRGBToLinear(color.r);\n    this.g = SRGBToLinear(color.g);\n    this.b = SRGBToLinear(color.b);\n    return this;\n  }\n\n  copyLinearToSRGB(color) {\n    this.r = LinearToSRGB(color.r);\n    this.g = LinearToSRGB(color.g);\n    this.b = LinearToSRGB(color.b);\n    return this;\n  }\n\n  convertSRGBToLinear() {\n    this.copySRGBToLinear(this);\n    return this;\n  }\n\n  convertLinearToSRGB() {\n    this.copyLinearToSRGB(this);\n    return this;\n  }\n\n  getHex() {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  }\n\n  getHexString() {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  }\n\n  getHSL(target) {\n    // h,s,l ranges are in 0.0 - 1.0\n    const r = this.r,\n          g = this.g,\n          b = this.b;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let hue, saturation;\n    const lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      const delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    target.h = hue;\n    target.s = saturation;\n    target.l = lightness;\n    return target;\n  }\n\n  getStyle() {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  }\n\n  offsetHSL(h, s, l) {\n    this.getHSL(_hslA);\n    _hslA.h += h;\n    _hslA.s += s;\n    _hslA.l += l;\n    this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n    return this;\n  }\n\n  add(color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  }\n\n  addColors(color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  }\n\n  addScalar(s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  }\n\n  sub(color) {\n    this.r = Math.max(0, this.r - color.r);\n    this.g = Math.max(0, this.g - color.g);\n    this.b = Math.max(0, this.b - color.b);\n    return this;\n  }\n\n  multiply(color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  }\n\n  lerp(color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  }\n\n  lerpColors(color1, color2, alpha) {\n    this.r = color1.r + (color2.r - color1.r) * alpha;\n    this.g = color1.g + (color2.g - color1.g) * alpha;\n    this.b = color1.b + (color2.b - color1.b) * alpha;\n    return this;\n  }\n\n  lerpHSL(color, alpha) {\n    this.getHSL(_hslA);\n    color.getHSL(_hslB);\n    const h = MathUtils.lerp(_hslA.h, _hslB.h, alpha);\n    const s = MathUtils.lerp(_hslA.s, _hslB.s, alpha);\n    const l = MathUtils.lerp(_hslA.l, _hslB.l, alpha);\n    this.setHSL(h, s, l);\n    return this;\n  }\n\n  equals(c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  }\n\n  fromArray(array, offset = 0) {\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index) {\n    this.r = attribute.getX(index);\n    this.g = attribute.getY(index);\n    this.b = attribute.getZ(index);\n\n    if (attribute.normalized === true) {\n      // assuming Uint8Array\n      this.r /= 255;\n      this.g /= 255;\n      this.b /= 255;\n    }\n\n    return this;\n  }\n\n  toJSON() {\n    return this.getHex();\n  }\n\n}\n\nColor.NAMES = _colorKeywords;\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\nexport { Color, SRGBToLinear };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/math/Color.js"],"names":["MathUtils","_colorKeywords","_hslA","h","s","l","_hslB","hue2rgb","p","q","t","SRGBToLinear","c","Math","pow","LinearToSRGB","Color","constructor","r","g","b","undefined","set","setRGB","value","isColor","copy","setHex","setStyle","setScalar","scalar","hex","floor","setHSL","euclideanModulo","clamp","style","handleAlpha","string","parseFloat","console","warn","m","exec","color","name","components","min","parseInt","size","length","charAt","setColorName","toLowerCase","clone","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","toString","slice","getHSL","target","max","hue","saturation","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","sub","multiply","multiplyScalar","lerp","alpha","lerpColors","lerpHSL","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","index","getX","getY","getZ","normalized","toJSON","NAMES","prototype"],"mappings":"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","sourcesContent":["import * as MathUtils from './MathUtils.js';\r\n\r\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\nconst _hslA = { h: 0, s: 0, l: 0 };\r\nconst _hslB = { h: 0, s: 0, l: 0 };\r\n\r\nfunction hue2rgb( p, q, t ) {\r\n\r\n\tif ( t < 0 ) t += 1;\r\n\tif ( t > 1 ) t -= 1;\r\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\tif ( t < 1 / 2 ) return q;\r\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\treturn p;\r\n\r\n}\r\n\r\nfunction SRGBToLinear( c ) {\r\n\r\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n}\r\n\r\nfunction LinearToSRGB( c ) {\r\n\r\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n\r\n}\r\n\r\nclass Color {\r\n\r\n\tconstructor( r, g, b ) {\r\n\r\n\t\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t\t// r is THREE.Color, hex or string\r\n\t\t\treturn this.set( r );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.setRGB( r, g, b );\r\n\r\n\t}\r\n\r\n\tset( value ) {\r\n\r\n\t\tif ( value && value.isColor ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.r = scalar;\r\n\t\tthis.g = scalar;\r\n\t\tthis.b = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetHex( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetRGB( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetHSL( h, s, l ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\th = MathUtils.euclideanModulo( h, 1 );\r\n\t\ts = MathUtils.clamp( s, 0, 1 );\r\n\t\tl = MathUtils.clamp( l, 0, 1 );\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tconst q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetStyle( style ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tlet m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tlet color;\r\n\t\t\tconst name = m[ 1 ];\r\n\t\t\tconst components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tconst hex = m[ 1 ];\r\n\t\t\tconst size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\treturn this.setColorName( style );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetColorName( style ) {\r\n\r\n\t\t// color keywords\r\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\r\n\r\n\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t// red\r\n\t\t\tthis.setHex( hex );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// unknown color\r\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n\tcopy( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopySRGBToLinear( color ) {\r\n\r\n\t\tthis.r = SRGBToLinear( color.r );\r\n\t\tthis.g = SRGBToLinear( color.g );\r\n\t\tthis.b = SRGBToLinear( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyLinearToSRGB( color ) {\r\n\r\n\t\tthis.r = LinearToSRGB( color.r );\r\n\t\tthis.g = LinearToSRGB( color.g );\r\n\t\tthis.b = LinearToSRGB( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconvertSRGBToLinear() {\r\n\r\n\t\tthis.copySRGBToLinear( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconvertLinearToSRGB() {\r\n\r\n\t\tthis.copyLinearToSRGB( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetHex() {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t}\r\n\r\n\tgetHexString() {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t}\r\n\r\n\tgetHSL( target ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tconst r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tconst max = Math.max( r, g, b );\r\n\t\tconst min = Math.min( r, g, b );\r\n\r\n\t\tlet hue, saturation;\r\n\t\tconst lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.h = hue;\r\n\t\ttarget.s = saturation;\r\n\t\ttarget.l = lightness;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetStyle() {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t}\r\n\r\n\toffsetHSL( h, s, l ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\r\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\r\n\r\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddColors( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( color ) {\r\n\r\n\t\tthis.r = Math.max( 0, this.r - color.r );\r\n\t\tthis.g = Math.max( 0, this.g - color.g );\r\n\t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerp( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpColors( color1, color2, alpha ) {\r\n\r\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\r\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\r\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpHSL( color, alpha ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\t\tcolor.getHSL( _hslB );\r\n\r\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\r\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\r\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\r\n\r\n\t\tthis.setHSL( h, s, l );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.r = attribute.getX( index );\r\n\t\tthis.g = attribute.getY( index );\r\n\t\tthis.b = attribute.getZ( index );\r\n\r\n\t\tif ( attribute.normalized === true ) {\r\n\r\n\t\t\t// assuming Uint8Array\r\n\r\n\t\t\tthis.r /= 255;\r\n\t\t\tthis.g /= 255;\r\n\t\t\tthis.b /= 255;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn this.getHex();\r\n\r\n\t}\r\n\r\n}\r\n\r\nColor.NAMES = _colorKeywords;\r\n\r\nColor.prototype.isColor = true;\r\nColor.prototype.r = 1;\r\nColor.prototype.g = 1;\r\nColor.prototype.b = 1;\r\n\r\nexport { Color, SRGBToLinear };\r\n"]},"metadata":{},"sourceType":"module"}