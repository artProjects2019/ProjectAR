{"ast":null,"code":"import { WebGLRenderTarget } from './WebGLRenderTarget.js';\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n  constructor(width, height, count, options = {}) {\n    super(width, height, options);\n    const texture = this.texture;\n    this.texture = [];\n\n    for (let i = 0; i < count; i++) {\n      this.texture[i] = texture.clone();\n      this.texture[i].isRenderTargetTexture = true;\n    }\n  }\n\n  setSize(width, height, depth = 1) {\n    if (this.width !== width || this.height !== height || this.depth !== depth) {\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n\n      for (let i = 0, il = this.texture.length; i < il; i++) {\n        this.texture[i].image.width = width;\n        this.texture[i].image.height = height;\n        this.texture[i].image.depth = depth;\n      }\n\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n    return this;\n  }\n\n  copy(source) {\n    this.dispose();\n    this.width = source.width;\n    this.height = source.height;\n    this.depth = source.depth;\n    this.viewport.set(0, 0, this.width, this.height);\n    this.scissor.set(0, 0, this.width, this.height);\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n    this.texture.length = 0;\n\n    for (let i = 0, il = source.texture.length; i < il; i++) {\n      this.texture[i] = source.texture[i].clone();\n    }\n\n    return this;\n  }\n\n}\n\nWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\nexport { WebGLMultipleRenderTargets };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/WebGLMultipleRenderTargets.js"],"names":["WebGLRenderTarget","WebGLMultipleRenderTargets","constructor","width","height","count","options","texture","i","clone","isRenderTargetTexture","setSize","depth","il","length","image","dispose","viewport","set","scissor","copy","source","depthBuffer","stencilBuffer","depthTexture","prototype","isWebGLMultipleRenderTargets"],"mappings":"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","sourcesContent":["import { WebGLRenderTarget } from './WebGLRenderTarget.js';\r\n\r\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\r\n\r\n\tconstructor( width, height, count, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tconst texture = this.texture;\r\n\r\n\t\tthis.texture = [];\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.texture[ i ] = texture.clone();\r\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetSize( width, height, depth = 1 ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.depth = depth;\r\n\r\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.texture[ i ].image.width = width;\r\n\t\t\t\tthis.texture[ i ].image.height = height;\r\n\t\t\t\tthis.texture[ i ].image.depth = depth;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.dispose();\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\t\tthis.depth = source.depth;\r\n\r\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\r\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\tthis.depthTexture = source.depthTexture;\r\n\r\n\t\tthis.texture.length = 0;\r\n\r\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\r\n\r\nexport { WebGLMultipleRenderTargets };\r\n"]},"metadata":{},"sourceType":"module"}