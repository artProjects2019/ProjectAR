{"ast":null,"code":"import _defineProperty from \"C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { ARButton } from '../three/examples/jsm/webxr/ARButton.js';\nimport { playerTurn } from './ticTacToe.js';\nimport { playAudio } from '../../../public/audio/sound'; // import * as THREE from \"../three/build/three.js\";\n\nimport * as THREE from 'three';\nconst tempMatrix = new THREE.Matrix4();\nlet camera;\nlet scene;\nlet renderer;\nlet board;\nlet controller;\nlet raycaster; // let container;\n\nclass ticTacToeBoard {\n  constructor() {\n    _defineProperty(this, \"boxes\", []);\n\n    const BOX_SIZE = 0.05;\n\n    for (let i = 0; i < 9; ++i) {\n      const texture = new THREE.TextureLoader().load('./textures/white.png'); // Loading a basic texture png\n\n      const geometry = new THREE.BoxBufferGeometry(BOX_SIZE, BOX_SIZE, BOX_SIZE * 0.25);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      let box = new THREE.Mesh(geometry, material);\n      this.boxes.push(box);\n    }\n\n    this.setBoxesPosition();\n  }\n\n  addToScene() {\n    for (let i = 0; i < 9; ++i) {\n      scene.add(this.boxes[i]);\n    }\n  }\n\n  setBoxesPosition() {\n    const POSITION = 0.08;\n    this.boxes[0].position.set(POSITION, POSITION, -0.5);\n    this.boxes[1].position.set(0, POSITION, -0.5);\n    this.boxes[2].position.set(-POSITION, POSITION, -0.5);\n    this.boxes[3].position.set(POSITION, 0, -0.5);\n    this.boxes[4].position.set(0, 0, -0.5);\n    this.boxes[5].position.set(-POSITION, 0, -0.5);\n    this.boxes[6].position.set(POSITION, -POSITION, -0.5);\n    this.boxes[7].position.set(0, -POSITION, -0.5);\n    this.boxes[8].position.set(-POSITION, -POSITION, -0.5);\n  }\n\n}\n\nfunction createMaterial(texture) {\n  return [new THREE.MeshBasicMaterial({\n    map: new THREE.TextureLoader().load('./textures/white.png')\n  }), new THREE.MeshBasicMaterial({\n    map: new THREE.TextureLoader().load('./textures/white.png')\n  }), new THREE.MeshBasicMaterial({\n    map: new THREE.TextureLoader().load('./textures/white.png')\n  }), new THREE.MeshBasicMaterial({\n    map: new THREE.TextureLoader().load('./textures/white.png')\n  }), new THREE.MeshBasicMaterial({\n    map: new THREE.TextureLoader().load('./textures/' + texture + '.png')\n  }), new THREE.MeshBasicMaterial({\n    map: new THREE.TextureLoader().load('./textures/' + texture + '.png')\n  })];\n}\n\nfunction updateTextureX(boxNumber) {\n  board.boxes[boxNumber].material = createMaterial('x');\n}\n\nfunction updateTextureXWin(boxNumber) {\n  board.boxes[boxNumber].material = createMaterial('xWin');\n}\n\nfunction updateTextureO(boxNumber) {\n  board.boxes[boxNumber].material = createMaterial('o');\n}\n\nfunction updateTextureOWin(boxNumber) {\n  board.boxes[boxNumber].material = createMaterial('oWin');\n}\n\nfunction init() {\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera(100, window.innerWidth / window.innerHeight, 0.01, 20);\n  raycaster = new THREE.Raycaster();\n  renderer = new THREE.WebGLRenderer({\n    antialias: true,\n    alpha: true\n  });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.outputEncoding = THREE.sRGBEncoding;\n  renderer.shadowMap.enabled = true;\n  renderer.xr.enabled = true;\n  document.body.appendChild(ARButton.createButton(renderer, {}));\n  const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n  light.position.set(0.5, 1, 0.25);\n  scene.add(light);\n  controller = renderer.xr.getController(0);\n  controller.addEventListener('select', onSelect);\n  scene.add(controller);\n  board = new ticTacToeBoard();\n  board.addToScene();\n  const geometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, -1)]);\n  const line = new THREE.Line(geometry);\n  line.name = 'line';\n  line.scale.z = 5;\n  controller.add(line.clone());\n  window.addEventListener('resize', () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  });\n}\n\nfunction onSelect() {\n  tempMatrix.identity().extractRotation(controller.matrixWorld);\n  raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\n  raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\n  const intersections = raycaster.intersectObjects(scene.children);\n\n  for (let i = 0; i < board.boxes.length; i++) {\n    if (intersections.length > 0 && intersections[0].object === board.boxes[i]) {\n      playerTurn(i);\n      playAudio(\"./audio/click.wav\");\n    }\n  }\n}\n\nfunction animate() {\n  renderer.setAnimationLoop(render);\n}\n\nfunction render() {\n  renderer.render(scene, camera);\n}\n\nfunction start() {\n  init();\n  animate();\n  document.body.removeChild(ARButton);\n} // start();\n\n\nexport { updateTextureX, updateTextureXWin, updateTextureO, updateTextureOWin, start };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/ticTacToe/drawTicTacToe.js"],"names":["ARButton","playerTurn","playAudio","THREE","tempMatrix","Matrix4","camera","scene","renderer","board","controller","raycaster","ticTacToeBoard","constructor","BOX_SIZE","i","texture","TextureLoader","load","geometry","BoxBufferGeometry","material","MeshBasicMaterial","map","box","Mesh","boxes","push","setBoxesPosition","addToScene","add","POSITION","position","set","createMaterial","updateTextureX","boxNumber","updateTextureXWin","updateTextureO","updateTextureOWin","init","Scene","PerspectiveCamera","window","innerWidth","innerHeight","Raycaster","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","shadowMap","enabled","xr","document","body","appendChild","createButton","light","HemisphereLight","getController","addEventListener","onSelect","BufferGeometry","setFromPoints","Vector3","line","Line","name","scale","z","clone","aspect","updateProjectionMatrix","identity","extractRotation","matrixWorld","ray","origin","setFromMatrixPosition","direction","applyMatrix4","intersections","intersectObjects","children","length","object","animate","setAnimationLoop","render","start","removeChild"],"mappings":"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","sourcesContent":["import {ARButton} from '../three/examples/jsm/webxr/ARButton.js';\r\nimport {playerTurn} from './ticTacToe.js'\r\nimport {playAudio} from '../../../public/audio/sound'\r\n// import * as THREE from \"../three/build/three.js\";\r\nimport * as THREE from 'three';\r\n\r\nconst tempMatrix = new THREE.Matrix4();\r\n\r\nlet camera;\r\nlet scene;\r\nlet renderer;\r\nlet board;\r\nlet controller;\r\nlet raycaster;\r\n// let container;\r\n\r\nclass ticTacToeBoard {\r\n    boxes = [];\r\n\r\n    constructor() {\r\n        const BOX_SIZE = 0.05;\r\n\r\n        for(let i = 0 ; i < 9 ; ++i) {\r\n\r\n            const texture = new THREE.TextureLoader().load('./textures/white.png' ); // Loading a basic texture png\r\n            const geometry = new THREE.BoxBufferGeometry(BOX_SIZE, BOX_SIZE, BOX_SIZE * 0.25);\r\n            const material = new THREE.MeshBasicMaterial({\r\n                map: texture\r\n            });\r\n            let box = new THREE.Mesh(geometry, material);\r\n            this.boxes.push(box);\r\n        }\r\n        this.setBoxesPosition();\r\n    }\r\n\r\n    addToScene() {\r\n        for(let i = 0 ; i < 9 ; ++i){\r\n            scene.add(this.boxes[i]);\r\n        }\r\n    }\r\n\r\n    setBoxesPosition() {\r\n        const POSITION = 0.08;\r\n        this.boxes[0].position.set(POSITION, POSITION, -0.5);\r\n        this.boxes[1].position.set(0, POSITION, -0.5);\r\n        this.boxes[2].position.set(-POSITION, POSITION, -0.5);\r\n        this.boxes[3].position.set(POSITION, 0, -0.5);\r\n        this.boxes[4].position.set(0, 0, -0.5);\r\n        this.boxes[5].position.set(-POSITION, 0, -0.5);\r\n        this.boxes[6].position.set(POSITION, -POSITION, -0.5);\r\n        this.boxes[7].position.set(0, -POSITION, -0.5);\r\n        this.boxes[8].position.set(-POSITION, -POSITION, -0.5);\r\n    }\r\n}\r\n\r\nfunction createMaterial(texture) {\r\n    return [\r\n        new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('./textures/white.png')}),\r\n        new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('./textures/white.png')}),\r\n        new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('./textures/white.png')}),\r\n        new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('./textures/white.png')}),\r\n        new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('./textures/' + texture + '.png')}),\r\n        new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('./textures/' + texture + '.png')})\r\n    ];\r\n}\r\n\r\nfunction updateTextureX(boxNumber){\r\n    board.boxes[boxNumber].material = createMaterial('x');\r\n}\r\n\r\nfunction updateTextureXWin(boxNumber){\r\n    board.boxes[boxNumber].material = createMaterial('xWin');\r\n}\r\n\r\nfunction updateTextureO(boxNumber){\r\n    board.boxes[boxNumber].material = createMaterial('o');\r\n}\r\n\r\nfunction updateTextureOWin(boxNumber){\r\n    board.boxes[boxNumber].material = createMaterial('oWin');\r\n}\r\n\r\nfunction init() {\r\n    scene = new THREE.Scene();\r\n    camera = new THREE.PerspectiveCamera(100, window.innerWidth / window.innerHeight, 0.01, 20);\r\n\r\n    raycaster = new THREE.Raycaster();\r\n\r\n    renderer = new THREE.WebGLRenderer({antialias: true, alpha: true});\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.outputEncoding = THREE.sRGBEncoding;\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.xr.enabled = true;\r\n\r\n    document.body.appendChild(ARButton.createButton(renderer, {}));\r\n\r\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\r\n    light.position.set(0.5, 1, 0.25);\r\n    scene.add(light);\r\n\r\n    controller = renderer.xr.getController(0);\r\n    controller.addEventListener('select', onSelect);\r\n    scene.add(controller);\r\n\r\n    board = new ticTacToeBoard();\r\n    board.addToScene();\r\n\r\n    const geometry = new THREE.BufferGeometry().setFromPoints(\r\n        [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, -1)]);\r\n\r\n    const line = new THREE.Line(geometry);\r\n    line.name = 'line';\r\n    line.scale.z = 5;\r\n\r\n    controller.add(line.clone());\r\n\r\n    window.addEventListener('resize', ()=> {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n    });\r\n}\r\n\r\nfunction onSelect() {\r\n    tempMatrix.identity().extractRotation(controller.matrixWorld);\r\n    raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\r\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\r\n\r\n    const intersections = raycaster.intersectObjects(scene.children);\r\n\r\n    for(let i = 0; i < board.boxes.length; i++) {\r\n        if (intersections.length > 0 && intersections[0].object === board.boxes[i]) {\r\n            playerTurn(i);\r\n            playAudio(\"./audio/click.wav\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction animate() {\r\n    renderer.setAnimationLoop(render);\r\n}\r\n\r\nfunction render() {\r\n    renderer.render(scene, camera);\r\n}\r\n\r\nfunction start() {\r\n    init();\r\n    animate();\r\n    document.body.removeChild(ARButton);\r\n}\r\n\r\n// start();\r\n\r\nexport {\r\n    updateTextureX,\r\n    updateTextureXWin,\r\n    updateTextureO,\r\n    updateTextureOWin,\r\n    start\r\n};"]},"metadata":{},"sourceType":"module"}