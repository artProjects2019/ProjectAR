{"ast":null,"code":"import { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nexport default {\n  name: \"Register-vue\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      password: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\")\n    });\n    return {\n      successful: false,\n      loading: false,\n      message: \"\",\n      schema\n    };\n  },\n\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n\n  },\n\n  mounted() {\n    if (this.loggedIn) {\n      this.$router.push(\"/profile\");\n    }\n  },\n\n  methods: {\n    handleRegister(user) {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n      this.$store.dispatch(\"auth/register\", user).then(data => {\n        this.message = data.message;\n        this.successful = true;\n        this.loading = false;\n      }, error => {\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.successful = false;\n        this.loading = false;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+CA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,YAAtB,QAA0C,cAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,eAAe;AACbC,MAAI,EAAE,cADO;AAEbC,YAAU,EAAE;AACVL,QADU;AAEVC,SAFU;AAGVC;AAHU,GAFC;;AAObI,MAAI,GAAG;AACL,UAAMC,MAAK,GAAIJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,cAAQ,EAAEP,GAAE,CACPQ,MADK,GAELC,QAFK,CAEI,uBAFJ,EAGLC,GAHK,CAGD,CAHC,EAGE,gCAHF,EAILC,GAJK,CAID,EAJC,EAIG,gCAJH,CADsB;AAMhCC,WAAK,EAAEZ,GAAE,CACJQ,MADE,GAEFC,QAFE,CAEO,oBAFP,EAGFG,KAHE,CAGI,mBAHJ,EAIFD,GAJE,CAIE,EAJF,EAIM,gCAJN,CANyB;AAWhCE,cAAQ,EAAEb,GAAE,CACPQ,MADK,GAELC,QAFK,CAEI,uBAFJ,EAGLC,GAHK,CAGD,CAHC,EAGE,gCAHF,EAILC,GAJK,CAID,EAJC,EAIG,gCAJH;AAXsB,KAAnB,CAAf;AAiBA,WAAO;AACLG,gBAAU,EAAE,KADP;AAELC,aAAO,EAAE,KAFJ;AAGLC,aAAO,EAAE,EAHJ;AAILZ;AAJK,KAAP;AAMD,GA/BY;;AAgCba,UAAQ,EAAE;AACRC,YAAQ,GAAG;AACT,aAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBC,MAAvB,CAA8BJ,QAArC;AACD;;AAHO,GAhCG;;AAqCbK,SAAO,GAAG;AACR,QAAI,KAAKL,QAAT,EAAmB;AACjB,WAAKM,OAAL,CAAaC,IAAb,CAAkB,UAAlB;AACF;AACD,GAzCY;;AA0CbC,SAAO,EAAE;AACPC,kBAAc,CAACC,IAAD,EAAO;AACnB,WAAKZ,OAAL,GAAe,EAAf;AACA,WAAKF,UAAL,GAAkB,KAAlB;AACA,WAAKC,OAAL,GAAe,IAAf;AACA,WAAKI,MAAL,CAAYU,QAAZ,CAAqB,eAArB,EAAsCD,IAAtC,EAA4CE,IAA5C,CACK3B,IAAD,IAAU;AACR,aAAKa,OAAL,GAAeb,IAAI,CAACa,OAApB;AACA,aAAKF,UAAL,GAAkB,IAAlB;AACA,aAAKC,OAAL,GAAe,KAAf;AACD,OALL,EAMKgB,KAAD,IAAW;AACT,aAAKf,OAAL,GACKe,KAAK,CAACC,QAAN,IACGD,KAAK,CAACC,QAAN,CAAe7B,IADlB,IAEG4B,KAAK,CAACC,QAAN,CAAe7B,IAAf,CAAoBa,OAFxB,IAGAe,KAAK,CAACf,OAHN,IAIAe,KAAK,CAACE,QAAN,EALJ;AAMA,aAAKnB,UAAL,GAAkB,KAAlB;AACA,aAAKC,OAAL,GAAe,KAAf;AACF,OAfJ;AAiBD;;AAtBM;AA1CI,CAAf","names":["Form","Field","ErrorMessage","yup","name","components","data","schema","object","shape","username","string","required","min","max","email","password","successful","loading","message","computed","loggedIn","$store","state","auth","status","mounted","$router","push","methods","handleRegister","user","dispatch","then","error","response","toString"],"sourceRoot":"","sources":["C:\\Users\\dell\\Desktop\\projektlogin\\vue-3-authentication-jwt\\src\\components\\Register-vue.vue"],"sourcesContent":["<template>\r\n  <div class=\"col-md-12\">\r\n    <div class=\"card card-container\">\r\n      <img\r\n          id=\"profile-img\"\r\n          src=\"img.png\"\r\n          class=\"profile-img-card\"\r\n      />\r\n      <Form @submit=\"handleRegister\" :validation-schema=\"schema\">\r\n        <div v-if=\"!successful\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <Field name=\"username\" type=\"text\" class=\"form-control\" />\r\n            <ErrorMessage name=\"username\" class=\"error-feedback\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <Field name=\"email\" type=\"email\" class=\"form-control\" />\r\n            <ErrorMessage name=\"email\" class=\"error-feedback\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <Field name=\"password\" type=\"password\" class=\"form-control\" />\r\n            <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n              <span\r\n                  v-show=\"loading\"\r\n                  class=\"spinner-border spinner-border-sm\"\r\n              ></span>\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n      <div\r\n          v-if=\"message\"\r\n          class=\"alert\"\r\n          :class=\"successful ? 'alert-success' : 'alert-danger'\"\r\n      >\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\nexport default {\r\n  name: \"Register-vue\",\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  data() {\r\n    const schema = yup.object().shape({\r\n      username: yup\r\n          .string()\r\n          .required(\"Username is required!\")\r\n          .min(3, \"Must be at least 3 characters!\")\r\n          .max(20, \"Must be maximum 20 characters!\"),\r\n      email: yup\r\n          .string()\r\n          .required(\"Email is required!\")\r\n          .email(\"Email is invalid!\")\r\n          .max(50, \"Must be maximum 50 characters!\"),\r\n      password: yup\r\n          .string()\r\n          .required(\"Password is required!\")\r\n          .min(6, \"Must be at least 6 characters!\")\r\n          .max(40, \"Must be maximum 40 characters!\"),\r\n    });\r\n    return {\r\n      successful: false,\r\n      loading: false,\r\n      message: \"\",\r\n      schema,\r\n    };\r\n  },\r\n  computed: {\r\n    loggedIn() {\r\n      return this.$store.state.auth.status.loggedIn;\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.loggedIn) {\r\n      this.$router.push(\"/profile\");\r\n    }\r\n  },\r\n  methods: {\r\n    handleRegister(user) {\r\n      this.message = \"\";\r\n      this.successful = false;\r\n      this.loading = true;\r\n      this.$store.dispatch(\"auth/register\", user).then(\r\n          (data) => {\r\n            this.message = data.message;\r\n            this.successful = true;\r\n            this.loading = false;\r\n          },\r\n          (error) => {\r\n            this.message =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n            this.successful = false;\r\n            this.loading = false;\r\n          }\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nlabel {\r\n  display: block;\r\n  margin-top: 10px;\r\n}\r\n.card-container.card {\r\n  max-width: 350px !important;\r\n  padding: 40px 40px;\r\n}\r\n.card {\r\n  background-color: #f7f7f7;\r\n  padding: 20px 25px 30px;\r\n  margin: 0 auto 25px;\r\n  margin-top: 50px;\r\n  -moz-border-radius: 2px;\r\n  -webkit-border-radius: 2px;\r\n  border-radius: 2px;\r\n  -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n}\r\n.profile-img-card {\r\n  /*width: 96px;*/\r\n  /*height: 96px;*/\r\n  /*margin: 0 auto 10px;*/\r\n  /*display: block;*/\r\n  /*-moz-border-radius: 50%;*/\r\n  /*-webkit-border-radius: 50%;*/\r\n  /*border-radius: 50%;*/\r\n}\r\n.error-feedback {\r\n  color: red;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}