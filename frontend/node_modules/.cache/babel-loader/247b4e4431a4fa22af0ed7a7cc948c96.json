{"ast":null,"code":"import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\nconst ShaderLib = {\n  basic: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n    vertexShader: ShaderChunk.meshbasic_vert,\n    fragmentShader: ShaderChunk.meshbasic_frag\n  },\n  lambert: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshlambert_vert,\n    fragmentShader: ShaderChunk.meshlambert_frag\n  },\n  phong: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      specular: {\n        value: new Color(0x111111)\n      },\n      shininess: {\n        value: 30\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphong_vert,\n    fragmentShader: ShaderChunk.meshphong_frag\n  },\n  standard: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      roughness: {\n        value: 1.0\n      },\n      metalness: {\n        value: 0.0\n      },\n      envMapIntensity: {\n        value: 1\n      } // temporary\n\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  },\n  toon: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshtoon_vert,\n    fragmentShader: ShaderChunk.meshtoon_frag\n  },\n  matcap: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n      matcap: {\n        value: null\n      }\n    }]),\n    vertexShader: ShaderChunk.meshmatcap_vert,\n    fragmentShader: ShaderChunk.meshmatcap_frag\n  },\n  points: {\n    uniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n    vertexShader: ShaderChunk.points_vert,\n    fragmentShader: ShaderChunk.points_frag\n  },\n  dashed: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n      scale: {\n        value: 1\n      },\n      dashSize: {\n        value: 1\n      },\n      totalSize: {\n        value: 2\n      }\n    }]),\n    vertexShader: ShaderChunk.linedashed_vert,\n    fragmentShader: ShaderChunk.linedashed_frag\n  },\n  depth: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n    vertexShader: ShaderChunk.depth_vert,\n    fragmentShader: ShaderChunk.depth_frag\n  },\n  normal: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.meshnormal_vert,\n    fragmentShader: ShaderChunk.meshnormal_frag\n  },\n  sprite: {\n    uniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n    vertexShader: ShaderChunk.sprite_vert,\n    fragmentShader: ShaderChunk.sprite_frag\n  },\n  background: {\n    uniforms: {\n      uvTransform: {\n        value: new Matrix3()\n      },\n      t2D: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.background_vert,\n    fragmentShader: ShaderChunk.background_frag\n  },\n\n  /* -------------------------------------------------------------------------\r\n  //\tCube map shader\r\n   ------------------------------------------------------------------------- */\n  cube: {\n    uniforms: mergeUniforms([UniformsLib.envmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.cube_vert,\n    fragmentShader: ShaderChunk.cube_frag\n  },\n  equirect: {\n    uniforms: {\n      tEquirect: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.equirect_vert,\n    fragmentShader: ShaderChunk.equirect_frag\n  },\n  distanceRGBA: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n      referencePosition: {\n        value: new Vector3()\n      },\n      nearDistance: {\n        value: 1\n      },\n      farDistance: {\n        value: 1000\n      }\n    }]),\n    vertexShader: ShaderChunk.distanceRGBA_vert,\n    fragmentShader: ShaderChunk.distanceRGBA_frag\n  },\n  shadow: {\n    uniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n      color: {\n        value: new Color(0x00000)\n      },\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.shadow_vert,\n    fragmentShader: ShaderChunk.shadow_frag\n  }\n};\nShaderLib.physical = {\n  uniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n    clearcoat: {\n      value: 0\n    },\n    clearcoatMap: {\n      value: null\n    },\n    clearcoatRoughness: {\n      value: 0\n    },\n    clearcoatRoughnessMap: {\n      value: null\n    },\n    clearcoatNormalScale: {\n      value: new Vector2(1, 1)\n    },\n    clearcoatNormalMap: {\n      value: null\n    },\n    sheen: {\n      value: 0\n    },\n    sheenColor: {\n      value: new Color(0x000000)\n    },\n    sheenColorMap: {\n      value: null\n    },\n    sheenRoughness: {\n      value: 1\n    },\n    sheenRoughnessMap: {\n      value: null\n    },\n    transmission: {\n      value: 0\n    },\n    transmissionMap: {\n      value: null\n    },\n    transmissionSamplerSize: {\n      value: new Vector2()\n    },\n    transmissionSamplerMap: {\n      value: null\n    },\n    thickness: {\n      value: 0\n    },\n    thicknessMap: {\n      value: null\n    },\n    attenuationDistance: {\n      value: 0\n    },\n    attenuationColor: {\n      value: new Color(0x000000)\n    },\n    specularIntensity: {\n      value: 1\n    },\n    specularIntensityMap: {\n      value: null\n    },\n    specularColor: {\n      value: new Color(1, 1, 1)\n    },\n    specularColorMap: {\n      value: null\n    }\n  }]),\n  vertexShader: ShaderChunk.meshphysical_vert,\n  fragmentShader: ShaderChunk.meshphysical_frag\n};\nexport { ShaderLib };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/shaders/ShaderLib.js"],"names":["ShaderChunk","mergeUniforms","Vector2","Vector3","UniformsLib","Color","Matrix3","ShaderLib","basic","uniforms","common","specularmap","envmap","aomap","lightmap","fog","vertexShader","meshbasic_vert","fragmentShader","meshbasic_frag","lambert","emissivemap","lights","emissive","value","meshlambert_vert","meshlambert_frag","phong","bumpmap","normalmap","displacementmap","specular","shininess","meshphong_vert","meshphong_frag","standard","roughnessmap","metalnessmap","roughness","metalness","envMapIntensity","meshphysical_vert","meshphysical_frag","toon","gradientmap","meshtoon_vert","meshtoon_frag","matcap","meshmatcap_vert","meshmatcap_frag","points","points_vert","points_frag","dashed","scale","dashSize","totalSize","linedashed_vert","linedashed_frag","depth","depth_vert","depth_frag","normal","opacity","meshnormal_vert","meshnormal_frag","sprite","sprite_vert","sprite_frag","background","uvTransform","t2D","background_vert","background_frag","cube","cube_vert","cube_frag","equirect","tEquirect","equirect_vert","equirect_frag","distanceRGBA","referencePosition","nearDistance","farDistance","distanceRGBA_vert","distanceRGBA_frag","shadow","color","shadow_vert","shadow_frag","physical","clearcoat","clearcoatMap","clearcoatRoughness","clearcoatRoughnessMap","clearcoatNormalScale","clearcoatNormalMap","sheen","sheenColor","sheenColorMap","sheenRoughness","sheenRoughnessMap","transmission","transmissionMap","transmissionSamplerSize","transmissionSamplerMap","thickness","thicknessMap","attenuationDistance","attenuationColor","specularIntensity","specularIntensityMap","specularColor","specularColorMap"],"mappings":"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","sourcesContent":["import { ShaderChunk } from './ShaderChunk.js';\r\nimport { mergeUniforms } from './UniformsUtils.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\nimport { Vector3 } from '../../math/Vector3.js';\r\nimport { UniformsLib } from './UniformsLib.js';\r\nimport { Color } from '../../math/Color.js';\r\nimport { Matrix3 } from '../../math/Matrix3.js';\r\n\r\nconst ShaderLib = {\r\n\r\n\tbasic: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\r\n\t},\r\n\r\n\tlambert: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\r\n\t},\r\n\r\n\tphong: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\r\n\t\t\t\tshininess: { value: 30 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphong_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\r\n\t},\r\n\r\n\tstandard: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.roughnessmap,\r\n\t\t\tUniformsLib.metalnessmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\troughness: { value: 1.0 },\r\n\t\t\t\tmetalness: { value: 0.0 },\r\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t},\r\n\r\n\ttoon: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.gradientmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\r\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\r\n\r\n\t},\r\n\r\n\tmatcap: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tmatcap: { value: null }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\r\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.points,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.points_vert,\r\n\t\tfragmentShader: ShaderChunk.points_frag\r\n\r\n\t},\r\n\r\n\tdashed: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tscale: { value: 1 },\r\n\t\t\t\tdashSize: { value: 1 },\r\n\t\t\t\ttotalSize: { value: 2 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.linedashed_vert,\r\n\t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\r\n\t},\r\n\r\n\tdepth: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.displacementmap\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.depth_vert,\r\n\t\tfragmentShader: ShaderChunk.depth_frag\r\n\r\n\t},\r\n\r\n\tnormal: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\t{\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\r\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\r\n\r\n\t},\r\n\r\n\tsprite: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.sprite,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.sprite_vert,\r\n\t\tfragmentShader: ShaderChunk.sprite_frag\r\n\r\n\t},\r\n\r\n\tbackground: {\r\n\r\n\t\tuniforms: {\r\n\t\t\tuvTransform: { value: new Matrix3() },\r\n\t\t\tt2D: { value: null },\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.background_vert,\r\n\t\tfragmentShader: ShaderChunk.background_frag\r\n\r\n\t},\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\tcube: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\t{\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.cube_vert,\r\n\t\tfragmentShader: ShaderChunk.cube_frag\r\n\r\n\t},\r\n\r\n\tequirect: {\r\n\r\n\t\tuniforms: {\r\n\t\t\ttEquirect: { value: null },\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.equirect_vert,\r\n\t\tfragmentShader: ShaderChunk.equirect_frag\r\n\r\n\t},\r\n\r\n\tdistanceRGBA: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\t{\r\n\t\t\t\treferencePosition: { value: new Vector3() },\r\n\t\t\t\tnearDistance: { value: 1 },\r\n\t\t\t\tfarDistance: { value: 1000 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\r\n\t},\r\n\r\n\tshadow: {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tUniformsLib.lights,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t},\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.shadow_vert,\r\n\t\tfragmentShader: ShaderChunk.shadow_frag\r\n\r\n\t}\r\n\r\n};\r\n\r\nShaderLib.physical = {\r\n\r\n\tuniforms: mergeUniforms( [\r\n\t\tShaderLib.standard.uniforms,\r\n\t\t{\r\n\t\t\tclearcoat: { value: 0 },\r\n\t\t\tclearcoatMap: { value: null },\r\n\t\t\tclearcoatRoughness: { value: 0 },\r\n\t\t\tclearcoatRoughnessMap: { value: null },\r\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\r\n\t\t\tclearcoatNormalMap: { value: null },\r\n\t\t\tsheen: { value: 0 },\r\n\t\t\tsheenColor: { value: new Color( 0x000000 ) },\r\n\t\t\tsheenColorMap: { value: null },\r\n\t\t\tsheenRoughness: { value: 1 },\r\n\t\t\tsheenRoughnessMap: { value: null },\r\n\t\t\ttransmission: { value: 0 },\r\n\t\t\ttransmissionMap: { value: null },\r\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\r\n\t\t\ttransmissionSamplerMap: { value: null },\r\n\t\t\tthickness: { value: 0 },\r\n\t\t\tthicknessMap: { value: null },\r\n\t\t\tattenuationDistance: { value: 0 },\r\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) },\r\n\t\t\tspecularIntensity: { value: 1 },\r\n\t\t\tspecularIntensityMap: { value: null },\r\n\t\t\tspecularColor: { value: new Color( 1, 1, 1 ) },\r\n\t\t\tspecularColorMap: { value: null },\r\n\t\t}\r\n\t] ),\r\n\r\n\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n};\r\n\r\n\r\nexport { ShaderLib };\r\n"]},"metadata":{},"sourceType":"module"}