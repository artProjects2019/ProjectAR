{"ast":null,"code":"import { Color } from '../../math/Color.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\n\nconst UniformsLib = {\n  common: {\n    diffuse: {\n      value: new Color(0xffffff)\n    },\n    opacity: {\n      value: 1.0\n    },\n    map: {\n      value: null\n    },\n    uvTransform: {\n      value: new Matrix3()\n    },\n    uv2Transform: {\n      value: new Matrix3()\n    },\n    alphaMap: {\n      value: null\n    },\n    alphaTest: {\n      value: 0\n    }\n  },\n  specularmap: {\n    specularMap: {\n      value: null\n    }\n  },\n  envmap: {\n    envMap: {\n      value: null\n    },\n    flipEnvMap: {\n      value: -1\n    },\n    reflectivity: {\n      value: 1.0\n    },\n    // basic, lambert, phong\n    ior: {\n      value: 1.5\n    },\n    // standard, physical\n    refractionRatio: {\n      value: 0.98\n    }\n  },\n  aomap: {\n    aoMap: {\n      value: null\n    },\n    aoMapIntensity: {\n      value: 1\n    }\n  },\n  lightmap: {\n    lightMap: {\n      value: null\n    },\n    lightMapIntensity: {\n      value: 1\n    }\n  },\n  emissivemap: {\n    emissiveMap: {\n      value: null\n    }\n  },\n  bumpmap: {\n    bumpMap: {\n      value: null\n    },\n    bumpScale: {\n      value: 1\n    }\n  },\n  normalmap: {\n    normalMap: {\n      value: null\n    },\n    normalScale: {\n      value: new Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    displacementMap: {\n      value: null\n    },\n    displacementScale: {\n      value: 1\n    },\n    displacementBias: {\n      value: 0\n    }\n  },\n  roughnessmap: {\n    roughnessMap: {\n      value: null\n    }\n  },\n  metalnessmap: {\n    metalnessMap: {\n      value: null\n    }\n  },\n  gradientmap: {\n    gradientMap: {\n      value: null\n    }\n  },\n  fog: {\n    fogDensity: {\n      value: 0.00025\n    },\n    fogNear: {\n      value: 1\n    },\n    fogFar: {\n      value: 2000\n    },\n    fogColor: {\n      value: new Color(0xffffff)\n    }\n  },\n  lights: {\n    ambientLightColor: {\n      value: []\n    },\n    lightProbe: {\n      value: []\n    },\n    directionalLights: {\n      value: [],\n      properties: {\n        direction: {},\n        color: {}\n      }\n    },\n    directionalLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {}\n      }\n    },\n    directionalShadowMap: {\n      value: []\n    },\n    directionalShadowMatrix: {\n      value: []\n    },\n    spotLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        direction: {},\n        distance: {},\n        coneCos: {},\n        penumbraCos: {},\n        decay: {}\n      }\n    },\n    spotLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {}\n      }\n    },\n    spotShadowMap: {\n      value: []\n    },\n    spotShadowMatrix: {\n      value: []\n    },\n    pointLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        decay: {},\n        distance: {}\n      }\n    },\n    pointLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {},\n        shadowCameraNear: {},\n        shadowCameraFar: {}\n      }\n    },\n    pointShadowMap: {\n      value: []\n    },\n    pointShadowMatrix: {\n      value: []\n    },\n    hemisphereLights: {\n      value: [],\n      properties: {\n        direction: {},\n        skyColor: {},\n        groundColor: {}\n      }\n    },\n    // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n    rectAreaLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        width: {},\n        height: {}\n      }\n    },\n    ltc_1: {\n      value: null\n    },\n    ltc_2: {\n      value: null\n    }\n  },\n  points: {\n    diffuse: {\n      value: new Color(0xffffff)\n    },\n    opacity: {\n      value: 1.0\n    },\n    size: {\n      value: 1.0\n    },\n    scale: {\n      value: 1.0\n    },\n    map: {\n      value: null\n    },\n    alphaMap: {\n      value: null\n    },\n    alphaTest: {\n      value: 0\n    },\n    uvTransform: {\n      value: new Matrix3()\n    }\n  },\n  sprite: {\n    diffuse: {\n      value: new Color(0xffffff)\n    },\n    opacity: {\n      value: 1.0\n    },\n    center: {\n      value: new Vector2(0.5, 0.5)\n    },\n    rotation: {\n      value: 0.0\n    },\n    map: {\n      value: null\n    },\n    alphaMap: {\n      value: null\n    },\n    alphaTest: {\n      value: 0\n    },\n    uvTransform: {\n      value: new Matrix3()\n    }\n  }\n};\nexport { UniformsLib };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/shaders/UniformsLib.js"],"names":["Color","Vector2","Matrix3","UniformsLib","common","diffuse","value","opacity","map","uvTransform","uv2Transform","alphaMap","alphaTest","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","ior","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","lightProbe","directionalLights","properties","direction","color","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","position","distance","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","width","height","ltc_1","ltc_2","points","size","scale","sprite","center","rotation"],"mappings":"AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG;AAEnBC,EAAAA,MAAM,EAAE;AAEPC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE,IAAIN,KAAJ,CAAW,QAAX;AAAT,KAFF;AAGPO,IAAAA,OAAO,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAHF;AAKPE,IAAAA,GAAG,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT,KALE;AAMPG,IAAAA,WAAW,EAAE;AAAEH,MAAAA,KAAK,EAAE,IAAIJ,OAAJ;AAAT,KANN;AAOPQ,IAAAA,YAAY,EAAE;AAAEJ,MAAAA,KAAK,EAAE,IAAIJ,OAAJ;AAAT,KAPP;AASPS,IAAAA,QAAQ,EAAE;AAAEL,MAAAA,KAAK,EAAE;AAAT,KATH;AAUPM,IAAAA,SAAS,EAAE;AAAEN,MAAAA,KAAK,EAAE;AAAT;AAVJ,GAFW;AAgBnBO,EAAAA,WAAW,EAAE;AAEZC,IAAAA,WAAW,EAAE;AAAER,MAAAA,KAAK,EAAE;AAAT;AAFD,GAhBM;AAsBnBS,EAAAA,MAAM,EAAE;AAEPC,IAAAA,MAAM,EAAE;AAAEV,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGPW,IAAAA,UAAU,EAAE;AAAEX,MAAAA,KAAK,EAAE,CAAE;AAAX,KAHL;AAIPY,IAAAA,YAAY,EAAE;AAAEZ,MAAAA,KAAK,EAAE;AAAT,KAJP;AAIuB;AAC9Ba,IAAAA,GAAG,EAAE;AAAEb,MAAAA,KAAK,EAAE;AAAT,KALE;AAKc;AACrBc,IAAAA,eAAe,EAAE;AAAEd,MAAAA,KAAK,EAAE;AAAT;AANV,GAtBW;AAgCnBe,EAAAA,KAAK,EAAE;AAENC,IAAAA,KAAK,EAAE;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGNiB,IAAAA,cAAc,EAAE;AAAEjB,MAAAA,KAAK,EAAE;AAAT;AAHV,GAhCY;AAuCnBkB,EAAAA,QAAQ,EAAE;AAETC,IAAAA,QAAQ,EAAE;AAAEnB,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGToB,IAAAA,iBAAiB,EAAE;AAAEpB,MAAAA,KAAK,EAAE;AAAT;AAHV,GAvCS;AA8CnBqB,EAAAA,WAAW,EAAE;AAEZC,IAAAA,WAAW,EAAE;AAAEtB,MAAAA,KAAK,EAAE;AAAT;AAFD,GA9CM;AAoDnBuB,EAAAA,OAAO,EAAE;AAERC,IAAAA,OAAO,EAAE;AAAExB,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGRyB,IAAAA,SAAS,EAAE;AAAEzB,MAAAA,KAAK,EAAE;AAAT;AAHH,GApDU;AA2DnB0B,EAAAA,SAAS,EAAE;AAEVC,IAAAA,SAAS,EAAE;AAAE3B,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGV4B,IAAAA,WAAW,EAAE;AAAE5B,MAAAA,KAAK,EAAE,IAAIL,OAAJ,CAAa,CAAb,EAAgB,CAAhB;AAAT;AAHH,GA3DQ;AAkEnBkC,EAAAA,eAAe,EAAE;AAEhBC,IAAAA,eAAe,EAAE;AAAE9B,MAAAA,KAAK,EAAE;AAAT,KAFD;AAGhB+B,IAAAA,iBAAiB,EAAE;AAAE/B,MAAAA,KAAK,EAAE;AAAT,KAHH;AAIhBgC,IAAAA,gBAAgB,EAAE;AAAEhC,MAAAA,KAAK,EAAE;AAAT;AAJF,GAlEE;AA0EnBiC,EAAAA,YAAY,EAAE;AAEbC,IAAAA,YAAY,EAAE;AAAElC,MAAAA,KAAK,EAAE;AAAT;AAFD,GA1EK;AAgFnBmC,EAAAA,YAAY,EAAE;AAEbC,IAAAA,YAAY,EAAE;AAAEpC,MAAAA,KAAK,EAAE;AAAT;AAFD,GAhFK;AAsFnBqC,EAAAA,WAAW,EAAE;AAEZC,IAAAA,WAAW,EAAE;AAAEtC,MAAAA,KAAK,EAAE;AAAT;AAFD,GAtFM;AA4FnBuC,EAAAA,GAAG,EAAE;AAEJC,IAAAA,UAAU,EAAE;AAAExC,MAAAA,KAAK,EAAE;AAAT,KAFR;AAGJyC,IAAAA,OAAO,EAAE;AAAEzC,MAAAA,KAAK,EAAE;AAAT,KAHL;AAIJ0C,IAAAA,MAAM,EAAE;AAAE1C,MAAAA,KAAK,EAAE;AAAT,KAJJ;AAKJ2C,IAAAA,QAAQ,EAAE;AAAE3C,MAAAA,KAAK,EAAE,IAAIN,KAAJ,CAAW,QAAX;AAAT;AALN,GA5Fc;AAqGnBkD,EAAAA,MAAM,EAAE;AAEPC,IAAAA,iBAAiB,EAAE;AAAE7C,MAAAA,KAAK,EAAE;AAAT,KAFZ;AAIP8C,IAAAA,UAAU,EAAE;AAAE9C,MAAAA,KAAK,EAAE;AAAT,KAJL;AAMP+C,IAAAA,iBAAiB,EAAE;AAAE/C,MAAAA,KAAK,EAAE,EAAT;AAAagD,MAAAA,UAAU,EAAE;AAC3CC,QAAAA,SAAS,EAAE,EADgC;AAE3CC,QAAAA,KAAK,EAAE;AAFoC;AAAzB,KANZ;AAWPC,IAAAA,uBAAuB,EAAE;AAAEnD,MAAAA,KAAK,EAAE,EAAT;AAAagD,MAAAA,UAAU,EAAE;AACjDI,QAAAA,UAAU,EAAE,EADqC;AAEjDC,QAAAA,gBAAgB,EAAE,EAF+B;AAGjDC,QAAAA,YAAY,EAAE,EAHmC;AAIjDC,QAAAA,aAAa,EAAE;AAJkC;AAAzB,KAXlB;AAkBPC,IAAAA,oBAAoB,EAAE;AAAExD,MAAAA,KAAK,EAAE;AAAT,KAlBf;AAmBPyD,IAAAA,uBAAuB,EAAE;AAAEzD,MAAAA,KAAK,EAAE;AAAT,KAnBlB;AAqBP0D,IAAAA,UAAU,EAAE;AAAE1D,MAAAA,KAAK,EAAE,EAAT;AAAagD,MAAAA,UAAU,EAAE;AACpCE,QAAAA,KAAK,EAAE,EAD6B;AAEpCS,QAAAA,QAAQ,EAAE,EAF0B;AAGpCV,QAAAA,SAAS,EAAE,EAHyB;AAIpCW,QAAAA,QAAQ,EAAE,EAJ0B;AAKpCC,QAAAA,OAAO,EAAE,EAL2B;AAMpCC,QAAAA,WAAW,EAAE,EANuB;AAOpCC,QAAAA,KAAK,EAAE;AAP6B;AAAzB,KArBL;AA+BPC,IAAAA,gBAAgB,EAAE;AAAEhE,MAAAA,KAAK,EAAE,EAAT;AAAagD,MAAAA,UAAU,EAAE;AAC1CI,QAAAA,UAAU,EAAE,EAD8B;AAE1CC,QAAAA,gBAAgB,EAAE,EAFwB;AAG1CC,QAAAA,YAAY,EAAE,EAH4B;AAI1CC,QAAAA,aAAa,EAAE;AAJ2B;AAAzB,KA/BX;AAsCPU,IAAAA,aAAa,EAAE;AAAEjE,MAAAA,KAAK,EAAE;AAAT,KAtCR;AAuCPkE,IAAAA,gBAAgB,EAAE;AAAElE,MAAAA,KAAK,EAAE;AAAT,KAvCX;AAyCPmE,IAAAA,WAAW,EAAE;AAAEnE,MAAAA,KAAK,EAAE,EAAT;AAAagD,MAAAA,UAAU,EAAE;AACrCE,QAAAA,KAAK,EAAE,EAD8B;AAErCS,QAAAA,QAAQ,EAAE,EAF2B;AAGrCI,QAAAA,KAAK,EAAE,EAH8B;AAIrCH,QAAAA,QAAQ,EAAE;AAJ2B;AAAzB,KAzCN;AAgDPQ,IAAAA,iBAAiB,EAAE;AAAEpE,MAAAA,KAAK,EAAE,EAAT;AAAagD,MAAAA,UAAU,EAAE;AAC3CI,QAAAA,UAAU,EAAE,EAD+B;AAE3CC,QAAAA,gBAAgB,EAAE,EAFyB;AAG3CC,QAAAA,YAAY,EAAE,EAH6B;AAI3CC,QAAAA,aAAa,EAAE,EAJ4B;AAK3Cc,QAAAA,gBAAgB,EAAE,EALyB;AAM3CC,QAAAA,eAAe,EAAE;AAN0B;AAAzB,KAhDZ;AAyDPC,IAAAA,cAAc,EAAE;AAAEvE,MAAAA,KAAK,EAAE;AAAT,KAzDT;AA0DPwE,IAAAA,iBAAiB,EAAE;AAAExE,MAAAA,KAAK,EAAE;AAAT,KA1DZ;AA4DPyE,IAAAA,gBAAgB,EAAE;AAAEzE,MAAAA,KAAK,EAAE,EAAT;AAAagD,MAAAA,UAAU,EAAE;AAC1CC,QAAAA,SAAS,EAAE,EAD+B;AAE1CyB,QAAAA,QAAQ,EAAE,EAFgC;AAG1CC,QAAAA,WAAW,EAAE;AAH6B;AAAzB,KA5DX;AAkEP;AACAC,IAAAA,cAAc,EAAE;AAAE5E,MAAAA,KAAK,EAAE,EAAT;AAAagD,MAAAA,UAAU,EAAE;AACxCE,QAAAA,KAAK,EAAE,EADiC;AAExCS,QAAAA,QAAQ,EAAE,EAF8B;AAGxCkB,QAAAA,KAAK,EAAE,EAHiC;AAIxCC,QAAAA,MAAM,EAAE;AAJgC;AAAzB,KAnET;AA0EPC,IAAAA,KAAK,EAAE;AAAE/E,MAAAA,KAAK,EAAE;AAAT,KA1EA;AA2EPgF,IAAAA,KAAK,EAAE;AAAEhF,MAAAA,KAAK,EAAE;AAAT;AA3EA,GArGW;AAoLnBiF,EAAAA,MAAM,EAAE;AAEPlF,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE,IAAIN,KAAJ,CAAW,QAAX;AAAT,KAFF;AAGPO,IAAAA,OAAO,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAHF;AAIPkF,IAAAA,IAAI,EAAE;AAAElF,MAAAA,KAAK,EAAE;AAAT,KAJC;AAKPmF,IAAAA,KAAK,EAAE;AAAEnF,MAAAA,KAAK,EAAE;AAAT,KALA;AAMPE,IAAAA,GAAG,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT,KANE;AAOPK,IAAAA,QAAQ,EAAE;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAPH;AAQPM,IAAAA,SAAS,EAAE;AAAEN,MAAAA,KAAK,EAAE;AAAT,KARJ;AASPG,IAAAA,WAAW,EAAE;AAAEH,MAAAA,KAAK,EAAE,IAAIJ,OAAJ;AAAT;AATN,GApLW;AAiMnBwF,EAAAA,MAAM,EAAE;AAEPrF,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE,IAAIN,KAAJ,CAAW,QAAX;AAAT,KAFF;AAGPO,IAAAA,OAAO,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAHF;AAIPqF,IAAAA,MAAM,EAAE;AAAErF,MAAAA,KAAK,EAAE,IAAIL,OAAJ,CAAa,GAAb,EAAkB,GAAlB;AAAT,KAJD;AAKP2F,IAAAA,QAAQ,EAAE;AAAEtF,MAAAA,KAAK,EAAE;AAAT,KALH;AAMPE,IAAAA,GAAG,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT,KANE;AAOPK,IAAAA,QAAQ,EAAE;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAPH;AAQPM,IAAAA,SAAS,EAAE;AAAEN,MAAAA,KAAK,EAAE;AAAT,KARJ;AASPG,IAAAA,WAAW,EAAE;AAAEH,MAAAA,KAAK,EAAE,IAAIJ,OAAJ;AAAT;AATN;AAjMW,CAApB;AAgNA,SAASC,WAAT","sourcesContent":["import { Color } from '../../math/Color.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\nimport { Matrix3 } from '../../math/Matrix3.js';\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nconst UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\tdiffuse: { value: new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\r\n\t\tmap: { value: null },\r\n\t\tuvTransform: { value: new Matrix3() },\r\n\t\tuv2Transform: { value: new Matrix3() },\r\n\r\n\t\talphaMap: { value: null },\r\n\t\talphaTest: { value: 0 }\r\n\r\n\t},\r\n\r\n\tspecularmap: {\r\n\r\n\t\tspecularMap: { value: null },\r\n\r\n\t},\r\n\r\n\tenvmap: {\r\n\r\n\t\tenvMap: { value: null },\r\n\t\tflipEnvMap: { value: - 1 },\r\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\r\n\t\tior: { value: 1.5 }, // standard, physical\r\n\t\trefractionRatio: { value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\taoMap: { value: null },\r\n\t\taoMapIntensity: { value: 1 }\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\tlightMap: { value: null },\r\n\t\tlightMapIntensity: { value: 1 }\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\temissiveMap: { value: null }\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\tbumpMap: { value: null },\r\n\t\tbumpScale: { value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\tnormalMap: { value: null },\r\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\tdisplacementMap: { value: null },\r\n\t\tdisplacementScale: { value: 1 },\r\n\t\tdisplacementBias: { value: 0 }\r\n\r\n\t},\r\n\r\n\troughnessmap: {\r\n\r\n\t\troughnessMap: { value: null }\r\n\r\n\t},\r\n\r\n\tmetalnessmap: {\r\n\r\n\t\tmetalnessMap: { value: null }\r\n\r\n\t},\r\n\r\n\tgradientmap: {\r\n\r\n\t\tgradientMap: { value: null }\r\n\r\n\t},\r\n\r\n\tfog: {\r\n\r\n\t\tfogDensity: { value: 0.00025 },\r\n\t\tfogNear: { value: 1 },\r\n\t\tfogFar: { value: 2000 },\r\n\t\tfogColor: { value: new Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\tambientLightColor: { value: [] },\r\n\r\n\t\tlightProbe: { value: [] },\r\n\r\n\t\tdirectionalLights: { value: [], properties: {\r\n\t\t\tdirection: {},\r\n\t\t\tcolor: {}\r\n\t\t} },\r\n\r\n\t\tdirectionalLightShadows: { value: [], properties: {\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {}\r\n\t\t} },\r\n\r\n\t\tdirectionalShadowMap: { value: [] },\r\n\t\tdirectionalShadowMatrix: { value: [] },\r\n\r\n\t\tspotLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\tdirection: {},\r\n\t\t\tdistance: {},\r\n\t\t\tconeCos: {},\r\n\t\t\tpenumbraCos: {},\r\n\t\t\tdecay: {}\r\n\t\t} },\r\n\r\n\t\tspotLightShadows: { value: [], properties: {\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {}\r\n\t\t} },\r\n\r\n\t\tspotShadowMap: { value: [] },\r\n\t\tspotShadowMatrix: { value: [] },\r\n\r\n\t\tpointLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\tdecay: {},\r\n\t\t\tdistance: {}\r\n\t\t} },\r\n\r\n\t\tpointLightShadows: { value: [], properties: {\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {},\r\n\t\t\tshadowCameraNear: {},\r\n\t\t\tshadowCameraFar: {}\r\n\t\t} },\r\n\r\n\t\tpointShadowMap: { value: [] },\r\n\t\tpointShadowMatrix: { value: [] },\r\n\r\n\t\themisphereLights: { value: [], properties: {\r\n\t\t\tdirection: {},\r\n\t\t\tskyColor: {},\r\n\t\t\tgroundColor: {}\r\n\t\t} },\r\n\r\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\trectAreaLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\twidth: {},\r\n\t\t\theight: {}\r\n\t\t} },\r\n\r\n\t\tltc_1: { value: null },\r\n\t\tltc_2: { value: null }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\tdiffuse: { value: new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\t\tsize: { value: 1.0 },\r\n\t\tscale: { value: 1.0 },\r\n\t\tmap: { value: null },\r\n\t\talphaMap: { value: null },\r\n\t\talphaTest: { value: 0 },\r\n\t\tuvTransform: { value: new Matrix3() }\r\n\r\n\t},\r\n\r\n\tsprite: {\r\n\r\n\t\tdiffuse: { value: new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\r\n\t\trotation: { value: 0.0 },\r\n\t\tmap: { value: null },\r\n\t\talphaMap: { value: null },\r\n\t\talphaTest: { value: 0 },\r\n\t\tuvTransform: { value: new Matrix3() }\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { UniformsLib };\r\n"]},"metadata":{},"sourceType":"module"}