{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\nclass AudioAnalyser {\n  constructor(audio, fftSize = 2048) {\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  }\n\n  getFrequencyData() {\n    this.analyser.getByteFrequencyData(this.data);\n    return this.data;\n  }\n\n  getAverageFrequency() {\n    let value = 0;\n    const data = this.getFrequencyData();\n\n    for (let i = 0; i < data.length; i++) {\n      value += data[i];\n    }\n\n    return value / data.length;\n  }\n\n}\n\nexport { AudioAnalyser };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/audio/AudioAnalyser.js"],"names":["AudioAnalyser","constructor","audio","fftSize","analyser","context","createAnalyser","data","Uint8Array","frequencyBinCount","getOutput","connect","getFrequencyData","getByteFrequencyData","getAverageFrequency","value","i","length"],"mappings":";;;AAAA,MAAMA,aAAN,CAAoB;AAEnBC,EAAAA,WAAW,CAAEC,KAAF,EAASC,OAAO,GAAG,IAAnB,EAA0B;AAEpC,SAAKC,QAAL,GAAgBF,KAAK,CAACG,OAAN,CAAcC,cAAd,EAAhB;AACA,SAAKF,QAAL,CAAcD,OAAd,GAAwBA,OAAxB;AAEA,SAAKI,IAAL,GAAY,IAAIC,UAAJ,CAAgB,KAAKJ,QAAL,CAAcK,iBAA9B,CAAZ;AAEAP,IAAAA,KAAK,CAACQ,SAAN,GAAkBC,OAAlB,CAA2B,KAAKP,QAAhC;AAEA;;AAGDQ,EAAAA,gBAAgB,GAAG;AAElB,SAAKR,QAAL,CAAcS,oBAAd,CAAoC,KAAKN,IAAzC;AAEA,WAAO,KAAKA,IAAZ;AAEA;;AAEDO,EAAAA,mBAAmB,GAAG;AAErB,QAAIC,KAAK,GAAG,CAAZ;AACA,UAAMR,IAAI,GAAG,KAAKK,gBAAL,EAAb;;AAEA,SAAM,IAAII,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGT,IAAI,CAACU,MAA1B,EAAkCD,CAAC,EAAnC,EAAyC;AAExCD,MAAAA,KAAK,IAAIR,IAAI,CAAES,CAAF,CAAb;AAEA;;AAED,WAAOD,KAAK,GAAGR,IAAI,CAACU,MAApB;AAEA;;AAnCkB;;AAuCpB,SAASjB,aAAT","sourcesContent":["class AudioAnalyser {\r\n\r\n\tconstructor( audio, fftSize = 2048 ) {\r\n\r\n\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\tthis.analyser.fftSize = fftSize;\r\n\r\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\t\taudio.getOutput().connect( this.analyser );\r\n\r\n\t}\r\n\r\n\r\n\tgetFrequencyData() {\r\n\r\n\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n\t\treturn this.data;\r\n\r\n\t}\r\n\r\n\tgetAverageFrequency() {\r\n\r\n\t\tlet value = 0;\r\n\t\tconst data = this.getFrequencyData();\r\n\r\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\tvalue += data[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn value / data.length;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { AudioAnalyser };\r\n"]},"metadata":{},"sourceType":"module"}