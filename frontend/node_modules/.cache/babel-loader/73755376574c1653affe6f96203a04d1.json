{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nclass Vector4 {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n\n  get width() {\n    return this.z;\n  }\n\n  set width(value) {\n    this.z = value;\n  }\n\n  get height() {\n    return this.w;\n  }\n\n  set height(value) {\n    this.w = value;\n  }\n\n  set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  setZ(z) {\n    this.z = z;\n    return this;\n  }\n\n  setW(w) {\n    this.w = w;\n    return this;\n  }\n\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  }\n\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  }\n\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  }\n\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  }\n\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  }\n\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    this.w *= v.w;\n    return this;\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n    return this;\n  }\n\n  applyMatrix4(m) {\n    const x = this.x,\n          y = this.y,\n          z = this.z,\n          w = this.w;\n    const e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  }\n\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n\n  setAxisAngleFromQuaternion(q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    const s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  }\n\n  setAxisAngleFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    let angle, x, y, z; // variables for result\n\n    const epsilon = 0.01,\n          // margin to allow for rounding errors\n    epsilon2 = 0.1,\n          // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      const xx = (m11 + 1) / 2;\n      const yy = (m22 + 1) / 2;\n      const zz = (m33 + 1) / 2;\n      const xy = (m12 + m21) / 4;\n      const xz = (m13 + m31) / 4;\n      const yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    let s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  }\n\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  }\n\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  }\n\n  clamp(min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  }\n\n  clampScalar(minVal, maxVal) {\n    this.x = Math.max(minVal, Math.min(maxVal, this.x));\n    this.y = Math.max(minVal, Math.min(maxVal, this.y));\n    this.z = Math.max(minVal, Math.min(maxVal, this.z));\n    this.w = Math.max(minVal, Math.min(maxVal, this.w));\n    return this;\n  }\n\n  clampLength(min, max) {\n    const length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  }\n\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  }\n\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  }\n\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  }\n\n  roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  }\n\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  }\n\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  }\n\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    this.z = v1.z + (v2.z - v1.z) * alpha;\n    this.w = v1.w + (v2.w - v1.w) * alpha;\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  }\n\n  fromArray(array, offset = 0) {\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    this.w = attribute.getW(index);\n    return this;\n  }\n\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    this.z = Math.random();\n    this.w = Math.random();\n    return this;\n  }\n\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n    yield this.z;\n    yield this.w;\n  }\n\n}\n\nVector4.prototype.isVector4 = true;\nexport { Vector4 };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/math/Vector4.js"],"names":["Vector4","constructor","x","y","z","w","width","value","height","set","setScalar","scalar","setX","setY","setZ","setW","setComponent","index","Error","getComponent","clone","copy","v","undefined","add","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","applyMatrix4","m","e","elements","divideScalar","setAxisAngleFromQuaternion","q","Math","acos","sqrt","setAxisAngleFromRotationMatrix","angle","epsilon","epsilon2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","abs","PI","xx","yy","zz","xy","xz","yz","min","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","lengthSq","manhattanLength","normalize","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","getX","getY","getZ","getW","random","Symbol","iterator","prototype","isVector4"],"mappings":"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","sourcesContent":["class Vector4 {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t}\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.z;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.z = value;\r\n\r\n\t}\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.w;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.w = value;\r\n\r\n\t}\r\n\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetW( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\t\tthis.w *= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromQuaternion( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\tthis.x = 1;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = q.x / s;\r\n\t\t\tthis.y = q.y / s;\r\n\t\t\tthis.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tlet angle, x, y, z; // variables for result\r\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tconst xx = ( m11 + 1 ) / 2;\r\n\t\t\tconst yy = ( m22 + 1 ) / 2;\r\n\t\t\tconst zz = ( m33 + 1 ) / 2;\r\n\t\t\tconst xy = ( m12 + m21 ) / 4;\r\n\t\t\tconst xz = ( m13 + m31 ) / 4;\r\n\t\t\tconst yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\r\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index, offset ) {\r\n\r\n\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\t\tthis.w = attribute.getW( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\t\tthis.w = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\t\tyield this.w;\r\n\r\n\t}\r\n\r\n}\r\n\r\nVector4.prototype.isVector4 = true;\r\n\r\nexport { Vector4 };\r\n"]},"metadata":{},"sourceType":"module"}