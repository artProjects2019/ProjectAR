{"ast":null,"code":"import { LightShadow } from './LightShadow.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\n\nclass SpotLightShadow extends LightShadow {\n  constructor() {\n    super(new PerspectiveCamera(50, 1, 0.5, 500));\n    this.focus = 1;\n  }\n\n  updateMatrices(light) {\n    const camera = this.camera;\n    const fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n    const aspect = this.mapSize.width / this.mapSize.height;\n    const far = light.distance || camera.far;\n\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n\n    super.updateMatrices(light);\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.focus = source.focus;\n    return this;\n  }\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\nexport { SpotLightShadow };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/lights/SpotLightShadow.js"],"names":["LightShadow","MathUtils","PerspectiveCamera","SpotLightShadow","constructor","focus","updateMatrices","light","camera","fov","RAD2DEG","angle","aspect","mapSize","width","height","far","distance","updateProjectionMatrix","copy","source","prototype","isSpotLightShadow"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAKC,SAAZ,MAA2B,sBAA3B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAEA,MAAMC,eAAN,SAA8BH,WAA9B,CAA0C;AAEzCI,EAAAA,WAAW,GAAG;AAEb,UAAO,IAAIF,iBAAJ,CAAuB,EAAvB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,GAAnC,CAAP;AAEA,SAAKG,KAAL,GAAa,CAAb;AAEA;;AAEDC,EAAAA,cAAc,CAAEC,KAAF,EAAU;AAEvB,UAAMC,MAAM,GAAG,KAAKA,MAApB;AAEA,UAAMC,GAAG,GAAGR,SAAS,CAACS,OAAV,GAAoB,CAApB,GAAwBH,KAAK,CAACI,KAA9B,GAAsC,KAAKN,KAAvD;AACA,UAAMO,MAAM,GAAG,KAAKC,OAAL,CAAaC,KAAb,GAAqB,KAAKD,OAAL,CAAaE,MAAjD;AACA,UAAMC,GAAG,GAAGT,KAAK,CAACU,QAAN,IAAkBT,MAAM,CAACQ,GAArC;;AAEA,QAAKP,GAAG,KAAKD,MAAM,CAACC,GAAf,IAAsBG,MAAM,KAAKJ,MAAM,CAACI,MAAxC,IAAkDI,GAAG,KAAKR,MAAM,CAACQ,GAAtE,EAA4E;AAE3ER,MAAAA,MAAM,CAACC,GAAP,GAAaA,GAAb;AACAD,MAAAA,MAAM,CAACI,MAAP,GAAgBA,MAAhB;AACAJ,MAAAA,MAAM,CAACQ,GAAP,GAAaA,GAAb;AACAR,MAAAA,MAAM,CAACU,sBAAP;AAEA;;AAED,UAAMZ,cAAN,CAAsBC,KAAtB;AAEA;;AAEDY,EAAAA,IAAI,CAAEC,MAAF,EAAW;AAEd,UAAMD,IAAN,CAAYC,MAAZ;AAEA,SAAKf,KAAL,GAAae,MAAM,CAACf,KAApB;AAEA,WAAO,IAAP;AAEA;;AAvCwC;;AA2C1CF,eAAe,CAACkB,SAAhB,CAA0BC,iBAA1B,GAA8C,IAA9C;AAEA,SAASnB,eAAT","sourcesContent":["import { LightShadow } from './LightShadow.js';\r\nimport * as MathUtils from '../math/MathUtils.js';\r\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\r\n\r\nclass SpotLightShadow extends LightShadow {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n\t\tthis.focus = 1;\r\n\r\n\t}\r\n\r\n\tupdateMatrices( light ) {\r\n\r\n\t\tconst camera = this.camera;\r\n\r\n\t\tconst fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\r\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\r\n\t\tconst far = light.distance || camera.far;\r\n\r\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n\t\t\tcamera.fov = fov;\r\n\t\t\tcamera.aspect = aspect;\r\n\t\t\tcamera.far = far;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t\tsuper.updateMatrices( light );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nSpotLightShadow.prototype.isSpotLightShadow = true;\r\n\r\nexport { SpotLightShadow };\r\n"]},"metadata":{},"sourceType":"module"}