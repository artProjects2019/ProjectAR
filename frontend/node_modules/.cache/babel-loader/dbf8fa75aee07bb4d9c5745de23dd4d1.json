{"ast":null,"code":"import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, sRGBEncoding, _SRGBAFormat } from '../../constants.js';\n\nfunction WebGLUtils(gl, extensions, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n\n  function convert(p, encoding = null) {\n    let extension;\n    if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n    if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === ByteType) return gl.BYTE;\n    if (p === ShortType) return gl.SHORT;\n    if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n    if (p === IntType) return gl.INT;\n    if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n    if (p === FloatType) return gl.FLOAT;\n\n    if (p === HalfFloatType) {\n      if (isWebGL2) return gl.HALF_FLOAT;\n      extension = extensions.get('OES_texture_half_float');\n\n      if (extension !== null) {\n        return extension.HALF_FLOAT_OES;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === AlphaFormat) return gl.ALPHA;\n    if (p === RGBAFormat) return gl.RGBA;\n    if (p === LuminanceFormat) return gl.LUMINANCE;\n    if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n    if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n    if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n    if (p === RedFormat) return gl.RED;\n\n    if (p === RGBFormat) {\n      console.warn('THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228');\n      return gl.RGBA;\n    } // WebGL 1 sRGB fallback\n\n\n    if (p === _SRGBAFormat) {\n      extension = extensions.get('EXT_sRGB');\n\n      if (extension !== null) {\n        return extension.SRGB_ALPHA_EXT;\n      } else {\n        return null;\n      }\n    } // WebGL2 formats.\n\n\n    if (p === RedIntegerFormat) return gl.RED_INTEGER;\n    if (p === RGFormat) return gl.RG;\n    if (p === RGIntegerFormat) return gl.RG_INTEGER;\n    if (p === RGBAIntegerFormat) return gl.RGBA_INTEGER; // S3TC\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n      if (encoding === sRGBEncoding) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc_srgb');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      } else {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      }\n    } // PVRTC\n\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n      if (extension !== null) {\n        if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      } else {\n        return null;\n      }\n    } // ETC1\n\n\n    if (p === RGB_ETC1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n      if (extension !== null) {\n        return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      } else {\n        return null;\n      }\n    } // ETC2\n\n\n    if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc');\n\n      if (extension !== null) {\n        if (p === RGB_ETC2_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n        if (p === RGBA_ETC2_EAC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n      } else {\n        return null;\n      }\n    } // ASTC\n\n\n    if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_astc');\n\n      if (extension !== null) {\n        if (p === RGBA_ASTC_4x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n        if (p === RGBA_ASTC_5x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n        if (p === RGBA_ASTC_5x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n        if (p === RGBA_ASTC_6x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n        if (p === RGBA_ASTC_6x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n        if (p === RGBA_ASTC_8x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n        if (p === RGBA_ASTC_8x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n        if (p === RGBA_ASTC_8x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n        if (p === RGBA_ASTC_10x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n        if (p === RGBA_ASTC_10x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n        if (p === RGBA_ASTC_10x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n        if (p === RGBA_ASTC_10x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n        if (p === RGBA_ASTC_12x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n        if (p === RGBA_ASTC_12x12_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n      } else {\n        return null;\n      }\n    } // BPTC\n\n\n    if (p === RGBA_BPTC_Format) {\n      extension = extensions.get('EXT_texture_compression_bptc');\n\n      if (extension !== null) {\n        if (p === RGBA_BPTC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n      } else {\n        return null;\n      }\n    } //\n\n\n    if (p === UnsignedInt248Type) {\n      if (isWebGL2) return gl.UNSIGNED_INT_24_8;\n      extension = extensions.get('WEBGL_depth_texture');\n\n      if (extension !== null) {\n        return extension.UNSIGNED_INT_24_8_WEBGL;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return {\n    convert: convert\n  };\n}\n\nexport { WebGLUtils };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/webgl/WebGLUtils.js"],"names":["RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT5_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT1_Format","RGB_S3TC_DXT1_Format","DepthFormat","DepthStencilFormat","LuminanceAlphaFormat","LuminanceFormat","RedFormat","RGBFormat","RGBAFormat","AlphaFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","HalfFloatType","FloatType","UnsignedIntType","IntType","UnsignedShortType","ShortType","ByteType","UnsignedInt248Type","UnsignedShort5551Type","UnsignedShort4444Type","UnsignedByteType","RGBA_BPTC_Format","sRGBEncoding","_SRGBAFormat","WebGLUtils","gl","extensions","capabilities","isWebGL2","convert","p","encoding","extension","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","get","HALF_FLOAT_OES","ALPHA","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","RED","console","warn","SRGB_ALPHA_EXT","RED_INTEGER","RG","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL"],"mappings":"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","sourcesContent":["import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, sRGBEncoding, _SRGBAFormat } from '../../constants.js';\r\n\r\nfunction WebGLUtils( gl, extensions, capabilities ) {\r\n\r\n\tconst isWebGL2 = capabilities.isWebGL2;\r\n\r\n\tfunction convert( p, encoding = null ) {\r\n\r\n\t\tlet extension;\r\n\r\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\r\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\r\n\r\n\t\tif ( p === ByteType ) return gl.BYTE;\r\n\t\tif ( p === ShortType ) return gl.SHORT;\r\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\r\n\t\tif ( p === IntType ) return gl.INT;\r\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\r\n\t\tif ( p === FloatType ) return gl.FLOAT;\r\n\r\n\t\tif ( p === HalfFloatType ) {\r\n\r\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\r\n\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\treturn extension.HALF_FLOAT_OES;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\r\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\r\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\r\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\r\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\r\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\r\n\t\tif ( p === RedFormat ) return gl.RED;\r\n\r\n\t\tif ( p === RGBFormat ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\r\n\t\t\treturn gl.RGBA;\r\n\r\n\t\t}\r\n\r\n\t\t// WebGL 1 sRGB fallback\r\n\r\n\t\tif ( p === _SRGBAFormat ) {\r\n\r\n\t\t\textension = extensions.get( 'EXT_sRGB' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// WebGL2 formats.\r\n\r\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\r\n\t\tif ( p === RGFormat ) return gl.RG;\r\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\r\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\r\n\r\n\t\t// S3TC\r\n\r\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\r\n\r\n\t\t\tif ( encoding === sRGBEncoding ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// PVRTC\r\n\r\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ETC1\r\n\r\n\t\tif ( p === RGB_ETC1_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ETC2\r\n\r\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\r\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ASTC\r\n\r\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\r\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\r\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\r\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\r\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// BPTC\r\n\r\n\t\tif ( p === RGBA_BPTC_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( p === UnsignedInt248Type ) {\r\n\r\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn { convert: convert };\r\n\r\n}\r\n\r\n\r\nexport { WebGLUtils };\r\n"]},"metadata":{},"sourceType":"module"}