{"ast":null,"code":"import { Matrix4 } from '../math/Matrix4.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nconst _eyeRight = /*@__PURE__*/new Matrix4();\n\nconst _eyeLeft = /*@__PURE__*/new Matrix4();\n\nconst _projectionMatrix = /*@__PURE__*/new Matrix4();\n\nclass StereoCamera {\n  constructor() {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n    this._cache = {\n      focus: null,\n      fov: null,\n      aspect: null,\n      near: null,\n      far: null,\n      zoom: null,\n      eyeSep: null\n    };\n  }\n\n  update(camera) {\n    const cache = this._cache;\n    const needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n    if (needsUpdate) {\n      cache.focus = camera.focus;\n      cache.fov = camera.fov;\n      cache.aspect = camera.aspect * this.aspect;\n      cache.near = camera.near;\n      cache.far = camera.far;\n      cache.zoom = camera.zoom;\n      cache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n      // http://paulbourke.net/stereographics/stereorender/\n\n      _projectionMatrix.copy(camera.projectionMatrix);\n\n      const eyeSepHalf = cache.eyeSep / 2;\n      const eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n      const ymax = cache.near * Math.tan(MathUtils.DEG2RAD * cache.fov * 0.5) / cache.zoom;\n      let xmin, xmax; // translate xOffset\n\n      _eyeLeft.elements[12] = -eyeSepHalf;\n      _eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n      xmin = -ymax * cache.aspect + eyeSepOnProjection;\n      xmax = ymax * cache.aspect + eyeSepOnProjection;\n      _projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n      _projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n      this.cameraL.projectionMatrix.copy(_projectionMatrix); // for right eye\n\n      xmin = -ymax * cache.aspect - eyeSepOnProjection;\n      xmax = ymax * cache.aspect - eyeSepOnProjection;\n      _projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n      _projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n      this.cameraR.projectionMatrix.copy(_projectionMatrix);\n    }\n\n    this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n    this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n  }\n\n}\n\nexport { StereoCamera };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/cameras/StereoCamera.js"],"names":["Matrix4","MathUtils","PerspectiveCamera","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","constructor","type","aspect","eyeSep","cameraL","layers","enable","matrixAutoUpdate","cameraR","_cache","focus","fov","near","far","zoom","update","camera","cache","needsUpdate","copy","projectionMatrix","eyeSepHalf","eyeSepOnProjection","ymax","Math","tan","DEG2RAD","xmin","xmax","elements","matrixWorld","multiply"],"mappings":"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","sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\r\nimport * as MathUtils from '../math/MathUtils.js';\r\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\r\n\r\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\r\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\r\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\nclass StereoCamera {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.type = 'StereoCamera';\r\n\r\n\t\tthis.aspect = 1;\r\n\r\n\t\tthis.eyeSep = 0.064;\r\n\r\n\t\tthis.cameraL = new PerspectiveCamera();\r\n\t\tthis.cameraL.layers.enable( 1 );\r\n\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\t\tthis.cameraR = new PerspectiveCamera();\r\n\t\tthis.cameraR.layers.enable( 2 );\r\n\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n\t\tthis._cache = {\r\n\t\t\tfocus: null,\r\n\t\t\tfov: null,\r\n\t\t\taspect: null,\r\n\t\t\tnear: null,\r\n\t\t\tfar: null,\r\n\t\t\tzoom: null,\r\n\t\t\teyeSep: null\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tupdate( camera ) {\r\n\r\n\t\tconst cache = this._cache;\r\n\r\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\r\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\r\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\r\n\r\n\t\tif ( needsUpdate ) {\r\n\r\n\t\t\tcache.focus = camera.focus;\r\n\t\t\tcache.fov = camera.fov;\r\n\t\t\tcache.aspect = camera.aspect * this.aspect;\r\n\t\t\tcache.near = camera.near;\r\n\t\t\tcache.far = camera.far;\r\n\t\t\tcache.zoom = camera.zoom;\r\n\t\t\tcache.eyeSep = this.eyeSep;\r\n\r\n\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\r\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\r\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\r\n\t\t\tconst ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\r\n\t\t\tlet xmin, xmax;\r\n\r\n\t\t\t// translate xOffset\r\n\r\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\r\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\r\n\r\n\t\t\t// for left eye\r\n\r\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\r\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\r\n\r\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\r\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\r\n\r\n\t\t\t// for right eye\r\n\r\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\r\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\r\n\r\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\r\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\r\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { StereoCamera };\r\n"]},"metadata":{},"sourceType":"module"}