{"ast":null,"code":"import { SphericalHarmonics3 } from '../math/SphericalHarmonics3.js';\nimport { Light } from './Light.js';\n\nclass LightProbe extends Light {\n  constructor(sh = new SphericalHarmonics3(), intensity = 1) {\n    super(undefined, intensity);\n    this.sh = sh;\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.sh.copy(source.sh);\n    return this;\n  }\n\n  fromJSON(json) {\n    this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n    this.sh.fromArray(json.sh);\n    return this;\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.sh = this.sh.toArray();\n    return data;\n  }\n\n}\n\nLightProbe.prototype.isLightProbe = true;\nexport { LightProbe };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/lights/LightProbe.js"],"names":["SphericalHarmonics3","Light","LightProbe","constructor","sh","intensity","undefined","copy","source","fromJSON","json","fromArray","toJSON","meta","data","object","toArray","prototype","isLightProbe"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,gCAApC;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,MAAMC,UAAN,SAAyBD,KAAzB,CAA+B;AAE9BE,EAAAA,WAAW,CAAEC,EAAE,GAAG,IAAIJ,mBAAJ,EAAP,EAAkCK,SAAS,GAAG,CAA9C,EAAkD;AAE5D,UAAOC,SAAP,EAAkBD,SAAlB;AAEA,SAAKD,EAAL,GAAUA,EAAV;AAEA;;AAEDG,EAAAA,IAAI,CAAEC,MAAF,EAAW;AAEd,UAAMD,IAAN,CAAYC,MAAZ;AAEA,SAAKJ,EAAL,CAAQG,IAAR,CAAcC,MAAM,CAACJ,EAArB;AAEA,WAAO,IAAP;AAEA;;AAEDK,EAAAA,QAAQ,CAAEC,IAAF,EAAS;AAEhB,SAAKL,SAAL,GAAiBK,IAAI,CAACL,SAAtB,CAFgB,CAEiB;;AACjC,SAAKD,EAAL,CAAQO,SAAR,CAAmBD,IAAI,CAACN,EAAxB;AAEA,WAAO,IAAP;AAEA;;AAEDQ,EAAAA,MAAM,CAAEC,IAAF,EAAS;AAEd,UAAMC,IAAI,GAAG,MAAMF,MAAN,CAAcC,IAAd,CAAb;AAEAC,IAAAA,IAAI,CAACC,MAAL,CAAYX,EAAZ,GAAiB,KAAKA,EAAL,CAAQY,OAAR,EAAjB;AAEA,WAAOF,IAAP;AAEA;;AArC6B;;AAyC/BZ,UAAU,CAACe,SAAX,CAAqBC,YAArB,GAAoC,IAApC;AAEA,SAAShB,UAAT","sourcesContent":["import { SphericalHarmonics3 } from '../math/SphericalHarmonics3.js';\r\nimport { Light } from './Light.js';\r\n\r\nclass LightProbe extends Light {\r\n\r\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\r\n\r\n\t\tsuper( undefined, intensity );\r\n\r\n\t\tthis.sh = sh;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.sh.copy( source.sh );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\r\n\t\tthis.sh.fromArray( json.sh );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.sh = this.sh.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nLightProbe.prototype.isLightProbe = true;\r\n\r\nexport { LightProbe };\r\n"]},"metadata":{},"sourceType":"module"}