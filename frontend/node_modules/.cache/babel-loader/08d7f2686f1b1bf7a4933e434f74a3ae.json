{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, sRGBEncoding, LinearEncoding, GLSL3 } from '../../constants.js';\nlet programIdCount = 0;\n\nfunction addLineNumbers(string) {\n  const lines = string.split('\\n');\n\n  for (let i = 0; i < lines.length; i++) {\n    lines[i] = i + 1 + ': ' + lines[i];\n  }\n\n  return lines.join('\\n');\n}\n\nfunction getEncodingComponents(encoding) {\n  switch (encoding) {\n    case LinearEncoding:\n      return ['Linear', '( value )'];\n\n    case sRGBEncoding:\n      return ['sRGB', '( value )'];\n\n    default:\n      console.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n      return ['Linear', '( value )'];\n  }\n}\n\nfunction getShaderErrors(gl, shader, type) {\n  const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  const errors = gl.getShaderInfoLog(shader).trim();\n  if (status && errors === '') return ''; // --enable-privileged-webgl-extension\n  // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n  return type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers(gl.getShaderSource(shader));\n}\n\nfunction getTexelEncodingFunction(functionName, encoding) {\n  const components = getEncodingComponents(encoding);\n  return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n}\n\nfunction getToneMappingFunction(functionName, toneMapping) {\n  let toneMappingName;\n\n  switch (toneMapping) {\n    case LinearToneMapping:\n      toneMappingName = 'Linear';\n      break;\n\n    case ReinhardToneMapping:\n      toneMappingName = 'Reinhard';\n      break;\n\n    case CineonToneMapping:\n      toneMappingName = 'OptimizedCineon';\n      break;\n\n    case ACESFilmicToneMapping:\n      toneMappingName = 'ACESFilmic';\n      break;\n\n    case CustomToneMapping:\n      toneMappingName = 'Custom';\n      break;\n\n    default:\n      console.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n      toneMappingName = 'Linear';\n  }\n\n  return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n}\n\nfunction generateExtensions(parameters) {\n  const chunks = [parameters.extensionDerivatives || !!parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n  return chunks.filter(filterEmptyLine).join('\\n');\n}\n\nfunction generateDefines(defines) {\n  const chunks = [];\n\n  for (const name in defines) {\n    const value = defines[name];\n    if (value === false) continue;\n    chunks.push('#define ' + name + ' ' + value);\n  }\n\n  return chunks.join('\\n');\n}\n\nfunction fetchAttributeLocations(gl, program) {\n  const attributes = {};\n  const n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (let i = 0; i < n; i++) {\n    const info = gl.getActiveAttrib(program, i);\n    const name = info.name;\n    let locationSize = 1;\n    if (info.type === gl.FLOAT_MAT2) locationSize = 2;\n    if (info.type === gl.FLOAT_MAT3) locationSize = 3;\n    if (info.type === gl.FLOAT_MAT4) locationSize = 4; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n    attributes[name] = {\n      type: info.type,\n      location: gl.getAttribLocation(program, name),\n      locationSize: locationSize\n    };\n  }\n\n  return attributes;\n}\n\nfunction filterEmptyLine(string) {\n  return string !== '';\n}\n\nfunction replaceLightNums(string, parameters) {\n  return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n}\n\nfunction replaceClippingPlaneNums(string, parameters) {\n  return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n} // Resolve Includes\n\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes(string) {\n  return string.replace(includePattern, includeReplacer);\n}\n\nfunction includeReplacer(match, include) {\n  const string = ShaderChunk[include];\n\n  if (string === undefined) {\n    throw new Error('Can not resolve #include <' + include + '>');\n  }\n\n  return resolveIncludes(string);\n} // Unroll Loops\n\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops(string) {\n  return string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n}\n\nfunction deprecatedLoopReplacer(match, start, end, snippet) {\n  console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n  return loopReplacer(match, start, end, snippet);\n}\n\nfunction loopReplacer(match, start, end, snippet) {\n  let string = '';\n\n  for (let i = parseInt(start); i < parseInt(end); i++) {\n    string += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n  }\n\n  return string;\n} //\n\n\nfunction generatePrecision(parameters) {\n  let precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n  if (parameters.precision === 'highp') {\n    precisionstring += '\\n#define HIGH_PRECISION';\n  } else if (parameters.precision === 'mediump') {\n    precisionstring += '\\n#define MEDIUM_PRECISION';\n  } else if (parameters.precision === 'lowp') {\n    precisionstring += '\\n#define LOW_PRECISION';\n  }\n\n  return precisionstring;\n}\n\nfunction generateShadowMapTypeDefine(parameters) {\n  let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n  if (parameters.shadowMapType === PCFShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n  } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n  } else if (parameters.shadowMapType === VSMShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n  }\n\n  return shadowMapTypeDefine;\n}\n\nfunction generateEnvMapTypeDefine(parameters) {\n  let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeReflectionMapping:\n      case CubeRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n        break;\n\n      case CubeUVReflectionMapping:\n      case CubeUVRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n        break;\n    }\n  }\n\n  return envMapTypeDefine;\n}\n\nfunction generateEnvMapModeDefine(parameters) {\n  let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeRefractionMapping:\n      case CubeUVRefractionMapping:\n        envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n        break;\n    }\n  }\n\n  return envMapModeDefine;\n}\n\nfunction generateEnvMapBlendingDefine(parameters) {\n  let envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n  if (parameters.envMap) {\n    switch (parameters.combine) {\n      case MultiplyOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n        break;\n\n      case MixOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n        break;\n\n      case AddOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n        break;\n    }\n  }\n\n  return envMapBlendingDefine;\n}\n\nfunction generateCubeUVSize(parameters) {\n  const imageHeight = parameters.envMapCubeUVHeight;\n  if (imageHeight === null) return null;\n  const maxMip = Math.log2(imageHeight / 32 + 1) + 3;\n  const texelHeight = 1.0 / imageHeight;\n  const texelWidth = 1.0 / (3 * Math.max(Math.pow(2, maxMip), 7 * 16));\n  return {\n    texelWidth,\n    texelHeight,\n    maxMip\n  };\n}\n\nfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n  // TODO Send this event to Three.js DevTools\n  // console.log( 'WebGLProgram', cacheKey );\n  const gl = renderer.getContext();\n  const defines = parameters.defines;\n  let vertexShader = parameters.vertexShader;\n  let fragmentShader = parameters.fragmentShader;\n  const shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n  const envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n  const envMapModeDefine = generateEnvMapModeDefine(parameters);\n  const envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n  const envMapCubeUVSize = generateCubeUVSize(parameters);\n  const customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n  const customDefines = generateDefines(defines);\n  const program = gl.createProgram();\n  let prefixVertex, prefixFragment;\n  let versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n  if (parameters.isRawShaderMaterial) {\n    prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n    if (prefixVertex.length > 0) {\n      prefixVertex += '\\n';\n    }\n\n    prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n    if (prefixFragment.length > 0) {\n      prefixFragment += '\\n';\n    }\n  } else {\n    prefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.morphColors && parameters.isWebGL2 ? '#define USE_MORPHCOLORS' : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE' : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n    prefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', envMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '', envMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '', envMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoat ? '#define USE_CLEARCOAT' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.alphaTest ? '#define USE_ALPHATEST' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n    parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.opaque ? '#define OPAQUE' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n    getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n  }\n\n  vertexShader = resolveIncludes(vertexShader);\n  vertexShader = replaceLightNums(vertexShader, parameters);\n  vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n  fragmentShader = resolveIncludes(fragmentShader);\n  fragmentShader = replaceLightNums(fragmentShader, parameters);\n  fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n  vertexShader = unrollLoops(vertexShader);\n  fragmentShader = unrollLoops(fragmentShader);\n\n  if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n    // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n    versionString = '#version 300 es\\n';\n    prefixVertex = ['precision mediump sampler2DArray;', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n    prefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n  }\n\n  const vertexGlsl = versionString + prefixVertex + vertexShader;\n  const fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n  // console.log( '*FRAGMENT*', fragmentGlsl );\n\n  const glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n  const glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n  gl.attachShader(program, glVertexShader);\n  gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n  if (parameters.index0AttributeName !== undefined) {\n    gl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n  } else if (parameters.morphTargets === true) {\n    // programs with morphTargets displace position out of attribute 0\n    gl.bindAttribLocation(program, 0, 'position');\n  }\n\n  gl.linkProgram(program); // check for link errors\n\n  if (renderer.debug.checkShaderErrors) {\n    const programLog = gl.getProgramInfoLog(program).trim();\n    const vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n    const fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n    let runnable = true;\n    let haveDiagnostics = true;\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      const vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n      const fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n      console.error('THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' + 'VALIDATE_STATUS ' + gl.getProgramParameter(program, gl.VALIDATE_STATUS) + '\\n\\n' + 'Program Info Log: ' + programLog + '\\n' + vertexErrors + '\\n' + fragmentErrors);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: Program Info Log:', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    }\n  } // Clean up\n  // Crashes in iOS9 and iOS10. #18402\n  // gl.detachShader( program, glVertexShader );\n  // gl.detachShader( program, glFragmentShader );\n\n\n  gl.deleteShader(glVertexShader);\n  gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n  let cachedUniforms;\n\n  this.getUniforms = function () {\n    if (cachedUniforms === undefined) {\n      cachedUniforms = new WebGLUniforms(gl, program);\n    }\n\n    return cachedUniforms;\n  }; // set up caching for attribute locations\n\n\n  let cachedAttributes;\n\n  this.getAttributes = function () {\n    if (cachedAttributes === undefined) {\n      cachedAttributes = fetchAttributeLocations(gl, program);\n    }\n\n    return cachedAttributes;\n  }; // free resource\n\n\n  this.destroy = function () {\n    bindingStates.releaseStatesOfProgram(this);\n    gl.deleteProgram(program);\n    this.program = undefined;\n  }; //\n\n\n  this.name = parameters.shaderName;\n  this.id = programIdCount++;\n  this.cacheKey = cacheKey;\n  this.usedTimes = 1;\n  this.program = program;\n  this.vertexShader = glVertexShader;\n  this.fragmentShader = glFragmentShader;\n  return this;\n}\n\nexport { WebGLProgram };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/webgl/WebGLProgram.js"],"names":["WebGLUniforms","WebGLShader","ShaderChunk","NoToneMapping","AddOperation","MixOperation","MultiplyOperation","CubeRefractionMapping","CubeUVRefractionMapping","CubeUVReflectionMapping","CubeReflectionMapping","PCFSoftShadowMap","PCFShadowMap","VSMShadowMap","ACESFilmicToneMapping","CineonToneMapping","CustomToneMapping","ReinhardToneMapping","LinearToneMapping","sRGBEncoding","LinearEncoding","GLSL3","programIdCount","addLineNumbers","string","lines","split","i","length","join","getEncodingComponents","encoding","console","warn","getShaderErrors","gl","shader","type","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","components","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","parameters","chunks","extensionDerivatives","envMapCubeUVHeight","bumpMap","tangentSpaceNormalMap","clearcoatNormalMap","flatShading","shaderID","extensionFragDepth","logarithmicDepthBuffer","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","envMap","transmission","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","defines","name","value","push","fetchAttributeLocations","program","attributes","n","getProgramParameter","ACTIVE_ATTRIBUTES","info","getActiveAttrib","locationSize","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","location","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","match","include","undefined","Error","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","start","end","snippet","parseInt","generatePrecision","precisionstring","precision","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","combine","generateCubeUVSize","imageHeight","maxMip","Math","log2","texelHeight","texelWidth","max","pow","WebGLProgram","renderer","cacheKey","bindingStates","getContext","vertexShader","fragmentShader","envMapCubeUVSize","customExtensions","isWebGL2","customDefines","createProgram","prefixVertex","prefixFragment","versionString","glslVersion","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fog","fogExp2","map","lightMap","aoMap","emissiveMap","normalMap","objectSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","displacementMap","specularMap","specularIntensityMap","specularColorMap","roughnessMap","metalnessMap","alphaMap","transmissionMap","thicknessMap","sheenColorMap","sheenRoughnessMap","vertexTangents","vertexColors","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","morphTargets","morphNormals","morphColors","morphTargetsCount","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","matcap","clearcoat","alphaTest","sheen","decodeVideoTexture","gradientMap","premultipliedAlpha","physicallyCorrectLights","dithering","opaque","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","VERTEX_SHADER","glFragmentShader","FRAGMENT_SHADER","attachShader","index0AttributeName","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","error","getError","VALIDATE_STATUS","diagnostics","log","prefix","deleteShader","cachedUniforms","getUniforms","cachedAttributes","getAttributes","destroy","releaseStatesOfProgram","deleteProgram","id","usedTimes"],"mappings":"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","sourcesContent":["import { WebGLUniforms } from './WebGLUniforms.js';\r\nimport { WebGLShader } from './WebGLShader.js';\r\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\r\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, sRGBEncoding, LinearEncoding, GLSL3 } from '../../constants.js';\r\n\r\nlet programIdCount = 0;\r\n\r\nfunction addLineNumbers( string ) {\r\n\r\n\tconst lines = string.split( '\\n' );\r\n\r\n\tfor ( let i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t}\r\n\r\n\treturn lines.join( '\\n' );\r\n\r\n}\r\n\r\nfunction getEncodingComponents( encoding ) {\r\n\r\n\tswitch ( encoding ) {\r\n\r\n\t\tcase LinearEncoding:\r\n\t\t\treturn [ 'Linear', '( value )' ];\r\n\t\tcase sRGBEncoding:\r\n\t\t\treturn [ 'sRGB', '( value )' ];\r\n\t\tdefault:\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\r\n\t\t\treturn [ 'Linear', '( value )' ];\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction getShaderErrors( gl, shader, type ) {\r\n\r\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\r\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\r\n\r\n\tif ( status && errors === '' ) return '';\r\n\r\n\t// --enable-privileged-webgl-extension\r\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers( gl.getShaderSource( shader ) );\r\n\r\n}\r\n\r\nfunction getTexelEncodingFunction( functionName, encoding ) {\r\n\r\n\tconst components = getEncodingComponents( encoding );\r\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\r\n\r\n}\r\n\r\nfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\tlet toneMappingName;\r\n\r\n\tswitch ( toneMapping ) {\r\n\r\n\t\tcase LinearToneMapping:\r\n\t\t\ttoneMappingName = 'Linear';\r\n\t\t\tbreak;\r\n\r\n\t\tcase ReinhardToneMapping:\r\n\t\t\ttoneMappingName = 'Reinhard';\r\n\t\t\tbreak;\r\n\r\n\t\tcase CineonToneMapping:\r\n\t\t\ttoneMappingName = 'OptimizedCineon';\r\n\t\t\tbreak;\r\n\r\n\t\tcase ACESFilmicToneMapping:\r\n\t\t\ttoneMappingName = 'ACESFilmic';\r\n\t\t\tbreak;\r\n\r\n\t\tcase CustomToneMapping:\r\n\t\t\ttoneMappingName = 'Custom';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\r\n\t\t\ttoneMappingName = 'Linear';\r\n\r\n\t}\r\n\r\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n\r\n}\r\n\r\nfunction generateExtensions( parameters ) {\r\n\r\n\tconst chunks = [\r\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\r\n\t];\r\n\r\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n}\r\n\r\nfunction generateDefines( defines ) {\r\n\r\n\tconst chunks = [];\r\n\r\n\tfor ( const name in defines ) {\r\n\r\n\t\tconst value = defines[ name ];\r\n\r\n\t\tif ( value === false ) continue;\r\n\r\n\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t}\r\n\r\n\treturn chunks.join( '\\n' );\r\n\r\n}\r\n\r\nfunction fetchAttributeLocations( gl, program ) {\r\n\r\n\tconst attributes = {};\r\n\r\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\tfor ( let i = 0; i < n; i ++ ) {\r\n\r\n\t\tconst info = gl.getActiveAttrib( program, i );\r\n\t\tconst name = info.name;\r\n\r\n\t\tlet locationSize = 1;\r\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\r\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\r\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\r\n\r\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n\t\tattributes[ name ] = {\r\n\t\t\ttype: info.type,\r\n\t\t\tlocation: gl.getAttribLocation( program, name ),\r\n\t\t\tlocationSize: locationSize\r\n\t\t};\r\n\r\n\t}\r\n\r\n\treturn attributes;\r\n\r\n}\r\n\r\nfunction filterEmptyLine( string ) {\r\n\r\n\treturn string !== '';\r\n\r\n}\r\n\r\nfunction replaceLightNums( string, parameters ) {\r\n\r\n\treturn string\r\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\r\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\r\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\r\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\r\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\r\n\r\n}\r\n\r\nfunction replaceClippingPlaneNums( string, parameters ) {\r\n\r\n\treturn string\r\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\r\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\r\n\r\n}\r\n\r\n// Resolve Includes\r\n\r\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\nfunction resolveIncludes( string ) {\r\n\r\n\treturn string.replace( includePattern, includeReplacer );\r\n\r\n}\r\n\r\nfunction includeReplacer( match, include ) {\r\n\r\n\tconst string = ShaderChunk[ include ];\r\n\r\n\tif ( string === undefined ) {\r\n\r\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t}\r\n\r\n\treturn resolveIncludes( string );\r\n\r\n}\r\n\r\n// Unroll Loops\r\n\r\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\r\n\r\nfunction unrollLoops( string ) {\r\n\r\n\treturn string\r\n\t\t.replace( unrollLoopPattern, loopReplacer )\r\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\r\n\r\n}\r\n\r\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\r\n\r\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\r\n\treturn loopReplacer( match, start, end, snippet );\r\n\r\n}\r\n\r\nfunction loopReplacer( match, start, end, snippet ) {\r\n\r\n\tlet string = '';\r\n\r\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\tstring += snippet\r\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\r\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\r\n\r\n\t}\r\n\r\n\treturn string;\r\n\r\n}\r\n\r\n//\r\n\r\nfunction generatePrecision( parameters ) {\r\n\r\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\r\n\r\n\tif ( parameters.precision === 'highp' ) {\r\n\r\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\r\n\r\n\t} else if ( parameters.precision === 'mediump' ) {\r\n\r\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\r\n\r\n\t} else if ( parameters.precision === 'lowp' ) {\r\n\r\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\r\n\r\n\t}\r\n\r\n\treturn precisionstring;\r\n\r\n}\r\n\r\nfunction generateShadowMapTypeDefine( parameters ) {\r\n\r\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\r\n\r\n\t}\r\n\r\n\treturn shadowMapTypeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapTypeDefine( parameters ) {\r\n\r\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.envMapMode ) {\r\n\r\n\t\t\tcase CubeReflectionMapping:\r\n\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CubeUVReflectionMapping:\r\n\t\t\tcase CubeUVRefractionMapping:\r\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapTypeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapModeDefine( parameters ) {\r\n\r\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.envMapMode ) {\r\n\r\n\t\t\tcase CubeRefractionMapping:\r\n\t\t\tcase CubeUVRefractionMapping:\r\n\r\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapModeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapBlendingDefine( parameters ) {\r\n\r\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.combine ) {\r\n\r\n\t\t\tcase MultiplyOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase MixOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AddOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapBlendingDefine;\r\n\r\n}\r\n\r\nfunction generateCubeUVSize( parameters ) {\r\n\r\n\tconst imageHeight = parameters.envMapCubeUVHeight;\r\n\r\n\tif ( imageHeight === null ) return null;\r\n\r\n\tconst maxMip = Math.log2( imageHeight / 32 + 1 ) + 3;\r\n\r\n\tconst texelHeight = 1.0 / imageHeight;\r\n\r\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\r\n\r\n\treturn { texelWidth, texelHeight, maxMip };\r\n\r\n}\r\n\r\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\r\n\r\n\t// TODO Send this event to Three.js DevTools\r\n\t// console.log( 'WebGLProgram', cacheKey );\r\n\r\n\tconst gl = renderer.getContext();\r\n\r\n\tconst defines = parameters.defines;\r\n\r\n\tlet vertexShader = parameters.vertexShader;\r\n\tlet fragmentShader = parameters.fragmentShader;\r\n\r\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\r\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\r\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\r\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\r\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\r\n\r\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\r\n\r\n\tconst customDefines = generateDefines( defines );\r\n\r\n\tconst program = gl.createProgram();\r\n\r\n\tlet prefixVertex, prefixFragment;\r\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\r\n\r\n\tif ( parameters.isRawShaderMaterial ) {\r\n\r\n\t\tprefixVertex = [\r\n\r\n\t\t\tcustomDefines\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tif ( prefixVertex.length > 0 ) {\r\n\r\n\t\t\tprefixVertex += '\\n';\r\n\r\n\t\t}\r\n\r\n\t\tprefixFragment = [\r\n\r\n\t\t\tcustomExtensions,\r\n\t\t\tcustomDefines\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tif ( prefixFragment.length > 0 ) {\r\n\r\n\t\t\tprefixFragment += '\\n';\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tprefixVertex = [\r\n\r\n\t\t\tgeneratePrecision( parameters ),\r\n\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines,\r\n\r\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\r\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\r\n\r\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\r\n\r\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n\r\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\r\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\r\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\r\n\r\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\r\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\r\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\r\n\r\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\r\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\r\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\r\n\r\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\r\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\r\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\r\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\r\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t'uniform bool isOrthographic;',\r\n\r\n\t\t\t'#ifdef USE_INSTANCING',\r\n\r\n\t\t\t'\tattribute mat4 instanceMatrix;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\r\n\r\n\t\t\t'\tattribute vec3 instanceColor;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'attribute vec3 position;',\r\n\t\t\t'attribute vec3 normal;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'#ifdef USE_TANGENT',\r\n\r\n\t\t\t'\tattribute vec4 tangent;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\r\n\r\n\t\t\t'\tattribute vec4 color;',\r\n\r\n\t\t\t'#elif defined( USE_COLOR )',\r\n\r\n\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\r\n\r\n\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t'\t#else',\r\n\r\n\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t'\t#endif',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'\\n'\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tprefixFragment = [\r\n\r\n\t\t\tcustomExtensions,\r\n\r\n\t\t\tgeneratePrecision( parameters ),\r\n\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines,\r\n\r\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\r\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\r\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\r\n\r\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\r\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n\r\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\r\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\r\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\r\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\r\n\r\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\r\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\r\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\r\n\r\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\r\n\r\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\r\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\r\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\r\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\r\n\r\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\r\n\r\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\r\n\r\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\r\n\r\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t'uniform bool isOrthographic;',\r\n\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\r\n\r\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\r\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\r\n\r\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\r\n\r\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\r\n\r\n\t\t\t'\\n'\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tvertexShader = resolveIncludes( vertexShader );\r\n\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\r\n\r\n\tfragmentShader = resolveIncludes( fragmentShader );\r\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\r\n\r\n\tvertexShader = unrollLoops( vertexShader );\r\n\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\r\n\r\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\r\n\r\n\t\tversionString = '#version 300 es\\n';\r\n\r\n\t\tprefixVertex = [\r\n\t\t\t'precision mediump sampler2DArray;',\r\n\t\t\t'#define attribute in',\r\n\t\t\t'#define varying out',\r\n\t\t\t'#define texture2D texture'\r\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\r\n\r\n\t\tprefixFragment = [\r\n\t\t\t'#define varying in',\r\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\r\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\r\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\r\n\t\t\t'#define texture2D texture',\r\n\t\t\t'#define textureCube texture',\r\n\t\t\t'#define texture2DProj textureProj',\r\n\t\t\t'#define texture2DLodEXT textureLod',\r\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\r\n\t\t\t'#define textureCubeLodEXT textureLod',\r\n\t\t\t'#define texture2DGradEXT textureGrad',\r\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\r\n\t\t\t'#define textureCubeGradEXT textureGrad'\r\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\r\n\r\n\t}\r\n\r\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\r\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\r\n\r\n\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\tgl.attachShader( program, glVertexShader );\r\n\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t// Force a particular attribute to index 0.\r\n\r\n\tif ( parameters.index0AttributeName !== undefined ) {\r\n\r\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\r\n\r\n\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t}\r\n\r\n\tgl.linkProgram( program );\r\n\r\n\t// check for link errors\r\n\tif ( renderer.debug.checkShaderErrors ) {\r\n\r\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\r\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\r\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\r\n\r\n\t\tlet runnable = true;\r\n\t\tlet haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\r\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\r\n\r\n\t\t\tconsole.error(\r\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\r\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\r\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\r\n\t\t\t\tvertexErrors + '\\n' +\r\n\t\t\t\tfragmentErrors\r\n\t\t\t);\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Clean up\r\n\r\n\t// Crashes in iOS9 and iOS10. #18402\r\n\t// gl.detachShader( program, glVertexShader );\r\n\t// gl.detachShader( program, glFragmentShader );\r\n\r\n\tgl.deleteShader( glVertexShader );\r\n\tgl.deleteShader( glFragmentShader );\r\n\r\n\t// set up caching for uniform locations\r\n\r\n\tlet cachedUniforms;\r\n\r\n\tthis.getUniforms = function () {\r\n\r\n\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\r\n\r\n\t\t}\r\n\r\n\t\treturn cachedUniforms;\r\n\r\n\t};\r\n\r\n\t// set up caching for attribute locations\r\n\r\n\tlet cachedAttributes;\r\n\r\n\tthis.getAttributes = function () {\r\n\r\n\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t}\r\n\r\n\t\treturn cachedAttributes;\r\n\r\n\t};\r\n\r\n\t// free resource\r\n\r\n\tthis.destroy = function () {\r\n\r\n\t\tbindingStates.releaseStatesOfProgram( this );\r\n\r\n\t\tgl.deleteProgram( program );\r\n\t\tthis.program = undefined;\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.name = parameters.shaderName;\r\n\tthis.id = programIdCount ++;\r\n\tthis.cacheKey = cacheKey;\r\n\tthis.usedTimes = 1;\r\n\tthis.program = program;\r\n\tthis.vertexShader = glVertexShader;\r\n\tthis.fragmentShader = glFragmentShader;\r\n\r\n\treturn this;\r\n\r\n}\r\n\r\nexport { WebGLProgram };\r\n"]},"metadata":{},"sourceType":"module"}