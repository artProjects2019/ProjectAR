{"ast":null,"code":"import { Curve } from '../core/Curve.js';\nimport { QuadraticBezier } from '../core/Interpolations.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\nclass QuadraticBezierCurve extends Curve {\n  constructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\n    super();\n    this.type = 'QuadraticBezierCurve';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  getPoint(t, optionalTarget = new Vector2()) {\n    const point = optionalTarget;\n    const v0 = this.v0,\n          v1 = this.v1,\n          v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n    return point;\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  }\n\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\nexport { QuadraticBezierCurve };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/extras/curves/QuadraticBezierCurve.js"],"names":["Curve","QuadraticBezier","Vector2","QuadraticBezierCurve","constructor","v0","v1","v2","type","getPoint","t","optionalTarget","point","set","x","y","copy","source","toJSON","data","toArray","fromJSON","json","fromArray","prototype","isQuadraticBezierCurve"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,MAAMC,oBAAN,SAAmCH,KAAnC,CAAyC;AAExCI,EAAAA,WAAW,CAAEC,EAAE,GAAG,IAAIH,OAAJ,EAAP,EAAsBI,EAAE,GAAG,IAAIJ,OAAJ,EAA3B,EAA0CK,EAAE,GAAG,IAAIL,OAAJ,EAA/C,EAA+D;AAEzE;AAEA,SAAKM,IAAL,GAAY,sBAAZ;AAEA,SAAKH,EAAL,GAAUA,EAAV;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,EAAL,GAAUA,EAAV;AAEA;;AAEDE,EAAAA,QAAQ,CAAEC,CAAF,EAAKC,cAAc,GAAG,IAAIT,OAAJ,EAAtB,EAAsC;AAE7C,UAAMU,KAAK,GAAGD,cAAd;AAEA,UAAMN,EAAE,GAAG,KAAKA,EAAhB;AAAA,UAAoBC,EAAE,GAAG,KAAKA,EAA9B;AAAA,UAAkCC,EAAE,GAAG,KAAKA,EAA5C;AAEAK,IAAAA,KAAK,CAACC,GAAN,CACCZ,eAAe,CAAES,CAAF,EAAKL,EAAE,CAACS,CAAR,EAAWR,EAAE,CAACQ,CAAd,EAAiBP,EAAE,CAACO,CAApB,CADhB,EAECb,eAAe,CAAES,CAAF,EAAKL,EAAE,CAACU,CAAR,EAAWT,EAAE,CAACS,CAAd,EAAiBR,EAAE,CAACQ,CAApB,CAFhB;AAKA,WAAOH,KAAP;AAEA;;AAEDI,EAAAA,IAAI,CAAEC,MAAF,EAAW;AAEd,UAAMD,IAAN,CAAYC,MAAZ;AAEA,SAAKZ,EAAL,CAAQW,IAAR,CAAcC,MAAM,CAACZ,EAArB;AACA,SAAKC,EAAL,CAAQU,IAAR,CAAcC,MAAM,CAACX,EAArB;AACA,SAAKC,EAAL,CAAQS,IAAR,CAAcC,MAAM,CAACV,EAArB;AAEA,WAAO,IAAP;AAEA;;AAEDW,EAAAA,MAAM,GAAG;AAER,UAAMC,IAAI,GAAG,MAAMD,MAAN,EAAb;AAEAC,IAAAA,IAAI,CAACd,EAAL,GAAU,KAAKA,EAAL,CAAQe,OAAR,EAAV;AACAD,IAAAA,IAAI,CAACb,EAAL,GAAU,KAAKA,EAAL,CAAQc,OAAR,EAAV;AACAD,IAAAA,IAAI,CAACZ,EAAL,GAAU,KAAKA,EAAL,CAAQa,OAAR,EAAV;AAEA,WAAOD,IAAP;AAEA;;AAEDE,EAAAA,QAAQ,CAAEC,IAAF,EAAS;AAEhB,UAAMD,QAAN,CAAgBC,IAAhB;AAEA,SAAKjB,EAAL,CAAQkB,SAAR,CAAmBD,IAAI,CAACjB,EAAxB;AACA,SAAKC,EAAL,CAAQiB,SAAR,CAAmBD,IAAI,CAAChB,EAAxB;AACA,SAAKC,EAAL,CAAQgB,SAAR,CAAmBD,IAAI,CAACf,EAAxB;AAEA,WAAO,IAAP;AAEA;;AA/DuC;;AAmEzCJ,oBAAoB,CAACqB,SAArB,CAA+BC,sBAA/B,GAAwD,IAAxD;AAEA,SAAStB,oBAAT","sourcesContent":["import { Curve } from '../core/Curve.js';\r\nimport { QuadraticBezier } from '../core/Interpolations.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\n\r\nclass QuadraticBezierCurve extends Curve {\r\n\r\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\r\n\r\nexport { QuadraticBezierCurve };\r\n"]},"metadata":{},"sourceType":"module"}