{"ast":null,"code":"import { Vector2 } from './Vector2.js';\n\nconst _vector = /*@__PURE__*/new Vector2();\n\nclass Box2 {\n  constructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\n    this.min = min;\n    this.max = max;\n  }\n\n  set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  }\n\n  setFromPoints(points) {\n    this.makeEmpty();\n\n    for (let i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  }\n\n  setFromCenterAndSize(center, size) {\n    const halfSize = _vector.copy(size).multiplyScalar(0.5);\n\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  }\n\n  makeEmpty() {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  }\n\n  isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  }\n\n  getCenter(target) {\n    return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n\n  getSize(target) {\n    return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n  }\n\n  expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  }\n\n  expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  }\n\n  expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  }\n\n  containsPoint(point) {\n    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n  }\n\n  containsBox(box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n  }\n\n  getParameter(point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  }\n\n  intersectsBox(box) {\n    // using 4 splitting planes to rule out intersections\n    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n  }\n\n  clampPoint(point, target) {\n    return target.copy(point).clamp(this.min, this.max);\n  }\n\n  distanceToPoint(point) {\n    const clampedPoint = _vector.copy(point).clamp(this.min, this.max);\n\n    return clampedPoint.sub(point).length();\n  }\n\n  intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  }\n\n  union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  }\n\n  translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  }\n\n  equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n\n}\n\nBox2.prototype.isBox2 = true;\nexport { Box2 };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/math/Box2.js"],"names":["Vector2","_vector","Box2","constructor","min","Infinity","max","set","copy","setFromPoints","points","makeEmpty","i","il","length","expandByPoint","setFromCenterAndSize","center","size","halfSize","multiplyScalar","sub","add","clone","box","x","y","isEmpty","getCenter","target","addVectors","getSize","subVectors","point","expandByVector","vector","expandByScalar","scalar","addScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","clamp","distanceToPoint","clampedPoint","intersect","union","translate","offset","equals","prototype","isBox2"],"mappings":"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","sourcesContent":["import { Vector2 } from './Vector2.js';\r\n\r\nconst _vector = /*@__PURE__*/ new Vector2();\r\n\r\nclass Box2 {\r\n\r\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tset( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCenterAndSize( center, size ) {\r\n\r\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\r\n\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t}\r\n\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tgetSize( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByVector( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByScalar( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\r\n\r\n\t}\r\n\r\n\tcontainsBox( box ) {\r\n\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\r\n\t}\r\n\r\n\tgetParameter( point, target ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\treturn target.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\t// using 4 splitting planes to rule out intersections\r\n\r\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\r\n\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t}\r\n\r\n\tintersect( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n}\r\n\r\nBox2.prototype.isBox2 = true;\r\n\r\nexport { Box2 };\r\n"]},"metadata":{},"sourceType":"module"}