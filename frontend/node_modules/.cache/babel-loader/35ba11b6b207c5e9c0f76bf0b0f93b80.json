{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Home\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" | \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_4, _createVNode(_component_router_view)])]);\n}","map":{"version":3,"mappings":";;AACOA,IAAE,EAAC;;;AACDC,OAAK,EAAC;;;iDACW;;iDAAkB;;;;;;;uBAF1CC,oBAKM,KALN,cAKM,CAJJC,oBAGM,KAHN,cAGM,CAFJC,aAAsCC,sBAAtC,EAAsC;AAAzBC,MAAE,EAAC;AAAsB,GAAtC,EAAmB;sBAAC,MAAI,aAAL;;;;AAAA,GAAnB,CAEI,cADJF,aAAeG,sBAAf,CACI,CAHN,CAII,CALN","names":["id","class","_createElementBlock","_createElementVNode","_createVNode","_component_router_link","to","_component_router_view"],"sourceRoot":"","sources":["C:\\Users\\dell\\Desktop\\projektlogin\\vue-3-authentication-jwt\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"container\">\n      <router-link to=\"/\">Home</router-link> |\n      <router-view />\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    showAdminBoard() {\n      if (this.currentUser && this.currentUser['roles']) {\n        return this.currentUser['roles'].includes('ROLE_ADMIN');\n      }\n      return false;\n    },\n    showModeratorBoard() {\n      if (this.currentUser && this.currentUser['roles']) {\n        return this.currentUser['roles'].includes('ROLE_MODERATOR');\n      }\n      return false;\n    }\n  },\n  methods: {\n    logOut() {\n      this.$store.dispatch('auth/logout');\n      this.$router.push('/login');\n    }\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}