{"ast":null,"code":"/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\nclass EventDispatcher {\n  addEventListener(type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  }\n\n  hasEventListener(type, listener) {\n    if (this._listeners === undefined) return false;\n    const listeners = this._listeners;\n    return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n  }\n\n  removeEventListener(type, listener) {\n    if (this._listeners === undefined) return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      const index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  dispatchEvent(event) {\n    if (this._listeners === undefined) return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this; // Make a copy, in case listeners are removed while iterating.\n\n      const array = listenerArray.slice(0);\n\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n\n      event.target = null;\n    }\n  }\n\n}\n\nexport { EventDispatcher };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/core/EventDispatcher.js"],"names":["EventDispatcher","addEventListener","type","listener","_listeners","undefined","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,eAAN,CAAsB;AAErBC,EAAAA,gBAAgB,CAAEC,IAAF,EAAQC,QAAR,EAAmB;AAElC,QAAK,KAAKC,UAAL,KAAoBC,SAAzB,EAAqC,KAAKD,UAAL,GAAkB,EAAlB;AAErC,UAAME,SAAS,GAAG,KAAKF,UAAvB;;AAEA,QAAKE,SAAS,CAAEJ,IAAF,CAAT,KAAsBG,SAA3B,EAAuC;AAEtCC,MAAAA,SAAS,CAAEJ,IAAF,CAAT,GAAoB,EAApB;AAEA;;AAED,QAAKI,SAAS,CAAEJ,IAAF,CAAT,CAAkBK,OAAlB,CAA2BJ,QAA3B,MAA0C,CAAE,CAAjD,EAAqD;AAEpDG,MAAAA,SAAS,CAAEJ,IAAF,CAAT,CAAkBM,IAAlB,CAAwBL,QAAxB;AAEA;AAED;;AAEDM,EAAAA,gBAAgB,CAAEP,IAAF,EAAQC,QAAR,EAAmB;AAElC,QAAK,KAAKC,UAAL,KAAoBC,SAAzB,EAAqC,OAAO,KAAP;AAErC,UAAMC,SAAS,GAAG,KAAKF,UAAvB;AAEA,WAAOE,SAAS,CAAEJ,IAAF,CAAT,KAAsBG,SAAtB,IAAmCC,SAAS,CAAEJ,IAAF,CAAT,CAAkBK,OAAlB,CAA2BJ,QAA3B,MAA0C,CAAE,CAAtF;AAEA;;AAEDO,EAAAA,mBAAmB,CAAER,IAAF,EAAQC,QAAR,EAAmB;AAErC,QAAK,KAAKC,UAAL,KAAoBC,SAAzB,EAAqC;AAErC,UAAMC,SAAS,GAAG,KAAKF,UAAvB;AACA,UAAMO,aAAa,GAAGL,SAAS,CAAEJ,IAAF,CAA/B;;AAEA,QAAKS,aAAa,KAAKN,SAAvB,EAAmC;AAElC,YAAMO,KAAK,GAAGD,aAAa,CAACJ,OAAd,CAAuBJ,QAAvB,CAAd;;AAEA,UAAKS,KAAK,KAAK,CAAE,CAAjB,EAAqB;AAEpBD,QAAAA,aAAa,CAACE,MAAd,CAAsBD,KAAtB,EAA6B,CAA7B;AAEA;AAED;AAED;;AAEDE,EAAAA,aAAa,CAAEC,KAAF,EAAU;AAEtB,QAAK,KAAKX,UAAL,KAAoBC,SAAzB,EAAqC;AAErC,UAAMC,SAAS,GAAG,KAAKF,UAAvB;AACA,UAAMO,aAAa,GAAGL,SAAS,CAAES,KAAK,CAACb,IAAR,CAA/B;;AAEA,QAAKS,aAAa,KAAKN,SAAvB,EAAmC;AAElCU,MAAAA,KAAK,CAACC,MAAN,GAAe,IAAf,CAFkC,CAIlC;;AACA,YAAMC,KAAK,GAAGN,aAAa,CAACO,KAAd,CAAqB,CAArB,CAAd;;AAEA,WAAM,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACI,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAAiD;AAEhDF,QAAAA,KAAK,CAAEE,CAAF,CAAL,CAAWG,IAAX,CAAiB,IAAjB,EAAuBP,KAAvB;AAEA;;AAEDA,MAAAA,KAAK,CAACC,MAAN,GAAe,IAAf;AAEA;AAED;;AA7EoB;;AAkFtB,SAAShB,eAAT","sourcesContent":["/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nclass EventDispatcher {\r\n\r\n\taddEventListener( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\thasEventListener( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\r\n\r\n\t}\r\n\r\n\tremoveEventListener( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tconst listeners = this._listeners;\r\n\t\tconst listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tconst index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispatchEvent( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tconst listeners = this._listeners;\r\n\t\tconst listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\t// Make a copy, in case listeners are removed while iterating.\r\n\t\t\tconst array = listenerArray.slice( 0 );\r\n\r\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tevent.target = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { EventDispatcher };\r\n"]},"metadata":{},"sourceType":"module"}