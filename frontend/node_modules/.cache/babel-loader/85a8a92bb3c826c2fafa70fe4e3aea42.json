{"ast":null,"code":"import { Texture } from './Texture.js';\nimport { CubeReflectionMapping } from '../constants.js';\n\nclass CubeTexture extends Texture {\n  constructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n    super(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.flipY = false;\n  }\n\n  get images() {\n    return this.image;\n  }\n\n  set images(value) {\n    this.image = value;\n  }\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\nexport { CubeTexture };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/textures/CubeTexture.js"],"names":["Texture","CubeReflectionMapping","CubeTexture","constructor","images","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","undefined","flipY","image","value","prototype","isCubeTexture"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,qBAAT,QAAsC,iBAAtC;;AAEA,MAAMC,WAAN,SAA0BF,OAA1B,CAAkC;AAEjCG,EAAAA,WAAW,CAAEC,MAAF,EAAUC,OAAV,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,SAA5C,EAAuDC,MAAvD,EAA+DC,IAA/D,EAAqEC,UAArE,EAAiFC,QAAjF,EAA4F;AAEtGT,IAAAA,MAAM,GAAGA,MAAM,KAAKU,SAAX,GAAuBV,MAAvB,GAAgC,EAAzC;AACAC,IAAAA,OAAO,GAAGA,OAAO,KAAKS,SAAZ,GAAwBT,OAAxB,GAAkCJ,qBAA5C;AAEA,UAAOG,MAAP,EAAeC,OAAf,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DC,MAA5D,EAAoEC,IAApE,EAA0EC,UAA1E,EAAsFC,QAAtF;AAEA,SAAKE,KAAL,GAAa,KAAb;AAEA;;AAES,MAANX,MAAM,GAAG;AAEZ,WAAO,KAAKY,KAAZ;AAEA;;AAES,MAANZ,MAAM,CAAEa,KAAF,EAAU;AAEnB,SAAKD,KAAL,GAAaC,KAAb;AAEA;;AAvBgC;;AA2BlCf,WAAW,CAACgB,SAAZ,CAAsBC,aAAtB,GAAsC,IAAtC;AAEA,SAASjB,WAAT","sourcesContent":["import { Texture } from './Texture.js';\r\nimport { CubeReflectionMapping } from '../constants.js';\r\n\r\nclass CubeTexture extends Texture {\r\n\r\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\t\timages = images !== undefined ? images : [];\r\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\r\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\tget images() {\r\n\r\n\t\treturn this.image;\r\n\r\n\t}\r\n\r\n\tset images( value ) {\r\n\r\n\t\tthis.image = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nCubeTexture.prototype.isCubeTexture = true;\r\n\r\nexport { CubeTexture };\r\n"]},"metadata":{},"sourceType":"module"}