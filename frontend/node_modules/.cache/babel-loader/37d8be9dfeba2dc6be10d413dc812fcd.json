{"ast":null,"code":"class LoaderUtils {\n  static decodeText(array) {\n    if (typeof TextDecoder !== 'undefined') {\n      return new TextDecoder().decode(array);\n    } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n    // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n    let s = '';\n\n    for (let i = 0, il = array.length; i < il; i++) {\n      // Implicitly assumes little-endian.\n      s += String.fromCharCode(array[i]);\n    }\n\n    try {\n      // merges multi-byte utf-8 characters.\n      return decodeURIComponent(escape(s));\n    } catch (e) {\n      // see #16358\n      return s;\n    }\n  }\n\n  static extractUrlBase(url) {\n    const index = url.lastIndexOf('/');\n    if (index === -1) return './';\n    return url.slice(0, index + 1);\n  }\n\n  static resolveURL(url, path) {\n    // Invalid URL\n    if (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n    if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n      path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n    } // Absolute URL http://,https://,//\n\n\n    if (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n    if (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n    if (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n    return path + url;\n  }\n\n}\n\nexport { LoaderUtils };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/loaders/LoaderUtils.js"],"names":["LoaderUtils","decodeText","array","TextDecoder","decode","s","i","il","length","String","fromCharCode","decodeURIComponent","escape","e","extractUrlBase","url","index","lastIndexOf","slice","resolveURL","path","test","replace"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AAEA,SAAVC,UAAU,CAAEC,KAAF,EAAU;AAE1B,QAAK,OAAOC,WAAP,KAAuB,WAA5B,EAA0C;AAEzC,aAAO,IAAIA,WAAJ,GAAkBC,MAAlB,CAA0BF,KAA1B,CAAP;AAEA,KANyB,CAQ1B;AACA;;;AAEA,QAAIG,CAAC,GAAG,EAAR;;AAEA,SAAM,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGL,KAAK,CAACM,MAA5B,EAAoCF,CAAC,GAAGC,EAAxC,EAA4CD,CAAC,EAA7C,EAAmD;AAElD;AACAD,MAAAA,CAAC,IAAII,MAAM,CAACC,YAAP,CAAqBR,KAAK,CAAEI,CAAF,CAA1B,CAAL;AAEA;;AAED,QAAI;AAEH;AAEA,aAAOK,kBAAkB,CAAEC,MAAM,CAAEP,CAAF,CAAR,CAAzB;AAEA,KAND,CAME,OAAQQ,CAAR,EAAY;AAAE;AAEf,aAAOR,CAAP;AAEA;AAED;;AAEoB,SAAdS,cAAc,CAAEC,GAAF,EAAQ;AAE5B,UAAMC,KAAK,GAAGD,GAAG,CAACE,WAAJ,CAAiB,GAAjB,CAAd;AAEA,QAAKD,KAAK,KAAK,CAAE,CAAjB,EAAqB,OAAO,IAAP;AAErB,WAAOD,GAAG,CAACG,KAAJ,CAAW,CAAX,EAAcF,KAAK,GAAG,CAAtB,CAAP;AAEA;;AAEgB,SAAVG,UAAU,CAAEJ,GAAF,EAAOK,IAAP,EAAc;AAE9B;AACA,QAAK,OAAOL,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAxC,EAA6C,OAAO,EAAP,CAHf,CAK9B;;AACA,QAAK,gBAAgBM,IAAhB,CAAsBD,IAAtB,KAAgC,MAAMC,IAAN,CAAYN,GAAZ,CAArC,EAAyD;AAExDK,MAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAc,yBAAd,EAAyC,IAAzC,CAAP;AAEA,KAV6B,CAY9B;;;AACA,QAAK,mBAAmBD,IAAnB,CAAyBN,GAAzB,CAAL,EAAsC,OAAOA,GAAP,CAbR,CAe9B;;AACA,QAAK,gBAAgBM,IAAhB,CAAsBN,GAAtB,CAAL,EAAmC,OAAOA,GAAP,CAhBL,CAkB9B;;AACA,QAAK,aAAaM,IAAb,CAAmBN,GAAnB,CAAL,EAAgC,OAAOA,GAAP,CAnBF,CAqB9B;;AACA,WAAOK,IAAI,GAAGL,GAAd;AAEA;;AAtEgB;;AA0ElB,SAASf,WAAT","sourcesContent":["class LoaderUtils {\r\n\r\n\tstatic decodeText( array ) {\r\n\r\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\r\n\r\n\t\t\treturn new TextDecoder().decode( array );\r\n\r\n\t\t}\r\n\r\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n\t\tlet s = '';\r\n\r\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t// Implicitly assumes little-endian.\r\n\t\t\ts += String.fromCharCode( array[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\ttry {\r\n\r\n\t\t\t// merges multi-byte utf-8 characters.\r\n\r\n\t\t\treturn decodeURIComponent( escape( s ) );\r\n\r\n\t\t} catch ( e ) { // see #16358\r\n\r\n\t\t\treturn s;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic extractUrlBase( url ) {\r\n\r\n\t\tconst index = url.lastIndexOf( '/' );\r\n\r\n\t\tif ( index === - 1 ) return './';\r\n\r\n\t\treturn url.slice( 0, index + 1 );\r\n\r\n\t}\r\n\r\n\tstatic resolveURL( url, path ) {\r\n\r\n\t\t// Invalid URL\r\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\r\n\r\n\t\t// Host Relative URL\r\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\r\n\r\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\r\n\r\n\t\t}\r\n\r\n\t\t// Absolute URL http://,https://,//\r\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n\r\n\t\t// Data URI\r\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Blob URL\r\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Relative URL\r\n\t\treturn path + url;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { LoaderUtils };\r\n"]},"metadata":{},"sourceType":"module"}