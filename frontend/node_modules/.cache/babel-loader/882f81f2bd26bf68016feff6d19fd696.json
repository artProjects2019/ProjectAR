{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\nfunction WebGLAttributes(gl, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n  const buffers = new WeakMap();\n\n  function createBuffer(attribute, bufferType) {\n    const array = attribute.array;\n    const usage = attribute.usage;\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, buffer);\n    gl.bufferData(bufferType, array, usage);\n    attribute.onUploadCallback();\n    let type;\n\n    if (array instanceof Float32Array) {\n      type = gl.FLOAT;\n    } else if (array instanceof Uint16Array) {\n      if (attribute.isFloat16BufferAttribute) {\n        if (isWebGL2) {\n          type = gl.HALF_FLOAT;\n        } else {\n          throw new Error('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n        }\n      } else {\n        type = gl.UNSIGNED_SHORT;\n      }\n    } else if (array instanceof Int16Array) {\n      type = gl.SHORT;\n    } else if (array instanceof Uint32Array) {\n      type = gl.UNSIGNED_INT;\n    } else if (array instanceof Int32Array) {\n      type = gl.INT;\n    } else if (array instanceof Int8Array) {\n      type = gl.BYTE;\n    } else if (array instanceof Uint8Array) {\n      type = gl.UNSIGNED_BYTE;\n    } else if (array instanceof Uint8ClampedArray) {\n      type = gl.UNSIGNED_BYTE;\n    } else {\n      throw new Error('THREE.WebGLAttributes: Unsupported buffer data format: ' + array);\n    }\n\n    return {\n      buffer: buffer,\n      type: type,\n      bytesPerElement: array.BYTES_PER_ELEMENT,\n      version: attribute.version\n    };\n  }\n\n  function updateBuffer(buffer, attribute, bufferType) {\n    const array = attribute.array;\n    const updateRange = attribute.updateRange;\n    gl.bindBuffer(bufferType, buffer);\n\n    if (updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, array);\n    } else {\n      if (isWebGL2) {\n        gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n      } else {\n        gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n      }\n\n      updateRange.count = -1; // reset range\n    }\n  } //\n\n\n  function get(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    return buffers.get(attribute);\n  }\n\n  function remove(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    const data = buffers.get(attribute);\n\n    if (data) {\n      gl.deleteBuffer(data.buffer);\n      buffers.delete(attribute);\n    }\n  }\n\n  function update(attribute, bufferType) {\n    if (attribute.isGLBufferAttribute) {\n      const cached = buffers.get(attribute);\n\n      if (!cached || cached.version < attribute.version) {\n        buffers.set(attribute, {\n          buffer: attribute.buffer,\n          type: attribute.type,\n          bytesPerElement: attribute.elementSize,\n          version: attribute.version\n        });\n      }\n\n      return;\n    }\n\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    const data = buffers.get(attribute);\n\n    if (data === undefined) {\n      buffers.set(attribute, createBuffer(attribute, bufferType));\n    } else if (data.version < attribute.version) {\n      updateBuffer(data.buffer, attribute, bufferType);\n      data.version = attribute.version;\n    }\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    update: update\n  };\n}\n\nexport { WebGLAttributes };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/webgl/WebGLAttributes.js"],"names":["WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","attribute","bufferType","array","usage","buffer","bindBuffer","bufferData","onUploadCallback","type","Float32Array","FLOAT","Uint16Array","isFloat16BufferAttribute","HALF_FLOAT","Error","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","Uint8ClampedArray","bytesPerElement","BYTES_PER_ELEMENT","version","updateBuffer","updateRange","count","bufferSubData","offset","subarray","get","isInterleavedBufferAttribute","data","remove","deleteBuffer","delete","update","isGLBufferAttribute","cached","set","elementSize","undefined"],"mappings":"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","sourcesContent":["function WebGLAttributes( gl, capabilities ) {\r\n\r\n\tconst isWebGL2 = capabilities.isWebGL2;\r\n\r\n\tconst buffers = new WeakMap();\r\n\r\n\tfunction createBuffer( attribute, bufferType ) {\r\n\r\n\t\tconst array = attribute.array;\r\n\t\tconst usage = attribute.usage;\r\n\r\n\t\tconst buffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( bufferType, buffer );\r\n\t\tgl.bufferData( bufferType, array, usage );\r\n\r\n\t\tattribute.onUploadCallback();\r\n\r\n\t\tlet type;\r\n\r\n\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\ttype = gl.FLOAT;\r\n\r\n\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\r\n\r\n\t\t\t\tif ( isWebGL2 ) {\r\n\r\n\t\t\t\t\ttype = gl.HALF_FLOAT;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n\t\t\ttype = gl.SHORT;\r\n\r\n\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_INT;\r\n\r\n\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n\t\t\ttype = gl.INT;\r\n\r\n\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n\t\t\ttype = gl.BYTE;\r\n\r\n\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\r\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tbuffer: buffer,\r\n\t\t\ttype: type,\r\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\tversion: attribute.version\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\r\n\r\n\t\tconst array = attribute.array;\r\n\t\tconst updateRange = attribute.updateRange;\r\n\r\n\t\tgl.bindBuffer( bufferType, buffer );\r\n\r\n\t\tif ( updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, array );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( isWebGL2 ) {\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateRange.count = - 1; // reset range\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction get( attribute ) {\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\treturn buffers.get( attribute );\r\n\r\n\t}\r\n\r\n\tfunction remove( attribute ) {\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\tconst data = buffers.get( attribute );\r\n\r\n\t\tif ( data ) {\r\n\r\n\t\t\tgl.deleteBuffer( data.buffer );\r\n\r\n\t\t\tbuffers.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction update( attribute, bufferType ) {\r\n\r\n\t\tif ( attribute.isGLBufferAttribute ) {\r\n\r\n\t\t\tconst cached = buffers.get( attribute );\r\n\r\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\r\n\r\n\t\t\t\tbuffers.set( attribute, {\r\n\t\t\t\t\tbuffer: attribute.buffer,\r\n\t\t\t\t\ttype: attribute.type,\r\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\r\n\t\t\t\t\tversion: attribute.version\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\tconst data = buffers.get( attribute );\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\r\n\r\n\t\t} else if ( data.version < attribute.version ) {\r\n\r\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\r\n\r\n\t\t\tdata.version = attribute.version;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tget: get,\r\n\t\tremove: remove,\r\n\t\tupdate: update\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLAttributes };\r\n"]},"metadata":{},"sourceType":"module"}