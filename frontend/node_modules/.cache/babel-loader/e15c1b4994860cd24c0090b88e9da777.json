{"ast":null,"code":"function WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n  let mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  let type, bytesPerElement;\n\n  function setIndex(value) {\n    type = value.type;\n    bytesPerElement = value.bytesPerElement;\n  }\n\n  function render(start, count) {\n    gl.drawElements(mode, count, type, start * bytesPerElement);\n    info.update(count, mode, 1);\n  }\n\n  function renderInstances(start, count, primcount) {\n    if (primcount === 0) return;\n    let extension, methodName;\n\n    if (isWebGL2) {\n      extension = gl;\n      methodName = 'drawElementsInstanced';\n    } else {\n      extension = extensions.get('ANGLE_instanced_arrays');\n      methodName = 'drawElementsInstancedANGLE';\n\n      if (extension === null) {\n        console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    extension[methodName](mode, count, type, start * bytesPerElement, primcount);\n    info.update(count, mode, primcount);\n  } //\n\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n\nexport { WebGLIndexedBufferRenderer };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js"],"names":["WebGLIndexedBufferRenderer","gl","extensions","info","capabilities","isWebGL2","mode","setMode","value","type","bytesPerElement","setIndex","render","start","count","drawElements","update","renderInstances","primcount","extension","methodName","get","console","error"],"mappings":"AAAA,SAASA,0BAAT,CAAqCC,EAArC,EAAyCC,UAAzC,EAAqDC,IAArD,EAA2DC,YAA3D,EAA0E;AAEzE,QAAMC,QAAQ,GAAGD,YAAY,CAACC,QAA9B;AAEA,MAAIC,IAAJ;;AAEA,WAASC,OAAT,CAAkBC,KAAlB,EAA0B;AAEzBF,IAAAA,IAAI,GAAGE,KAAP;AAEA;;AAED,MAAIC,IAAJ,EAAUC,eAAV;;AAEA,WAASC,QAAT,CAAmBH,KAAnB,EAA2B;AAE1BC,IAAAA,IAAI,GAAGD,KAAK,CAACC,IAAb;AACAC,IAAAA,eAAe,GAAGF,KAAK,CAACE,eAAxB;AAEA;;AAED,WAASE,MAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAAgC;AAE/Bb,IAAAA,EAAE,CAACc,YAAH,CAAiBT,IAAjB,EAAuBQ,KAAvB,EAA8BL,IAA9B,EAAoCI,KAAK,GAAGH,eAA5C;AAEAP,IAAAA,IAAI,CAACa,MAAL,CAAaF,KAAb,EAAoBR,IAApB,EAA0B,CAA1B;AAEA;;AAED,WAASW,eAAT,CAA0BJ,KAA1B,EAAiCC,KAAjC,EAAwCI,SAAxC,EAAoD;AAEnD,QAAKA,SAAS,KAAK,CAAnB,EAAuB;AAEvB,QAAIC,SAAJ,EAAeC,UAAf;;AAEA,QAAKf,QAAL,EAAgB;AAEfc,MAAAA,SAAS,GAAGlB,EAAZ;AACAmB,MAAAA,UAAU,GAAG,uBAAb;AAEA,KALD,MAKO;AAEND,MAAAA,SAAS,GAAGjB,UAAU,CAACmB,GAAX,CAAgB,wBAAhB,CAAZ;AACAD,MAAAA,UAAU,GAAG,4BAAb;;AAEA,UAAKD,SAAS,KAAK,IAAnB,EAA0B;AAEzBG,QAAAA,OAAO,CAACC,KAAR,CAAe,uIAAf;AACA;AAEA;AAED;;AAEDJ,IAAAA,SAAS,CAAEC,UAAF,CAAT,CAAyBd,IAAzB,EAA+BQ,KAA/B,EAAsCL,IAAtC,EAA4CI,KAAK,GAAGH,eAApD,EAAqEQ,SAArE;AAEAf,IAAAA,IAAI,CAACa,MAAL,CAAaF,KAAb,EAAoBR,IAApB,EAA0BY,SAA1B;AAEA,GA1DwE,CA4DzE;;;AAEA,OAAKX,OAAL,GAAeA,OAAf;AACA,OAAKI,QAAL,GAAgBA,QAAhB;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKK,eAAL,GAAuBA,eAAvB;AAEA;;AAGD,SAASjB,0BAAT","sourcesContent":["function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\r\n\r\n\tconst isWebGL2 = capabilities.isWebGL2;\r\n\r\n\tlet mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tlet type, bytesPerElement;\r\n\r\n\tfunction setIndex( value ) {\r\n\r\n\t\ttype = value.type;\r\n\t\tbytesPerElement = value.bytesPerElement;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\r\n\r\n\t\tinfo.update( count, mode, 1 );\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( start, count, primcount ) {\r\n\r\n\t\tif ( primcount === 0 ) return;\r\n\r\n\t\tlet extension, methodName;\r\n\r\n\t\tif ( isWebGL2 ) {\r\n\r\n\t\t\textension = gl;\r\n\t\t\tmethodName = 'drawElementsInstanced';\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\r\n\r\n\t\tinfo.update( count, mode, primcount );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n}\r\n\r\n\r\nexport { WebGLIndexedBufferRenderer };\r\n"]},"metadata":{},"sourceType":"module"}