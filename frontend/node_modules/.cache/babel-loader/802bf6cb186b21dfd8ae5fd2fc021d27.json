{"ast":null,"code":"import { Camera } from './Camera.js';\n\nclass OrthographicCamera extends Camera {\n  constructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\n    super();\n    this.type = 'OrthographicCamera';\n    this.zoom = 1;\n    this.view = null;\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n    this.near = near;\n    this.far = far;\n    this.updateProjectionMatrix();\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n    this.zoom = source.zoom;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    return this;\n  }\n\n  setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n    this.updateProjectionMatrix();\n  }\n\n  clearViewOffset() {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n\n    this.updateProjectionMatrix();\n  }\n\n  updateProjectionMatrix() {\n    const dx = (this.right - this.left) / (2 * this.zoom);\n    const dy = (this.top - this.bottom) / (2 * this.zoom);\n    const cx = (this.right + this.left) / 2;\n    const cy = (this.top + this.bottom) / 2;\n    let left = cx - dx;\n    let right = cx + dx;\n    let top = cy + dy;\n    let bottom = cy - dy;\n\n    if (this.view !== null && this.view.enabled) {\n      const scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n      const scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n      left += scaleW * this.view.offsetX;\n      right = left + scaleW * this.view.width;\n      top -= scaleH * this.view.offsetY;\n      bottom = top - scaleH * this.view.height;\n    }\n\n    this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n    this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    return data;\n  }\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\nexport { OrthographicCamera };","map":{"version":3,"sources":["C:/Users/dell/Desktop/projektlogin/vue-3-authentication-jwt/src/games/three/src/cameras/OrthographicCamera.js"],"names":["Camera","OrthographicCamera","constructor","left","right","top","bottom","near","far","type","zoom","view","updateProjectionMatrix","copy","source","recursive","Object","assign","setViewOffset","fullWidth","fullHeight","x","y","width","height","enabled","offsetX","offsetY","clearViewOffset","dx","dy","cx","cy","scaleW","scaleH","projectionMatrix","makeOrthographic","projectionMatrixInverse","invert","toJSON","meta","data","object","prototype","isOrthographicCamera"],"mappings":"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","sourcesContent":["import { Camera } from './Camera.js';\r\n\r\nclass OrthographicCamera extends Camera {\r\n\r\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'OrthographicCamera';\r\n\r\n\t\tthis.zoom = 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\r\n\t\tthis.zoom = source.zoom;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tif ( this.view === null ) {\r\n\r\n\t\t\tthis.view = {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tfullWidth: 1,\r\n\t\t\t\tfullHeight: 1,\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.view.enabled = true;\r\n\t\tthis.view.fullWidth = fullWidth;\r\n\t\tthis.view.fullHeight = fullHeight;\r\n\t\tthis.view.offsetX = x;\r\n\t\tthis.view.offsetY = y;\r\n\t\tthis.view.width = width;\r\n\t\tthis.view.height = height;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tclearViewOffset() {\r\n\r\n\t\tif ( this.view !== null ) {\r\n\r\n\t\t\tthis.view.enabled = false;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tupdateProjectionMatrix() {\r\n\r\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tconst cx = ( this.right + this.left ) / 2;\r\n\t\tconst cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\tlet left = cx - dx;\r\n\t\tlet right = cx + dx;\r\n\t\tlet top = cy + dy;\r\n\t\tlet bottom = cy - dy;\r\n\r\n\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\r\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\r\n\r\n\t\t\tleft += scaleW * this.view.offsetX;\r\n\t\t\tright = left + scaleW * this.view.width;\r\n\t\t\ttop -= scaleH * this.view.offsetY;\r\n\t\t\tbottom = top - scaleH * this.view.height;\r\n\r\n\t\t}\r\n\r\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\r\n\r\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nOrthographicCamera.prototype.isOrthographicCamera = true;\r\n\r\nexport { OrthographicCamera };\r\n"]},"metadata":{},"sourceType":"module"}